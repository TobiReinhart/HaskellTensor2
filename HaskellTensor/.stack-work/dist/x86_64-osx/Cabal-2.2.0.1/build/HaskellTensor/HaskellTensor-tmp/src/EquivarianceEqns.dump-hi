
==================== FINAL INTERFACE ====================
2018-10-05 20:45:28.409009 UTC

interface main:EquivarianceEqns 8043
  interface hash: b8dcefcbe4276a59f9779c911c3e75f4
  ABI hash: 86a89044157a1794439169214f60987f
  export-list hash: e9a0d15c4af853fe9ef121d9068fd8e3
  orphan hash: 198bd87d188d97032ee0c73d0941c8b1
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  EquivarianceEqns.eqn1_1
  EquivarianceEqns.eqn1_1Flat
  EquivarianceEqns.eqn1_2
  EquivarianceEqns.eqn1_3
  EquivarianceEqns.eqn1_4
  EquivarianceEqns.eqn2_2
  EquivarianceEqns.eqn2_2Flat
  EquivarianceEqns.eqn2_3
  EquivarianceEqns.eqn3_3
  EquivarianceEqns.eqn3_3Flat
  EquivarianceEqns.index2Sparse1
  EquivarianceEqns.index2Sparse2
  EquivarianceEqns.index2Sparse3
  EquivarianceEqns.index2Sparse4
  EquivarianceEqns.index2Sparse5
  EquivarianceEqns.index2Sparse6
  EquivarianceEqns.index2SparseConst
  EquivarianceEqns.mkEqn1Sparse
  EquivarianceEqns.mkEqn2Sparse
  EquivarianceEqns.mkEqn3Sparse
  EquivarianceEqns.mkEqn4Sparse
  EquivarianceEqns.mkEqn5Sparse
  EquivarianceEqns.mkEqn6Sparse
  EquivarianceEqns.mkEqnConstSparse
  EquivarianceEqns.mkEqnConstSparseFlat
  EquivarianceEqns.showEqns
  EquivarianceEqns.showEqnsFlat
module dependencies: BasicTensors Index Ivar Pde Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0*
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  BasicTensors dedd0c15f8b4c0144932944b06b71bfe
  exports: 6deae8a55d1eef27674836f7e531f6ba
  delta_20 cc7ac0d02f645bebaef7e7d6a42c65ec
  delta_3 88443abb7d76d02fee3e7a789d30d02a
  delta_9 e75aa262356472dc198559ec7f775732
  flatArea e38bfe165091a2ff6146ada68c291483
  interArea 3958efe6dc6689d27e7175316387343e
  interI_2 eb0e312eaf44de854b31148d758e3c06
  interI_3 57cff971f1b5458cd80b1b0dcdf7525b
  interJ_2 2f0595593070d5b724a7c4cfafd49d1c
  interMetric c50059fc8b234941837aa330e53351d5
  ivar1 87176b309ca169e3ea3fa024b6257a60
  ivar2 c8677a80e53b1bfcca45b8397fe1728b
  ivar3 255b2aa0f0026e0356911561e8e0469e
import  -/  Index 51cf191d1cb6350a504c41afe069a0d6
  exports: 829f159844af2634a0b2006a8d08cd72
  Index 5df768242bb15e89c1079fab7e7d3758
  Lind_20 8a3588434be3c9662430693d2d2e332f
  Lind_9 89b0e08dbee85927dc2463ead2b84188
  Linds_3 562700c5f35c258ae2adef3c77ddc1b1
  Uind_19 bb9e43f50d34b9bc0ad289f9375995d1
  Uind_20 f2c1b76a3e7f0dd431510d7cb9f659a1
  Uind_9 ab8f3576b9e9258982a5d77295330a40
  Uinds_3 63ef11ca566ba01817ced09e779f86a0
  getValInd 974a87ce371ea262afad5f9d63705d90
import  -/  Ivar c1750b764f1dd330bd88e26981136ebc
  exports: bf23971c144b225f9046452a3f6bdb8a
  Ivar 6fb5b1c62e6ccfd9020c45c8471a027a
  addIvar 05c03b458f32d9cc7a5d25e2e9ea4e41
  mkConstIvar 3e3db0384e6c18ba4849c316c911d6a4
  sMultIvar 356c5596a99fee829bee8b24bdb79848
  showIvarRational 86836b8b8b42e6bab13bd30c13c32c0f
import  -/  Pde ba83861ffd7a2a1f0568a32fff4e2555
  exports: fbf38b12116183a99c3d3304cd90a0ec
import  -/  Tensor 9e7e50ba8259015167e1b18f0d26629e
  exports: b4addde23d2a94c7aa7abec683ad90b2
  Tensor 1ac5ddd89ae57be76544d24271fdf653
  Tensor de2cb2f95a4c3ff6ea3ffdde0ef67deb
  tensorAdd b03543f4dfebee64226240002a5665ef
  tensorContractWith_20 1477c6dd935488fa0f3cdeb91dbffde2
  tensorContractWith_3 7df9914f29bbc16d916cd370e5be97ea
  tensorContractWith_9 b638d8248a3b4c115e727ecd66f6bb14
  tensorProductWith 6e1300f3b6ea8f7dd056901f69230be2
  tensorSMult eda9d768e6307a83070b869854214b43
  tensorSub 5ae6e28292f5ee5e3aebc88142b4d18f
  tensorTranspose 3f7c7309fc31e499e4e26c886fbf7b4a
92c8597694cf30536460817a99685d14
  $saddIvar ::
    Ivar.Ivar GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U),1*U)><S,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Ivar.Ivar GHC.Real.Rational)
                   (w2 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w1 of ww { Ivar.Ivar ww1 ww2 ->
                 case w2 of ww3 { Ivar.Ivar ww4 ww5 ->
                 Ivar.Ivar
                   @ GHC.Real.Rational
                   (GHC.Real.$fEnumRatio_$s$c+ ww1 ww4)
                   (Data.IntMap.Strict.unionWithKey
                      @ GHC.Real.Rational
                      (\ (ds :: Data.IntSet.Internal.Key)
                         (x :: GHC.Real.Rational)[OneShot]
                         (y :: GHC.Real.Rational)[OneShot] ->
                       GHC.Real.$fEnumRatio_$s$c+ x y)
                      ww2
                      ww5) } }) -}
898ed50c8dfef9764aa4a10d47443c26
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> EquivarianceEqns.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> EquivarianceEqns.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> EquivarianceEqns.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> EquivarianceEqns.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
fcf27c6b4f73346580fbbddb5cb65448
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
5ea56ba7d7c9aceb8d5e1cec2e9a0849
  $sinsertWithR_$sgo8 ::
    (a1 -> a1 -> a1)
    -> Index.Index 1 1 0 0 1 1 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U))><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
8de6a38d823d2e8ac34949a87c92a05a
  $sinsertWith_$sgo8 ::
    (a1 -> a1 -> a1)
    -> Index.Index 1 1 0 0 1 1 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U))><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
c6eac5849e2d65f04954f4159912821f
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceEqns.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
eabf99765f3ff78eb39e0a10129b9231
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
796328d0877a23abcc1d76952d439922
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceEqns.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
ae62d8dde01ab772a49ed695a769d116
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
5ebd630c4284800e4ff2e6c555ae42ee
  $stensorContractWith_6 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceEqns.$stensorContractWith_7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
630171fe0da79bbc97ff8837c066a4e7
  $stensorContractWith_7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
b55b84154e9aea3e32ce45c6e3de49e6
  $stensorContractWith_8 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceEqns.$stensorContractWith_9 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
edb967d4f97a242030f3cff695d5f7b4
  $stensorContractWith_9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
9d280e36fd2c1f0045cd7c6d237bdd56
  $sunionWith ::
    (a -> a -> a)
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,1*U>, Inline: [~] -}
69d1456cc61790b933eb7271fec47c9f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   EquivarianceEqns.$trModule3
                   EquivarianceEqns.$trModule1) -}
dc909a5562d9b1f1581bf781f7800eaf
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceEqns.$trModule2) -}
38a636c115e284e6554426bcfde16e11
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EquivarianceEqns"#) -}
c3639da84a1c20c6876d79a4ae6e2e62
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceEqns.$trModule4) -}
5c485420b1720f92f915581576e71b11
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
1d710b61e480a8df9167e23d1c374147
  $w$sgo1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
c7ca6d2755ab846df44475897042281a
  $w$sgo13 ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_19 0
    -> Index.Linds_19 0
    -> Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
    -> (# Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1,
          GHC.Base.Maybe a1,
          Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1 #)
  {- Arity: 9,
     Strictness: <L,1*U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U>,
     Inline: [0] -}
ccd85b07c207234b9db819c14b5c3b5c
  $weqn1_1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 0 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        EquivarianceEqns.eqn1_10
                        ww2
                        BasicTensors.ivar4 of ww4 { Unit# ww5 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww5
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } }) -}
a4bae0cc9dfc6fed21c39415cc821b33
  $weqn1_1Flat ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case BasicTensors.$wflatArea w1 of ww1 { Unit# ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ GHC.Real.Rational
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   GHC.Real.$fEnumRatio_$s$c+
                   ww5
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                      <GHC.Real.Rational>_R)_R } } }) -}
8d2d92adefaaf9be83ff038c27b199a8
  $weqn1_2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 0 1 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case BasicTensors.delta_3 of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case EquivarianceEqns.eqn1_13
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<2>_N))
                         (Add0R (<2>_N))
                         <GHC.Real.Rational>_R)_R of ww8 { Tensor.Tensor ww9 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.eqn1_10
                        (Data.Map.Strict.Internal.unionWith
                           @ (Index.Index 1 1 0 0 0 0 2 2)
                           @ GHC.Real.Rational
                           (Tensor.aSymTensor3 @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 2 @ 2)
                           GHC.Real.$fEnumRatio_$s$c+
                           ww5
                             `cast`
                           (Data.Map.Internal.Map
                              ((,,,,,,,)
                                 (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                                 (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Uind_3>_N)_N
                                 (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Lind_3>_N)_N)_N
                              <GHC.Real.Rational>_R)_R
                           (EquivarianceEqns.eqn1_2_go8 ww9))
                        BasicTensors.ivar10 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 2
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_11
                        EquivarianceEqns.$saddIvar
                        ww11
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))) <Index.Uind_3>_N)_N
                              <Index.Ind (2 GHC.TypeNats.+ 1) Index.Lind_3>_N)_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww13
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind (Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Lind_20>_N)_N
                         <Index.Ind 0 Index.Uind_19>_N
                         <Index.Ind 0 Index.Lind_19>_N
                         <Index.Ind 0 Index.Uind_9>_N
                         <Index.Ind 0 Index.Lind_9>_N
                         <Index.Ind 1 Index.Uind_3>_N
                         <Index.Ind 2 Index.Lind_3>_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } }) -}
00956b6f23dc9a346de89365516f0332
  $weqn1_3 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 1 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w2 w3 of ww { Unit# ww2 ->
                 case BasicTensors.delta_9 of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.$winterMetric w w1 of ww8 { Unit# ww9 ->
                 case BasicTensors.delta_20 of ww10 { Tensor.Tensor ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww9
                        ww11 of ww12 { Unit# ww13 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        EquivarianceEqns.eqn1_10
                        (EquivarianceEqns.$sunionWith
                           @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           GHC.Real.$fEnumRatio_$s$c+
                           ww5
                             `cast`
                           (Data.Map.Internal.Map
                              ((,,,,,,,)
                                 (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                                 (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                                 (Index.Ind (Add0L (<1>_N)) <Index.Lind_9>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                              <GHC.Real.Rational>_R)_R
                           ww13
                             `cast`
                           (Data.Map.Internal.Map
                              ((,,,,,,,)
                                 (Index.Ind (Add0L (<1>_N)) <Index.Uind_20>_N)_N
                                 (Index.Ind (Add0L (<1>_N)) <Index.Lind_20>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                                 (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Uind_9>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                                 (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                              <GHC.Real.Rational>_R)_R)
                        BasicTensors.ivar14 of ww14 { Unit# ww15 ->
                 case Tensor.$wtensorContractWith_9
                        @ 0
                        @ 1
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 2
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.eqn1_7
                        EquivarianceEqns.$saddIvar
                        ww15
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind
                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_9>_N)_N
                              <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_9>_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww16 { Unit# ww17 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww17
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind (Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Lind_20>_N)_N
                         <Index.Ind 0 Index.Uind_19>_N
                         <Index.Ind 0 Index.Lind_19>_N
                         <Index.Ind 0 Index.Uind_9>_N
                         <Index.Ind 1 Index.Lind_9>_N
                         <Index.Ind 1 Index.Uind_3>_N
                         <Index.Ind 1 Index.Lind_3>_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } }) -}
194fbee22e9b790e40235ff5aa1f9cad
  $weqn2_2 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 0 0 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w1 w2 of ww { Unit# ww2 ->
                 case BasicTensors.interI_2 w of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_7
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (AddDef (<1>_N, <2>_N) ; Sym (AddDef (<2>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        EquivarianceEqns.eqn1_10
                        ww9
                        BasicTensors.ivar4 of ww10 { Unit# ww11 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww11
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<2>_N)) <Index.Lind_3>_N)_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } }) -}
cb98c11da1ffe0365903ff8128b31c26
  $weqn2_2Flat ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 0 0 2) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.$winterArea w1 w2 of ww { Unit# ww2 ->
                 case BasicTensors.interI_2 w of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_7
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (AddDef (<1>_N, <2>_N) ; Sym (AddDef (<2>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case BasicTensors.$wflatArea w2 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww9
                        ww11 of ww12 { Unit# ww13 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ GHC.Real.Rational
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   GHC.Real.$fEnumRatio_$s$c+
                   ww13
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<2>_N)) <Index.Lind_3>_N)_N)_N
                      <GHC.Real.Rational>_R)_R } } } } } }) -}
a681740f32a9b196d2489b8bc5e9192c
  $weqn2_3 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 1 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.interJ_2 w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.$winterArea w2 w3 of ww2 { Unit# ww3 ->
                 case BasicTensors.interI_2 w of ww4 { Tensor.Tensor ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww5 of ww6 { Unit# ww7 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_7
                        GHC.Real.$fEnumRatio_$s$c+
                        ww7
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (AddDef (<1>_N, <2>_N) ; Sym (AddDef (<2>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww9 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.eqn2_5
                        GHC.Real.$fEnumRatio_$s$c+
                        ww11
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case EquivarianceEqns.eqn2_1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww14 { Tensor.Tensor ww15 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.eqn1_10
                        (EquivarianceEqns.$sunionWith
                           @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           GHC.Real.$fEnumRatio_$s$c+
                           (EquivarianceEqns.eqn2_3_go1 ww13)
                           (EquivarianceEqns.eqn2_3_go8 ww15))
                        BasicTensors.ivar10 of ww16 { Unit# ww17 ->
                 case Tensor.$wtensorContractWith_20
                        @ 0
                        @ 1
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 2
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.eqn1_7
                        EquivarianceEqns.$saddIvar
                        ww17
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind
                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                              <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Lind_3>_N)_N)_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 Tensor.$wtensorContractWith_3
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww19
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         <Index.Ind 0 Index.Uind_20>_N
                         <Index.Ind 1 Index.Lind_20>_N
                         <Index.Ind 0 Index.Uind_19>_N
                         <Index.Ind 0 Index.Lind_19>_N
                         <Index.Ind 1 Index.Uind_9>_N
                         <Index.Ind 1 Index.Lind_9>_N
                         (Index.Ind (Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                         (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Lind_3>_N)_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } } } }) -}
279fa2b1851990d1ebc7722e2b362015
  $weqn3_3 ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 1 0 0 1 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.interJ_2 w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.$winterArea w2 w3 of ww2 { Unit# ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.interI_3 w of ww7 { Tensor.Tensor ww8 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 3
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 3
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind (AddDef (<2>_N, <1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R
                        ww8 of ww9 { Unit# ww10 ->
                 case Tensor.$wtensorContractWith_3
                        @ 2
                        @ 3
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                        EquivarianceEqns.eqn3_1
                        GHC.Real.$fEnumRatio_$s$c+
                        ww10
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<3>_N) ; Sym (AddDef (<2>_N, <1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (AddDef (<1>_N, <3>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 2
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_11
                        GHC.Real.$fEnumRatio_$s$c+
                        ww12
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              <Index.Ind 1 Index.Uind_20>_N
                              <Index.Ind 1 Index.Lind_20>_N
                              <Index.Ind 1 Index.Uind_19>_N
                              <Index.Ind 0 Index.Lind_19>_N
                              <Index.Ind 0 Index.Uind_9>_N
                              <Index.Ind 1 Index.Lind_9>_N
                              (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind (Sym (AddDef (<2>_N, <1>_N))) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 1
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.eqn1_7
                        GHC.Real.$fEnumRatio_$s$c+
                        ww14
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              <Index.Ind 1 Index.Uind_20>_N
                              <Index.Ind 1 Index.Lind_20>_N
                              <Index.Ind 1 Index.Uind_19>_N
                              <Index.Ind 0 Index.Lind_19>_N
                              <Index.Ind 0 Index.Uind_9>_N
                              <Index.Ind 1 Index.Lind_9>_N
                              (Index.Ind (Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        EquivarianceEqns.eqn1_10
                        ww16
                        BasicTensors.ivar4 of ww17 { Unit# ww18 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   EquivarianceEqns.$saddIvar
                   ww18
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } } }) -}
239d1b34459c85c4ff0b8cda82208877
  $weqn3_3Flat ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 1 0 0 1 0 1) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case BasicTensors.interJ_2 w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.$winterArea w2 w3 of ww2 { Unit# ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.interI_3 w of ww7 { Tensor.Tensor ww8 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 3
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 3
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind (AddDef (<2>_N, <1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R
                        ww8 of ww9 { Unit# ww10 ->
                 case Tensor.$wtensorContractWith_3
                        @ 2
                        @ 3
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                        EquivarianceEqns.eqn3_1
                        GHC.Real.$fEnumRatio_$s$c+
                        ww10
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0R (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind
                                 (Add0R (<3>_N) ; Sym (AddDef (<2>_N, <1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind
                                 (AddDef (<1>_N, <3>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                                 <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 2
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceEqns.eqn1_11
                        GHC.Real.$fEnumRatio_$s$c+
                        ww12
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              <Index.Ind 1 Index.Uind_20>_N
                              <Index.Ind 1 Index.Lind_20>_N
                              <Index.Ind 1 Index.Uind_19>_N
                              <Index.Ind 0 Index.Lind_19>_N
                              <Index.Ind 0 Index.Uind_9>_N
                              <Index.Ind 1 Index.Lind_9>_N
                              (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind (Sym (AddDef (<2>_N, <1>_N))) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 1
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        EquivarianceEqns.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceEqns.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceEqns.eqn1_7
                        GHC.Real.$fEnumRatio_$s$c+
                        ww14
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              <Index.Ind 1 Index.Uind_20>_N
                              <Index.Ind 1 Index.Lind_20>_N
                              <Index.Ind 1 Index.Uind_19>_N
                              <Index.Ind 0 Index.Lind_19>_N
                              <Index.Ind 0 Index.Uind_9>_N
                              <Index.Ind 1 Index.Lind_9>_N
                              (Index.Ind (Sym (Add0L (<1>_N))) <Index.Uind_3>_N)_N
                              (Index.Ind (Sym (AddDef (<1>_N, <1>_N))) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 case BasicTensors.$wflatArea w3 of ww17 { Unit# ww18 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww16
                        ww18 of ww19 { Unit# ww20 ->
                 Tensor.$wtensorContractWith_20
                   @ 0
                   @ 1
                   @ GHC.Real.Rational
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   EquivarianceEqns.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceEqns.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceEqns.eqn1_7
                   GHC.Real.$fEnumRatio_$s$c+
                   ww20
                     `cast`
                   (Data.Map.Internal.Map
                      ((,,,,,,,)
                         (Index.Ind
                            (Add0R (<1>_N) ; Sym (Add0L (<1>_N))) <Index.Uind_20>_N)_N
                         <Index.Ind (1 GHC.TypeNats.+ 1) Index.Lind_20>_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Uind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Lind_19>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_9>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                         (Index.Ind (Add0R (<0>_N)) <Index.Uind_3>_N)_N
                         (Index.Ind (Add0R (<1>_N)) <Index.Lind_3>_N)_N)_N
                      <GHC.Real.Rational>_R)_R } } } } } } } } } }) -}
e1eaecbce6a58760772426f4ab03a14f
  $windex2Sparse1 ::
    Index.Linds_20 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_3 1)
                   (ww2 :: Index.Linds_3 1) ->
                 (# case ww1 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_3 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case ww2 of wild2 { Index.UnsafemkInd s1 ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    s1 of wild3 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild4 {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } } }
                         } in
                         case x of wild2 {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.+# (GHC.Prim.+# 1# a#) 1#) } } } #)) -}
9a64019406aea3b075eb2628c7922b65
  $windex2Sparse2 ::
    Index.Linds_20 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 2
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_3 1)
                   (ww2 :: Index.Linds_3 2) ->
                 (# case ww1 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_3 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case ww2 of wild2 { Index.UnsafemkInd s1 ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    s1 of wild3 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild4 {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } } }
                         } in
                         case x of wild2 {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         case ww2 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                1#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild4 {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           1#)
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           2#)
                                        1#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           3#)
                                        1#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           4#)
                                        1#) } } } } } } #)) -}
7fdf1b7c8582feed1957cb5d4b953b93
  $windex2Sparse3 ::
    Index.Linds_20 1
    -> Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Linds_9 1)
                   (ww2 :: Index.Uinds_3 1)
                   (ww3 :: Index.Linds_3 1) ->
                 (# case ww2 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_3 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case ww3 of wild2 { Index.UnsafemkInd s1 ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    s1 of wild3 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild4 {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } } }
                         } in
                         case x of wild2 {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         case ww1 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         105#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } } } #)) -}
23c89cb65d8b8b56ee9186a7b7fe4995
  $windex2Sparse4 ::
    Index.Linds_20 1
    -> Index.Uinds_9 1
    -> Index.Linds_3 2
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_9 1)
                   (ww2 :: Index.Linds_3 2) ->
                 (# case ww1 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_9 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_9 x of a# { DEFAULT ->
                         case ww2 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild4 {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         case ww2 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                1#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild4 {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           1#)
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           2#)
                                        1#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           3#)
                                        1#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              21#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           4#)
                                        1#) } } } } } } #)) -}
6c49672373fb32e46610b7c06580f753
  $windex2Sparse5 ::
    Index.Linds_20 1
    -> Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_9 1)
                   (ww2 :: Index.Linds_9 1)
                   (ww3 :: Index.Linds_3 1) ->
                 (# case ww1 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_9 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_9 x of a# { DEFAULT ->
                         case ww3 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild4 {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         case ww2 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         105#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } } } #)) -}
a6f9b9a495281f018f0ae7275641ad25
  $windex2Sparse6 ::
    Index.Linds_20 1
    -> Index.Uinds_19 1
    -> Index.Linds_9 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_19 1)
                   (ww2 :: Index.Linds_9 1)
                   (ww3 :: Index.Linds_3 1) ->
                 (# case ww1 of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_19
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_19 x of a# { DEFAULT ->
                         case ww3 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild4 {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } } } },
                    case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_20
                           0#
                           s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                         case ww2 of wild2 { Index.UnsafemkInd s1 ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                s1 of wild3 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         105#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } } } #)) -}
938ab8b858d723352a48e8cb66368cdf
  $windex2SparseConst ::
    Index.Uinds_3 1
    -> Index.Linds_3 1 -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_3 1) (ww1 :: Index.Linds_3 1) ->
                 (# case ww of wild { Index.UnsafemkInd s ->
                    case Data.Sequence.Internal.$wlookup @ Index.Uind_3 0# s of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case ww1 of wild2 { Index.UnsafemkInd s1 ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    s1 of wild3 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild4 {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } } }
                         } in
                         case x of wild2 {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } } },
                    EquivarianceEqns.eqn1_8 #)) -}
d3686afd667c480ce13e303fa816a433
  $wlvl ::
    GHC.Real.Rational
    -> GHC.Real.Rational
    -> Data.IntMap.Internal.IntMap GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,1*U(U,U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.Real.Rational)
                   (ww :: GHC.Real.Rational)
                   (ww1 :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                 (# GHC.Real.$fFractionalRatio_$s$c* w ww,
                    letrec {
                      go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                            -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                        case ds of wild {
                          Data.IntMap.Internal.Bin dt1 dt2 l r
                          -> case go l of dt3 { DEFAULT ->
                             case go r of dt4 { DEFAULT ->
                             Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                          Data.IntMap.Internal.Tip dt1 x
                          -> case w of ww2 { GHC.Real.:% ww3 ww4 ->
                             case x of ww5 { GHC.Real.:% ww6 ww7 ->
                             case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger ww3 ww6)
                                    (GHC.Integer.Type.timesInteger
                                       ww4
                                       ww7) of ww8 { (#,#) ww9 ww10 ->
                             Data.IntMap.Internal.Tip
                               @ GHC.Real.Rational
                               dt1
                               (GHC.Real.:% @ GHC.Integer.Type.Integer ww9 ww10) } } }
                          Data.IntMap.Internal.Nil
                          -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                    } in
                    go ww1 #)) -}
3e136ca97434315940e92bf90413256c
  $wmkEqnConstSparse ::
    Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 1 1) a
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar a)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 1 1) a) ->
                 EquivarianceEqns.mkEqnConstSparse2
                   @ a
                   (EquivarianceEqns.$sfromList
                      @ a
                      (EquivarianceEqns.mkEqnConstSparse1
                         @ a
                         (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                         ww))) -}
3db7ca8c59c89c780b4cf0c8b8524b69
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
15ea3247bb82800890cc5ea3157c8e28
  eqn1_1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 0 0 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn1_1 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
28655798fa3a8d0c3008da8327643109
  eqn1_10 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U(U,U)><S,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w1 of ww { Ivar.Ivar ww1 ww2 ->
                 case EquivarianceEqns.$wlvl w ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
19627235d5340c59ec18ae084194ef25
  eqn1_11 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceEqns.eqn1_8, EquivarianceEqns.eqn1_12)) -}
887673559c1b203365e50e268739cca2
  eqn1_12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
1b0a6ef984767a1852e6091e909e3e28
  eqn1_13 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_3 of ww { Tensor.Tensor ww1 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww1 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorTranspose
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        EquivarianceEqns.eqn1_14
                        EquivarianceEqns.eqn1_7
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (AddDef (<1>_N, <1>_N)) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                 case BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww8 of ww9 { Unit# ww10 ->
                 Tensor.Tensor
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww10 } } } } }) -}
22934262b3119ade444a91a12170e292
  eqn1_14 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
5e8c7c8a9a0ee666d33c5d6dd6aba2f9
  eqn1_1Flat ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 0 0 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn1_1Flat w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
f61ade4f92eb967f2a7a335c974e4a6b
  eqn1_2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 0 0 1 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn1_2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
e8394ec1ffb131c2d54314f497cd1c97
  eqn1_2_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
fe352dbb05bb4902dd1a2c32ec031f4a
  eqn1_3 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 0 1 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn1_3 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
87196d66631068545cecea1ba08f4cd7
  eqn1_4 :: Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
  {- Unfolding: InlineRule (0, True, True) BasicTensors.delta_3 -}
d82fb7bec2f16eb0153270a4e9eef50d
  eqn1_7 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceEqns.eqn1_9, EquivarianceEqns.eqn1_8)) -}
3c34ff5b8343417d58fd593955717bf4
  eqn1_8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
11a5db8bb246d53e380754041f6fce24
  eqn1_9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
55e57654d41c48de3f8463d6ca43fb1a
  eqn2_1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case BasicTensors.delta_3 of ww4 { Tensor.Tensor ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww5 of ww6 { Unit# ww7 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww7
                          `cast`
                        (Data.Map.Internal.Map
                           ((,,,,,,,)
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_20>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                              (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Uind_9>_N)_N
                              (Index.Ind (Add0R (<1>_N)) <Index.Lind_9>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Uind_3>_N)_N
                              (Index.Ind (Add0L (<1>_N)) <Index.Lind_3>_N)_N)_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww9 } } } } }) -}
d054facbd025cb6e1389fe0ba0090bce
  eqn2_2 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 1 0 0 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn2_2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
ed9483647a5056977ef1bf1b72a137c2
  eqn2_2Flat ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 1 0 0 2 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn2_2Flat w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
87f78a137befac2127fadfeca96c50f8
  eqn2_3 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 1 1 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn2_3 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
cc8f714adadc0f35420af3ed94505dfe
  eqn2_3_go1 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
32dde90f24c721a1c53460d6680bf20c
  eqn2_3_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
1eed368746ffce1e1bd8e189dbab22da
  eqn2_5 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceEqns.eqn1_8, EquivarianceEqns.eqn1_8)) -}
4da4f921c5548e84dfbd49d0e0665f43
  eqn3_1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceEqns.eqn1_12, EquivarianceEqns.eqn3_2)) -}
e8c6ff45cb2b52929511ea3820c0e016
  eqn3_2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
675f31aa958718219debc695979cbcba
  eqn3_3 ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 1 0 0 1 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn3_3 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
5bd0e277875bd77472ef93f4f3918593
  eqn3_3Flat ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 1 0 0 1 0 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case EquivarianceEqns.$weqn3_3Flat w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
72f5decc323d32ad56fe2acbc9edeaa1
  index2Sparse1 ::
    Index.Index 0 1 0 0 0 0 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),A,A,A,A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse1
                        ww2
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
068bda8ab0ebbcef134b3715dfebfdd1
  index2Sparse2 ::
    Index.Index 0 1 0 0 0 0 1 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),A,A,A,A,1*U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 1 2) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse2
                        ww2
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
def18ce740f0315c721643c4f4b2cf73
  index2Sparse3 ::
    Index.Index 0 1 0 0 0 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,1*U(U),A,A,A,1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 1 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse3
                        ww2
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
d457598a8bccce16691c8e011cf9ee95
  index2Sparse4 ::
    Index.Index 0 1 0 0 1 0 0 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),A,A,1*U(U),A,A,U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 1 0 0 2) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse4
                        ww2
                        ww5
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
43cd348d0aaa87b9a5db65898d906fbc
  index2Sparse5 ::
    Index.Index 0 1 0 0 1 1 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,1*U(U),A,A,1*U(U),1*U(U),A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 1 1 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse5
                        ww2
                        ww5
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
5840a0e351ab5e655135bceffe6de346
  index2Sparse6 ::
    Index.Index 0 1 1 0 0 1 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,1*U(U),1*U(U),A,A,1*U(U),A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 1 0 0 1 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2Sparse6
                        ww2
                        ww3
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
c7a99c2ad66b658183bb88ed06c6c64b
  index2SparseConst ::
    Index.Index 0 0 0 0 0 0 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceEqns.$windex2SparseConst
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
3e6aa2db07e386eb01b91074f468ad72
  mkEqn1Sparse ::
    Tensor.Tensor 0 1 0 0 0 0 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 0 0 0 0 1 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn1Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
10523dcbe8e5b8b9f06c136f2bc1a9e3
  mkEqn1Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
08de88a0a5dc3ef369cbded15ab694a8
  mkEqn2Sparse ::
    Tensor.Tensor 0 1 0 0 0 0 1 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 0 0 0 0 1 2 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn2Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
1c603d5029e67e105dd2af7398f7054a
  mkEqn2Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
6d6fd4a2dcad7a755130b17d3c658eab
  mkEqn3Sparse ::
    Tensor.Tensor 0 1 0 0 0 1 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 0 0 0 1 1 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn3Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
cca86485c72486697cd66ae6829b74a7
  mkEqn3Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 1 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
9276dc81a3506154e7435e57f848e3f0
  mkEqn4Sparse ::
    Tensor.Tensor 0 1 0 0 1 0 0 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 0 0 1 0 0 2 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn4Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
3f38150f580f83c5070c69d0f7595a72
  mkEqn4Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 1 0 0 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
f3c57ed8ae07262036a677030df95542
  mkEqn5Sparse ::
    Tensor.Tensor 0 1 0 0 1 1 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 0 0 1 1 0 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn5Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
6b4ed830960aa2779ba4991a312676e4
  mkEqn5Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 1 1 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
512b9a62f4b560b9b70c68e248b5d70b
  mkEqn6Sparse ::
    Tensor.Tensor 0 1 1 0 0 1 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 1 1 0 0 1 0 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqn6Sparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
0976f20f74191d9a43e3634da1a326e8
  mkEqn6Sparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 1 0 0 1 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
bac4327cf53946d31ed0521542939366
  mkEqnConstSparse ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 a
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar a)
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Tensor.Tensor 0 0 0 0 0 0 1 1 a) ->
                 case w of ww { Tensor.Tensor ww1 ->
                 EquivarianceEqns.$wmkEqnConstSparse @ a ww1 }) -}
ac3deefb4386375514ea320f3153fead
  mkEqnConstSparse1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
1b6a688cc3a8c5e0599e2c3abe41066e
  mkEqnConstSparse2 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar a)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
5aab3ca1a14086ac683e435f1d1a69a5
  mkEqnConstSparseFlat ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 0 1 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceEqns.$sfromList
                   @ a
                   (EquivarianceEqns.mkEqnConstSparse1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
59a9645b21f6c189023db12f299074ce
  showEqns ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar GHC.Real.Rational)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar GHC.Real.Rational)) ->
                 GHC.CString.unpackAppendCString#
                   EquivarianceEqns.showEqns3
                   (case EquivarianceEqns.showEqns_go1
                           (GHC.Types.[] @ GHC.Types.Char)
                           (EquivarianceEqns.showEqns_go13 map1) of wild {
                      [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                      : ds1 xs
                      -> GHC.Base.++
                           @ GHC.Types.Char
                           xs
                           EquivarianceEqns.showEqns1 })) -}
2597b9bd806733e7094b96b87c635218
  showEqns1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   EquivarianceEqns.showEqns2) -}
b3ba756a6c16e2fcf4bcf1bf4471952e
  showEqns2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
a3576ca0617a1f7633dada43e733ce16
  showEqns3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
19815f52ade9889b0f554ccaacf824be
  showEqnsFlat ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational) ->
                 GHC.CString.unpackAppendCString#
                   EquivarianceEqns.showEqns3
                   (case EquivarianceEqns.showEqnsFlat_go1
                           (GHC.Types.[] @ GHC.Types.Char)
                           (EquivarianceEqns.showEqnsFlat_go13 map1) of wild {
                      [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                      : ds1 xs
                      -> GHC.Base.++
                           @ GHC.Types.Char
                           xs
                           EquivarianceEqns.showEqns1 })) -}
cbd418d18b2d0da1f0d81fb35b330603
  showEqnsFlat_go1 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Base.String
    -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
27eefcc3039f5f1be7ccd41d2292cbdd
  showEqnsFlat_go13 ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
e805224115aed3a1879eddb6f14e2289
  showEqns_go1 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Base.String
    -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
b77030b0d0a2ec009794167ce157d0e5
  showEqns_go13 ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) (Ivar.Ivar GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
"SPEC/EquivarianceEqns addIvar @ Rational" [orphan] [0] forall (w :: GHC.Num.Num
                                                                       GHC.Real.Rational)
  Ivar.addIvar @ (GHC.Real.Ratio GHC.Integer.Type.Integer) w
  = EquivarianceEqns.$saddIvar
"SPEC/EquivarianceEqns fromList @ (Int, Int) _" [orphan] forall @ a
                                                                ($dOrd :: GHC.Classes.Ord
                                                                            (GHC.Types.Int,
                                                                             GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = EquivarianceEqns.$sfromList @ a
"SPEC/EquivarianceEqns unionWith @ (Index 1 1 0 0 1 1 1 1) _" [orphan] forall @ a
                                                                              ($dOrd :: GHC.Classes.Ord
                                                                                          (Index.Index
                                                                                             1
                                                                                             1
                                                                                             0
                                                                                             0
                                                                                             1
                                                                                             1
                                                                                             1
                                                                                             1))
  Data.Map.Strict.Internal.unionWith @ (Index.Uinds_20 1,
                                        Index.Linds_20 1, Index.Uinds_19 0, Index.Linds_19 0,
                                        Index.Uinds_9 1, Index.Linds_9 1, Index.Uinds_3 1,
                                        Index.Linds_3 1)
                                     @ a
                                     $dOrd
  = EquivarianceEqns.$sunionWith @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

