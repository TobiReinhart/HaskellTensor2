
==================== FINAL INTERFACE ====================
2019-01-22 14:46:25.045073 UTC

interface main:Integrabillity [hpc] 8043
  interface hash: 04f624c2b06384b74b4c0f6048400d91
  ABI hash: 21aa7f9f150c16895df3540503adc405
  export-list hash: d4f8116907b124ed0ac26b53ce21db97
  orphan hash: 91acb3e7361ed053e58a3ca5a5840a96
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Integrabillity.areaMetricMetric1
  Integrabillity.areaMetricMetric1intCond
  Integrabillity.densityEqnArea1
  Integrabillity.densityEqnArea2
  Integrabillity.densityEqnMetric1
  Integrabillity.densityEqnMetric2
  Integrabillity.flatMetricInter
  Integrabillity.flatMetricInterProlong
  Integrabillity.index2SparseAreaM
  Integrabillity.index2SparseAreaMintCond
  Integrabillity.index2SparseBlock1Eta
  Integrabillity.index2SparseCond1
  Integrabillity.index2SparseCond1Zero
  Integrabillity.index2SparseCond2
  Integrabillity.index2SparseCond3
  Integrabillity.index2SparseDens1
  Integrabillity.index2SparseDens1Area
  Integrabillity.index2SparseDens2
  Integrabillity.index2SparseDens2Area
  Integrabillity.index2SparseProjector
  Integrabillity.index2SparseProjector2
  Integrabillity.index2SparseintCond2_1
  Integrabillity.index2SparseintCond2_1Symbol
  Integrabillity.index2SparseintCond2_1SymbolPure
  Integrabillity.index2SparseintCond2_1SymbolRed
  Integrabillity.int1Test
  Integrabillity.int1Test2
  Integrabillity.int1Test3
  Integrabillity.int1Zero
  Integrabillity.intCond1
  Integrabillity.intCond1RelFac
  Integrabillity.intCond1Zero
  Integrabillity.intCond1noFactor
  Integrabillity.intCond2
  Integrabillity.intCond2_1
  Integrabillity.intCond2_1Symbol
  Integrabillity.intCond2_1SymbolPure
  Integrabillity.intCond2_1SymbolRed
  Integrabillity.intCond2_1SymbolRedWrong
  Integrabillity.intCond3
  Integrabillity.intCondComp
  Integrabillity.intCondCompNoSym
  Integrabillity.intCondCompZero
  Integrabillity.intCondOrd2
  Integrabillity.intCondSym
  Integrabillity.intRankDef1
  Integrabillity.intRankDef2
  Integrabillity.intRankDef3
  Integrabillity.intRankDef4
  Integrabillity.intRankDef5
  Integrabillity.inter4Factor
  Integrabillity.inter4noFactor
  Integrabillity.inter6Factor
  Integrabillity.inter6noFactor
  Integrabillity.interProTest
  Integrabillity.mkEqnSparseAreaM
  Integrabillity.mkEqnSparseAreaMintCond
  Integrabillity.mkEqnSparseBlock1Eta
  Integrabillity.mkEqnSparseCond1
  Integrabillity.mkEqnSparseCond1Zero
  Integrabillity.mkEqnSparseCond2
  Integrabillity.mkEqnSparseCond3
  Integrabillity.mkEqnSparseDens1
  Integrabillity.mkEqnSparseDens1Area
  Integrabillity.mkEqnSparseDens2
  Integrabillity.mkEqnSparseDens2Area
  Integrabillity.mkEqnSparseProjector
  Integrabillity.mkEqnSparseProjector2
  Integrabillity.mkEqnSparseflatMetricInter
  Integrabillity.mkEqnSparseflatMetricInterProlong
  Integrabillity.mkEqnSparseintCond2_1
  Integrabillity.mkEqnSparseintCond2_1New
  Integrabillity.mkEqnSparseintCond2_1Symbol
  Integrabillity.mkEqnSparseintCond2_1SymbolPure
  Integrabillity.mkEqnSparseintCond2_1SymbolRed
  Integrabillity.mkEqnSparseintCond2_1SymbolRedFull
  Integrabillity.mkEqnSparseintCondComp
  Integrabillity.mkEqnSparseintCondCompNew
  Integrabillity.mkEqnSparseintCondCompNoSym
  Integrabillity.mkEqnSparseintCondOrd2
  Integrabillity.mkEqnSparseintCondSym
  Integrabillity.mkEqnSparseintRankDef1
  Integrabillity.mkEqnSparseintRankDef3
  Integrabillity.mkEqnSparseintRankDef4
  Integrabillity.mkEqnSparseinter6Mat
  Integrabillity.mkEqnSparseinterMat
  Integrabillity.mkEqnSparseprolongation1AI_ACK
  Integrabillity.mkEqnSparseprolongation1AI_AI
  Integrabillity.mkEqnSparseprolongation2AaBb
  Integrabillity.mkEqnSparseprolongation2AaBbC
  Integrabillity.projectorMatrix
  Integrabillity.projectorMatrix2
  Integrabillity.projectorMatrixMixed1
  Integrabillity.projectorMatrixMixed2
  Integrabillity.projectorMatrixSym
  Integrabillity.prolongation1AI_ACK
  Integrabillity.prolongation1AI_AI
  Integrabillity.prolongation2AaBb
  Integrabillity.prolongation2AaBbC
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors eb5b51414d2c3c3fc45fe3497d3f932c
  exports: 7bd1d97902a82e67c502cc891749fa89
  aSymI_2 85b96c1b469ca0318ab6d34ecbdffdf1
  delta_20 162a995d96c74a333b7936c74f9c8654
  delta_3 1b779d8bf6d3a2de4e2c39cbf2952342
  delta_9 71b32e9191ec29699321bcbae6e0b83a
  eta f2ace2f4551b3fed93a5720ce3ca47ff
  etaAbs 4f5a16ad1cef86319230c5f43722beec
  flatArea 88f143656f05841ce5f6bc5818ab7cee
  interArea 068502db5feb6a9b80dde94e3ee55a07
  interAreanoFactor bf814bb1ddc2927febc9b455788da211
  interEqn1_2 c92cf830c592d74911b3103d773bcb06
  interEqn1_3 5671d20c260b1f499f7d26c836568368
  interI_2 1cc4e11cb2f489f60da1e2a046efdfb6
  interI_Area 52c33ccf81564a656f96a6d5c2f1224a
  interJ_2 8db0b844b970f4e31b4fc75bf68aeb0f
  interJ_2noFactor 1a8a3d575996f7887c26c652334778f7
  interJ_Area fbadc3c9a32179c7d75c11f3e75c3e1d
  interJ_AreanoFactor f361114dbf0dffaec807e38dd88b7cfe
  interMetric 53b357e50bf8477d50d697f15bb13184
  interMetricnoFactor dbffc5c0e0dc39af7a1f24e9614d4bfd
  invEta a329957d4f2e507cf294c76791a875aa
  symI_2 c606af9a8bd025a465468256b50f9dfa
  symI_Area 9713a8f5583dadaf4ad0ce141fa5a8af
import  -/  EquivarianceEqns 91d578dc64c09630cc293b0e537bd69a
  exports: 753233c47284511068d96a6925317f46
  eqn1_1Flat 4f1c37562373ffaf4a397a4d0adebcc5
import  -/  Index 08e2a14604a823b6ff2a9dd0412736b8
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index fef7dd75ac4341fe9ac6422ae53896cb
  Lind_20 bc4b9092451ad6bbfee40a37af5a3be5
  Lind_9 e56724c95d48d5af2b671320de0a16e6
  Linds_3 c88a9b9457367a41a7b841cbc4cd99c9
  Uind_20 bfe4746a22221d53bc0caf3ab68bb75f
  Uind_9 60e6e8f96660ac8be150b9dcf7a9bf57
  Uinds_3 78c689db53b46c5dad666c484780219c
  getValInd 9fdbb30c9f0128d475e5de016ad1bc53
import  -/  Ivar 40f81219a01d4a021d2869f9c4ec8065
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde ee46c0f08935aa69c73c37bcf3103bae
  exports: 5f26c9b1fc31234bc17b520659bce428
import  -/  Tensor 506762f61e5eb09856fcdcf668e157fa
  exports: 1e07b17b3ec8892664f89099181669ba
  Tensor 2f2ba18b2559fd3b006c3f606f3e15da
  Tensor c676ef3822419832be89c54f66299684
  tensorAdd c17d8b47f4737f18a61e8d192d389e87
  tensorContractWith_20 192b6213f73a7a7828516a5b8c5dbe89
  tensorContractWith_3 c385296e26e3bb0dcfa2f644b248f67b
  tensorContractWith_9 91dfab9c705bec8fe49dd957b6ea57ff
  tensorProductNumeric 6bf62d328fd962ef9923c8cda98aba01
  tensorProductWith 5c503f4acd0761ea31e37bf6d35223c2
  tensorSMult ba0fb195e1462201d1ee36b98733b19a
  tensorSub fbca68c0210815bd3e38973881a34ada
  tensorTranspose 44e01331e8dca2b21922eeae8693de1e
1fcfb5e14fbec8b199ddf626104144eb
  $s^1 :: GHC.Types.Int
  {- Strictness: x -}
32141baf0424e5cf9cbfee4ee2a5ed60
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c8e031a741a07ac71dedeac35d64303c
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
70ce0be2f933b68131b50c7c0380203c
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
4a2cdd47acde88089fb3ef79b5ca9111
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Integrabillity.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Integrabillity.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Integrabillity.$wpoly_go1
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Integrabillity.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
3d163e4888b31440642344bdb8f690d1
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
2cf1b144211f1faad30e6c6da764721b
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Integrabillity.$seven1 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
0d0a5e0037ba040bf8a1f21702384501
  $stensorContractWith_11 :: GHC.Natural.Natural
  {- Unfolding: (case Integrabillity.$stensorContractWith_12 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
d524530c734d28d7d20cc1263aed8920
  $stensorContractWith_12 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
a2c4f58a9e612569c34be07f8f6f6245
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case Integrabillity.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
249227df461f7cba172e27f85c7f5d7f
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
9d80a2bdbf057b847733652b347ac919
  $stensorContractWith_7 :: GHC.Natural.Natural
  {- Unfolding: (case Integrabillity.$s^2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
2efcdc0fe00a2bc6780cd3955d55e0c7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Integrabillity.$trModule3
                   Integrabillity.$trModule1) -}
b36c2c0e7a39a1f47b525d0f6793eeaf
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Integrabillity.$trModule2) -}
ca8587e25f29c45e0f5840a7969d1d19
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Integrabillity"#) -}
a4f48ba37676506d535312ea1e065736
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Integrabillity.$trModule4) -}
382737b00b805f2aa0ba07883d8fec67
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
8ee7814a98c3042df243f72ce461196d
  $w$s^ :: GHC.Types.Int -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger# w1 Integrabillity.$s^2 of wild {
                   DEFAULT
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             Integrabillity.$s^2 of wild1 {
                        DEFAULT
                        -> case w of ww { GHC.Types.I# ww1 -> Integrabillity.$wf ww1 w1 }
                        1# -> 1# }
                   1# -> case Integrabillity.$s^1 ret_ty GHC.Prim.Int# of {} }) -}
98d2f18e398489bac8b92bfa4e580632
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
e3a793e2e38652553c7f6c0b44832390
  $wareaMetricMetric1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 1 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 {__scc {main:Integrabillity.areaMetricMetric1} True False} case BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                                                                            case {__scc {main:Integrabillity.areaMetricMetric1} False True} {__scc {main:Integrabillity.areaMetricMetric1.flat} True False} {__scc {main:Integrabillity.areaMetricMetric1.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                                                                w1 of ww2 { Tensor.Tensor ww3 ->
                                                                            case {__scc {main:Integrabillity.areaMetricMetric1} False True} {__scc {main:Integrabillity.areaMetricMetric1.flat} False True} BasicTensors.$wflatArea
                                                                                                                                                                                                              w1 of ww4 { Unit# ww5 ->
                                                                            case {__scc {main:Integrabillity.areaMetricMetric1} False True} {__scc {main:Integrabillity.areaMetricMetric1.flat} False True} Tensor.$wtensorProductWith
                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                                                              ww3
                                                                                                                                                                                                              ww5 of ww6 { Unit# ww7 ->
                                                                            case {__scc {main:Integrabillity.areaMetricMetric1} False True} {__scc {main:Integrabillity.areaMetricMetric1.flat} False True} Tensor.$wtensorContractWith_20
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                              Integrabillity.$stensorContractWith_7
                                                                                                                                                                                                                `cast`
                                                                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                                        <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                                              Integrabillity.$stensorContractWith_3
                                                                                                                                                                                                                `cast`
                                                                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                                              Integrabillity.areaMetricMetric2
                                                                                                                                                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                                                              ww7
                                                                                                                                                                                                                `cast`
                                                                                                                                                                                                              (Data.Map.Internal.Map
                                                                                                                                                                                                                 ((,,,,,,,)
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                                                                                       <Index.Uind_20>_N)_N
                                                                                                                                                                                                                    <Index.Ind
                                                                                                                                                                                                                       (1
                                                                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                                                                       Index.Lind_20>_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                                                                       <Index.Uind_19>_N)_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                                                                       <Index.Lind_19>_N)_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                                                                       <Index.Uind_9>_N)_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                                                                       <Index.Lind_9>_N)_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0R (<1>_N))
                                                                                                                                                                                                                       <Index.Uind_3>_N)_N
                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                       (Add0R (<1>_N))
                                                                                                                                                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                 <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                                                                            case {__scc {main:Integrabillity.areaMetricMetric1} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              ww1
                                                                                                                                              ww9 of ww10 { Unit# ww11 ->
                                                                            (# ww11
                                                                                 `cast`
                                                                               (Data.Map.Internal.Map
                                                                                  ((,,,,,,,)
                                                                                     (Index.Ind
                                                                                        (Add0L (<0>_N))
                                                                                        <Index.Uind_20>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0L (<1>_N))
                                                                                        <Index.Lind_20>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0L (<0>_N))
                                                                                        <Index.Uind_19>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0L (<0>_N))
                                                                                        <Index.Lind_19>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0R (<1>_N))
                                                                                        <Index.Uind_9>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0R (<1>_N))
                                                                                        <Index.Lind_9>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0L (<1>_N))
                                                                                        <Index.Uind_3>_N)_N
                                                                                     (Index.Ind
                                                                                        (Add0L (<1>_N))
                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                  <GHC.Real.Rational>_R)_R #) } } } } } }) -}
b98d457b96dc8b442078b9cbec18d8cc
  $wareaMetricMetric1intCond ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} True True} {__scc {main:Integrabillity.areaMetricMetric1intCond.intArea} True True} BasicTensors.interArea
                                                                                                                                                                  w
                                                                                                                                                                  w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.sum1} True False} BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.sum1} False True} Tensor.$wtensorProductWith
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                 ww1
                                                                                                                                                                 ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.intMetric} True True} BasicTensors.interMetric
                                                                                                                                                                     w2
                                                                                                                                                                     w3 of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.sum2} True False} BasicTensors.delta_20 of ww10 { Tensor.Tensor ww11 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.sum2} False True} Tensor.$wtensorProductWith
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                 ww11
                                                                                                                                                                 ww9 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.diff} True False} {__scc {main:Integrabillity.areaMetricMetric1intCond.diff} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                   ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                    @ 1)
                                                                                                                                                                                                                                                                                                                                 Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                                                                 ww5
                                                                                                                                                                                                                                                                                                                                   `cast`
                                                                                                                                                                                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                                    <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                                                                 ww13
                                                                                                                                                                                                                                                                                                                                   `cast`
                                                                                                                                                                                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                                    <GHC.Real.Rational>_R)_R) of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                                                   w2 of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.block2} True False} BasicTensors.invEta of ww18 { Tensor.Tensor ww19 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 2
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 1
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 2
                                                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                   ww19
                                                                                                                                                                   ww17 of ww20 { Unit# ww21 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.block2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                   @ 1
                                                                                                                                                                   @ 1
                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 0
                                                                                                                                                                   @ 1
                                                                                                                                                                   @ 0
                                                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                                                     `cast`
                                                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                                                     `cast`
                                                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                   Integrabillity.areaMetricMetric1intCond2
                                                                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                   ww21
                                                                                                                                                                     `cast`
                                                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                                                      ((,,,,,,,)
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N)))
                                                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                                                         (Index.Ind
                                                                                                                                                                            (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N)))
                                                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                                                      <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.tens} True True} Tensor.$wtensorProductWith
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 1
                                                                                                                                                                @ 0
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                ww15
                                                                                                                                                                ww23 of ww24 { Unit# ww25 ->
                 case {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 2
                                                                                                                                                                 @ 1
                                                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                 Integrabillity.areaMetricMetric2
                                                                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                 ww25
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                   <1>_N))
                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                       <Index.Ind
                                                                                                                                                                          (1
                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                          Index.Uind_3>_N
                                                                                                                                                                       <Index.Ind
                                                                                                                                                                          (1
                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                          Index.Lind_3>_N)_N
                                                                                                                                                                    <GHC.Real.Rational>_R)_R of ww26 { Unit# ww27 ->
                 {__scc {main:Integrabillity.areaMetricMetric1intCond} False True} {__scc {main:Integrabillity.areaMetricMetric1intCond.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            @ 1
                                                                                                                                                            @ 1
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 2
                                                                                                                                                            @ 1
                                                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                                                              `cast`
                                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                                                              `cast`
                                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                            Integrabillity.areaMetricMetric1intCond1
                                                                                                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                            ww27
                                                                                                                                                              `cast`
                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                               ((,,,,,,,)
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     1
                                                                                                                                                                     Index.Uind_20>_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     1
                                                                                                                                                                     Index.Lind_20>_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     0
                                                                                                                                                                     Index.Uind_19>_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     0
                                                                                                                                                                     Index.Lind_19>_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     2
                                                                                                                                                                     Index.Uind_9>_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     1
                                                                                                                                                                     Index.Lind_9>_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                                               <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
92e3bc88a4b1895f3f54002fec7c6418
  $wdensityEqnArea2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 0 0 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case ({__scc {main:Integrabillity.densityEqnArea2} True True} {__scc {main:Integrabillity.densityEqnArea2.tens} True False} Integrabillity.densityEqnArea6)
                        `cast`
                      (Tensor.Tensor
                         (AddDef (<1>_N, <1>_N))
                         (AddDef (<1>_N, <1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.block2} True False} {__scc {main:Integrabillity.densityEqnArea2.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                 w
                                                                                                                                                                                                                 w1 of ww2 { Tensor.Tensor ww3 ->
                 case BasicTensors.delta_20 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                 ww3
                                                                                                                                                 ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.block3} True False} {__scc {main:Integrabillity.densityEqnArea2.block3} False True} Tensor.$wtensorProductWith
                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                                                                 ww5
                                                                                                                                                                                                                 ww3 of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.block3} False True} Tensor.$wtensorTranspose
                                                                                                                                                 @ 2
                                                                                                                                                 @ 2
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                 Integrabillity.densityEqnArea5
                                                                                                                                                 Integrabillity.areaMetricMetric2
                                                                                                                                                 ww9
                                                                                                                                                   `cast`
                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                   <1>_N))
                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                   <1>_N))
                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                    <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.tens} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                     (let {
                                                                                                                                                                                                                                        ww12 :: Data.Map.Internal.Map
                                                                                                                                                                                                                                                  (Index.Index
                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                  GHC.Real.Rational
                                                                                                                                                                                                                                        = {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                       (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                          @ 1)
                                                                                                                                                                                                                                                                                       Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                       ww7
                                                                                                                                                                                                                                                                                         `cast`
                                                                                                                                                                                                                                                                                       (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                          ((,,,,,,,)
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                         <1>_N))
                                                                                                                                                                                                                                                                                                <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                         <1>_N))
                                                                                                                                                                                                                                                                                                <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                          <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                       ww11
                                                                                                                                                                                                                                      } in
                                                                                                                                                                                                                                      {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                   @ (Index.Index
                                                                                                                                                                                                                                                                                        2
                                                                                                                                                                                                                                                                                        2
                                                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                                                                        1)
                                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                   (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                      @ 2
                                                                                                                                                                                                                                                                                      @ 2
                                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                                                                                                      @ 1)
                                                                                                                                                                                                                                                                                   Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                   ww1
                                                                                                                                                                                                                                                                                   ww12) of ww12 { Tensor.Tensor ww13 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.tens2} True True} Tensor.$wtensorTranspose
                                                                                                                                               @ 2
                                                                                                                                               @ 2
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               Integrabillity.densityEqnArea5
                                                                                                                                               Integrabillity.areaMetricMetric2
                                                                                                                                               ww13 of ww14 { Unit# ww15 ->
                 case {__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                            @ 2
                                                                                                                            @ 2
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 1
                                                                                                                            @ 1
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                          @ (Index.Index
                                                                                                                                                                               2
                                                                                                                                                                               2
                                                                                                                                                                               0
                                                                                                                                                                               0
                                                                                                                                                                               0
                                                                                                                                                                               0
                                                                                                                                                                               1
                                                                                                                                                                               1)
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          (Tensor.aSymTensor3
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1)
                                                                                                                                                                          Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                          ww13
                                                                                                                                                                          ww15) of ww16 { Tensor.Tensor ww17 ->
                 (# ww17 #) } } } } } } } } }) -}
4392840af0aab2cbdcb5068972bd175a
  $wdensityEqnMetric2 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case ({__scc {main:Integrabillity.densityEqnMetric2} True True} {__scc {main:Integrabillity.densityEqnMetric2.tens} True False} Integrabillity.densityEqnMetric6)
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<1>_N, <1>_N))
                         (AddDef (<1>_N, <1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.block2} True False} {__scc {main:Integrabillity.densityEqnMetric2.intMetric} True True} BasicTensors.interMetric
                                                                                                                                                                                                                         w
                                                                                                                                                                                                                         w1 of ww2 { Tensor.Tensor ww3 ->
                 case BasicTensors.delta_9 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                     ww3
                                                                                                                                                     ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.block3} True False} {__scc {main:Integrabillity.densityEqnMetric2.block3} False True} Tensor.$wtensorProductWith
                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                                                                       ww5
                                                                                                                                                                                                                       ww3 of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.block3} False True} Tensor.$wtensorTranspose
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 2
                                                                                                                                                     @ 2
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     Integrabillity.densityEqnMetric5
                                                                                                                                                     Integrabillity.areaMetricMetric2
                                                                                                                                                     ww9
                                                                                                                                                       `cast`
                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (AddDef (<1>_N,
                                                                                                                                                                       <1>_N))
                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (AddDef (<1>_N,
                                                                                                                                                                       <1>_N))
                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                              <Index.Uind_3>_N)_N
                                                                                                                                                           (Index.Ind
                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                                                                                        <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.tens} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                         (let {
                                                                                                                                                                                                                                            ww12 :: Data.Map.Internal.Map
                                                                                                                                                                                                                                                      (Index.Index
                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                         2
                                                                                                                                                                                                                                                         2
                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                                      GHC.Real.Rational
                                                                                                                                                                                                                                            = {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                                              @ 1)
                                                                                                                                                                                                                                                                                           Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                           ww7
                                                                                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                           ww11
                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                          {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                       (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                          @ 1)
                                                                                                                                                                                                                                                                                       Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                       ww1
                                                                                                                                                                                                                                                                                       ww12) of ww12 { Tensor.Tensor ww13 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.tens2} True True} Tensor.$wtensorTranspose
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 2
                                                                                                                                                   @ 2
                                                                                                                                                   @ 1
                                                                                                                                                   @ 1
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   Integrabillity.densityEqnMetric5
                                                                                                                                                   Integrabillity.areaMetricMetric2
                                                                                                                                                   ww13 of ww14 { Unit# ww15 ->
                 case {__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 2
                                                                                                                              @ 2
                                                                                                                              @ 1
                                                                                                                              @ 1
                                                                                                                              @ GHC.Real.Rational
                                                                                                                              ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                            @ (Index.Index
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 2
                                                                                                                                                                                 2
                                                                                                                                                                                 1
                                                                                                                                                                                 1)
                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                            (Tensor.aSymTensor3
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 2
                                                                                                                                                                               @ 2
                                                                                                                                                                               @ 1
                                                                                                                                                                               @ 1)
                                                                                                                                                                            Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                            ww13
                                                                                                                                                                            ww15) of ww16 { Tensor.Tensor ww17 ->
                 (# ww17 #) } } } } } } } } }) -}
11d61575729bc4698f6ca9764f93fc8c
  $wf :: GHC.Prim.Int# -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
3489bcdeef5e809d47db111d30381146
  $wflatMetricInter ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 1 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.flatMetricInter} True True} {__scc {main:Integrabillity.flatMetricInter.tens} True False} {__scc {main:Integrabillity.flatMetricInter.metInter} True True} BasicTensors.interMetric
                                                                                                                                                                                                               w
                                                                                                                                                                                                               w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.flatMetricInter} False True} {__scc {main:Integrabillity.flatMetricInter.tens} False True} BasicTensors.$wetaAbs
                                                                                                                                               w1 of ww2 { Unit# ww3 ->
                 case {__scc {main:Integrabillity.flatMetricInter} False True} {__scc {main:Integrabillity.flatMetricInter.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                               ww1
                                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                 {__scc {main:Integrabillity.flatMetricInter} False True} Tensor.$wtensorContractWith_9
                                                                            @ 0
                                                                            @ 1
                                                                            @ GHC.Real.Rational
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 1
                                                                            @ 1
                                                                            Integrabillity.$stensorContractWith_7
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                            Integrabillity.$stensorContractWith_3
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                            Integrabillity.areaMetricMetric2
                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                            ww5
                                                                              `cast`
                                                                            (Data.Map.Internal.Map
                                                                               ((,,,,,,,)
                                                                                  (Index.Ind
                                                                                     (Add0L (<0>_N))
                                                                                     <Index.Uind_20>_N)_N
                                                                                  (Index.Ind
                                                                                     (Add0L (<0>_N))
                                                                                     <Index.Lind_20>_N)_N
                                                                                  (Index.Ind
                                                                                     (Add0L (<0>_N))
                                                                                     <Index.Uind_19>_N)_N
                                                                                  (Index.Ind
                                                                                     (Add0L (<0>_N))
                                                                                     <Index.Lind_19>_N)_N
                                                                                  (Index.Ind
                                                                                     (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                     <Index.Uind_9>_N)_N
                                                                                  <Index.Ind
                                                                                     (1
                                                                                      GHC.TypeNats.+ 1)
                                                                                     Index.Lind_9>_N
                                                                                  (Index.Ind
                                                                                     (Add0R (<1>_N))
                                                                                     <Index.Uind_3>_N)_N
                                                                                  (Index.Ind
                                                                                     (Add0R (<1>_N))
                                                                                     <Index.Lind_3>_N)_N)_N
                                                                               <GHC.Real.Rational>_R)_R } } }) -}
bd20e896e5cb82033dcd868900110109
  $wflatMetricInterProlong ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 1 2 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.flatMetricInterProlong} True True} {__scc {main:Integrabillity.flatMetricInterProlong.tens} True False} BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.flatMetricInterProlong} False True} {__scc {main:Integrabillity.flatMetricInterProlong.flatInter} True True} Integrabillity.flatMetricInter
                                                                                                                                                                 w
                                                                                                                                                                 w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.flatMetricInterProlong} False True} {__scc {main:Integrabillity.flatMetricInterProlong.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 1
                                                                                                                                                             @ 1
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 0
                                                                                                                                                             @ 1
                                                                                                                                                             @ 1
                                                                                                                                                             @ 1
                                                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                             ww1
                                                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.flatMetricInterProlong} False True} {__scc {main:Integrabillity.flatMetricInterProlong.tensTrans} True True} Tensor.$wtensorTranspose
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 2
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 Integrabillity.densityEqnMetric5
                                                                                                                                                                 Integrabillity.areaMetricMetric2
                                                                                                                                                                 ww5
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                   <1>_N))
                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                    <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Integrabillity.flatMetricInterProlong} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 2
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                      0
                                                                                                                                                                                      0
                                                                                                                                                                                      0
                                                                                                                                                                                      0
                                                                                                                                                                                      1
                                                                                                                                                                                      2
                                                                                                                                                                                      1
                                                                                                                                                                                      1)
                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                    @ 0
                                                                                                                                                                                    @ 0
                                                                                                                                                                                    @ 0
                                                                                                                                                                                    @ 0
                                                                                                                                                                                    @ 1
                                                                                                                                                                                    @ 2
                                                                                                                                                                                    @ 1
                                                                                                                                                                                    @ 1)
                                                                                                                                                                                 Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                 ww5
                                                                                                                                                                                   `cast`
                                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                                   <1>_N))
                                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                    <GHC.Real.Rational>_R)_R
                                                                                                                                                                                 ww8) of ww9 { Tensor.Tensor ww10 ->
                 (# ww10 #) } } } } }) -}
be8c53427d8f84a1c3f2bcf4895cf40c
  $windex2SparseAreaM ::
    Index.Linds_20 1
    -> Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 5,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1)
                   (ww1 :: Index.Uinds_9 1)
                   (ww2 :: Index.Linds_9 1)
                   (ww3 :: Index.Uinds_3 1)
                   (ww4 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseAreaM} True False} (# {__scc {main:Integrabillity.index2SparseAreaM} False True} case {__scc {main:Integrabillity.index2SparseAreaM.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseAreaM.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_9
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseAreaM.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_9
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseAreaM.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseAreaM.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_3
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> let {
                                                                                                                                                      $j :: GHC.Prim.Int#
                                                                                                                                                            -> GHC.Types.Int
                                                                                                                                                        <join 1> {- Arity: 1,
                                                                                                                                                                    Strictness: <S,U>m -}
                                                                                                                                                      = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseAreaM.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww4 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseAreaM.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                      @ Index.Lind_3
                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                      s2 of wild5 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x2
                                                                                                                                                          -> case x2 of wild6 {
                                                                                                                                                               Index.L0_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       1#)
                                                                                                                                                               Index.L1_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       2#)
                                                                                                                                                               Index.L2_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       3#)
                                                                                                                                                               Index.L3_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseAreaM.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       4#) } } }
                                                                                                                                                    } in
                                                                                                                                                    case x1 of wild4 {
                                                                                                                                                      Index.U0_3
                                                                                                                                                      -> $j
                                                                                                                                                           0#
                                                                                                                                                      Index.U1_3
                                                                                                                                                      -> $j
                                                                                                                                                           1#
                                                                                                                                                      Index.U2_3
                                                                                                                                                      -> $j
                                                                                                                                                           2#
                                                                                                                                                      Index.U3_3
                                                                                                                                                      -> $j
                                                                                                                                                           3# } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseAreaM} False True} case {__scc {main:Integrabillity.index2SparseAreaM.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseAreaM.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseAreaM.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Lind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseAreaM.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseAreaM.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Lind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseAreaM.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    GHC.Types.I#
                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseAreaM.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#)
                                                                                                                                                               1#)
                                                                                                                                                            10#)
                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseAreaM.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                         a#1)) } } } } } } #)) -}
af14a7be6f2889082132ab2fba853571
  $windex2SparseAreaMintCond ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_9 2
    -> Index.Linds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 1)
                   (ww2 :: Index.Uinds_9 2)
                   (ww3 :: Index.Linds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseAreaMintCond} True False} (# {__scc {main:Integrabillity.index2SparseAreaMintCond} False True} case {__scc {main:Integrabillity.index2SparseAreaMintCond.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseAreaMintCond.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                             @ Index.Uind_20
                                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                                             s of wild1 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x
                                                                                                                                                          -> case {__scc {main:Integrabillity.index2SparseAreaMintCond.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                 @ Index.Uind_20
                                                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseAreaMintCond.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseAreaMintCond.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                  @ Index.Uind_9
                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                  s1 of wild3 {
                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                  ret_ty GHC.Types.Int
                                                                                                                                                                  of {}
                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                               -> case {__scc {main:Integrabillity.index2SparseAreaMintCond.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                      @ Index.Uind_9
                                                                                                                                                                                                                                                                                      x1 of a#1 { DEFAULT ->
                                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseAreaMintCond.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild2 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseAreaMintCond.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                       @ Index.Uind_9
                                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                                       s2 of wild5 {
                                                                                                                                                                    GHC.Base.Nothing
                                                                                                                                                                    -> case Data.Maybe.fromJust1
                                                                                                                                                                       ret_ty GHC.Types.Int
                                                                                                                                                                       of {}
                                                                                                                                                                    GHC.Base.Just x2
                                                                                                                                                                    -> case {__scc {main:Integrabillity.index2SparseAreaMintCond.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                           @ Index.Uind_9
                                                                                                                                                                                                                                                                                           x2 of a#2 { DEFAULT ->
                                                                                                                                                                       GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseAreaMintCond.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  100#)
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseAreaMintCond.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#1)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  10#))
                                                                                                                                                                            ({__scc {main:Integrabillity.index2SparseAreaMintCond.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                   a#2)) } } } } } } } } },
                                                                                      {__scc {main:Integrabillity.index2SparseAreaMintCond} False True} case {__scc {main:Integrabillity.index2SparseAreaMintCond.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseAreaMintCond.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                             @ Index.Lind_20
                                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                                             s of wild1 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x
                                                                                                                                                          -> case {__scc {main:Integrabillity.index2SparseAreaMintCond.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                 @ Index.Lind_20
                                                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseAreaMintCond.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseAreaMintCond.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                  @ Index.Lind_9
                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                  s1 of wild3 {
                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                  ret_ty GHC.Types.Int
                                                                                                                                                                  of {}
                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                               -> case {__scc {main:Integrabillity.index2SparseAreaMintCond.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                      @ Index.Lind_9
                                                                                                                                                                                                                                                                                      x1 of a#1 { DEFAULT ->
                                                                                                                                                                  GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseAreaMintCond.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                    a#)
                                                                                                                                                                             1#)
                                                                                                                                                                          10#)
                                                                                                                                                                       ({__scc {main:Integrabillity.index2SparseAreaMintCond.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                                              a#1)) } } } } } } #)) -}
1192ff7840e87e242e07e119c3f7486c
  $windex2SparseBlock1Eta ::
    Index.Linds_20 1
    -> Index.Uinds_3 2 -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1) (ww1 :: Index.Uinds_3 2) ->
                 {__scc {main:Integrabillity.index2SparseBlock1Eta} True False} (# {__scc {main:Integrabillity.index2SparseBlock1Eta} False True} case {__scc {main:Integrabillity.index2SparseBlock1Eta.r} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseBlock1Eta.r} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Uind_3
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    s of wild1 {
                                                                                                                                                    GHC.Base.Nothing
                                                                                                                                                    -> case Data.Maybe.fromJust1
                                                                                                                                                       ret_ty GHC.Types.Int
                                                                                                                                                       of {}
                                                                                                                                                    GHC.Base.Just x
                                                                                                                                                    -> let {
                                                                                                                                                         $j :: GHC.Prim.Int#
                                                                                                                                                               -> GHC.Types.Int
                                                                                                                                                           <join 1> {- Arity: 1,
                                                                                                                                                                       Strictness: <S,U>m -}
                                                                                                                                                         = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseBlock1Eta.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseBlock1Eta.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                             @ Index.Uind_3
                                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                             GHC.Base.Nothing
                                                                                                                                                             -> case Data.Maybe.fromJust1
                                                                                                                                                                ret_ty GHC.Types.Int
                                                                                                                                                                of {}
                                                                                                                                                             GHC.Base.Just x1
                                                                                                                                                             -> case x1 of wild4 {
                                                                                                                                                                  Index.U0_3
                                                                                                                                                                  -> GHC.Types.I#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseBlock1Eta.r} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                    y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#)
                                                                                                                                                                          1#)
                                                                                                                                                                  Index.U1_3
                                                                                                                                                                  -> GHC.Types.I#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseBlock1Eta.r} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                    y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#)
                                                                                                                                                                          2#)
                                                                                                                                                                  Index.U2_3
                                                                                                                                                                  -> GHC.Types.I#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseBlock1Eta.r} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                    y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#)
                                                                                                                                                                          3#)
                                                                                                                                                                  Index.U3_3
                                                                                                                                                                  -> GHC.Types.I#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseBlock1Eta.r} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                    y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#)
                                                                                                                                                                          4#) } } }
                                                                                                                                                       } in
                                                                                                                                                       case x of wild2 {
                                                                                                                                                         Index.U0_3
                                                                                                                                                         -> $j
                                                                                                                                                              0#
                                                                                                                                                         Index.U1_3
                                                                                                                                                         -> $j
                                                                                                                                                              1#
                                                                                                                                                         Index.U2_3
                                                                                                                                                         -> $j
                                                                                                                                                              2#
                                                                                                                                                         Index.U3_3
                                                                                                                                                         -> $j
                                                                                                                                                              3# } } },
                                                                                   {__scc {main:Integrabillity.index2SparseBlock1Eta} False True} {__scc {main:Integrabillity.index2SparseBlock1Eta.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                     case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                      @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                          of {}
                                                                                                                                                                                                                                                                                                       GHC.Base.Just x
                                                                                                                                                                                                                                                                                                       -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                          @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                          GHC.Types.I#
                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                                                                                               a#) } } } #)) -}
7766cb0a8737a1963e280b4ec79c7380
  $windex2SparseCond1 ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_9 2
    -> Index.Linds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 1)
                   (ww2 :: Index.Uinds_9 2)
                   (ww3 :: Index.Linds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseCond1} True False} (# {__scc {main:Integrabillity.index2SparseCond1} False True} case {__scc {main:Integrabillity.index2SparseCond1.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseCond1.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseCond1.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond1.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond1.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseCond1.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Uind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseCond1.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild2 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseCond1.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                  @ Index.Uind_9
                                                                                                                                                                                                                                                                  1#
                                                                                                                                                                                                                                                                  s2 of wild5 {
                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                      -> case Data.Maybe.fromJust1
                                                                                                                                                         ret_ty GHC.Types.Int
                                                                                                                                                         of {}
                                                                                                                                                      GHC.Base.Just x2
                                                                                                                                                      -> case {__scc {main:Integrabillity.index2SparseCond1.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                      @ Index.Uind_9
                                                                                                                                                                                                                                                                      x2 of a#2 { DEFAULT ->
                                                                                                                                                         GHC.Types.I#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:Integrabillity.index2SparseCond1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                       a#)
                                                                                                                                                                       1#)
                                                                                                                                                                    100#)
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:Integrabillity.index2SparseCond1.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                       a#1)
                                                                                                                                                                       1#)
                                                                                                                                                                    10#))
                                                                                                                                                              ({__scc {main:Integrabillity.index2SparseCond1.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                              a#2)) } } } } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseCond1} False True} case {__scc {main:Integrabillity.index2SparseCond1.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseCond1.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseCond1.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Lind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond1.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond1.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Lind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseCond1.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    GHC.Types.I#
                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseCond1.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#)
                                                                                                                                                               1#)
                                                                                                                                                            10#)
                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseCond1.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                         a#1)) } } } } } } #)) -}
89eda37e85960da52496cea93959ff40
  $windex2SparseCond1Zero ::
    Index.Linds_20 1
    -> Index.Uinds_9 1 -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_20 1) (ww1 :: Index.Uinds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseCond1Zero} True False} (# {__scc {main:Integrabillity.index2SparseCond1Zero} False True} {__scc {main:Integrabillity.index2SparseCond1Zero.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                     case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                      @ Index.Uind_9
                                                                                                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                          of {}
                                                                                                                                                                                                                                                                                                       GHC.Base.Just x
                                                                                                                                                                                                                                                                                                       -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                          @ Index.Uind_9
                                                                                                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                          GHC.Types.I#
                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                                                                                               a#) } } },
                                                                                   {__scc {main:Integrabillity.index2SparseCond1Zero} False True} {__scc {main:Integrabillity.index2SparseCond1Zero.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                     case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                      @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                          of {}
                                                                                                                                                                                                                                                                                                       GHC.Base.Just x
                                                                                                                                                                                                                                                                                                       -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                          @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                          GHC.Types.I#
                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                                                                                               a#) } } } #)) -}
b596624ef8d7f028b881588ecd17386c
  $windex2SparseCond2 ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 5,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 1)
                   (ww2 :: Index.Uinds_9 1)
                   (ww3 :: Index.Uinds_3 1)
                   (ww4 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseCond2} True False} (# {__scc {main:Integrabillity.index2SparseCond2} False True} case {__scc {main:Integrabillity.index2SparseCond2.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseCond2.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseCond2.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond2.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond2.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseCond2.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Uind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseCond2.r} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseCond2.r} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                  @ Index.Uind_3
                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                  s2 of wild5 {
                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                      -> case Data.Maybe.fromJust1
                                                                                                                                                         ret_ty GHC.Types.Int
                                                                                                                                                         of {}
                                                                                                                                                      GHC.Base.Just x2
                                                                                                                                                      -> case x2 of wild6 {
                                                                                                                                                           Index.U0_3
                                                                                                                                                           -> GHC.Types.I#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      347#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:Integrabillity.index2SparseCond2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                            a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         40#))
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseCond2.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                                         a#1)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                           Index.U1_3
                                                                                                                                                           -> GHC.Types.I#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                                         347#
                                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseCond2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                               a#)
                                                                                                                                                                               1#)
                                                                                                                                                                            40#))
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:Integrabillity.index2SparseCond2.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                            a#1)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   1#)
                                                                                                                                                           Index.U2_3
                                                                                                                                                           -> GHC.Types.I#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                                         347#
                                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseCond2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                               a#)
                                                                                                                                                                               1#)
                                                                                                                                                                            40#))
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:Integrabillity.index2SparseCond2.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                            a#1)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   2#)
                                                                                                                                                           Index.U3_3
                                                                                                                                                           -> GHC.Types.I#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                                         347#
                                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseCond2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                               a#)
                                                                                                                                                                               1#)
                                                                                                                                                                            40#))
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:Integrabillity.index2SparseCond2.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                            a#1)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   3#) } } } } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseCond2} False True} case {__scc {main:Integrabillity.index2SparseCond2.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseCond2.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseCond2.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Lind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond2.s} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww4 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond2.s} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Lind_3
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case x1 of wild4 {
                                                                                                                                                      Index.L0_3
                                                                                                                                                      -> GHC.Types.I#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    21#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:Integrabillity.index2SparseCond2.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#))
                                                                                                                                                                 1#)
                                                                                                                                                              1#)
                                                                                                                                                      Index.L1_3
                                                                                                                                                      -> GHC.Types.I#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    21#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:Integrabillity.index2SparseCond2.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#))
                                                                                                                                                                 2#)
                                                                                                                                                              1#)
                                                                                                                                                      Index.L2_3
                                                                                                                                                      -> GHC.Types.I#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    21#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:Integrabillity.index2SparseCond2.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#))
                                                                                                                                                                 3#)
                                                                                                                                                              1#)
                                                                                                                                                      Index.L3_3
                                                                                                                                                      -> GHC.Types.I#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    21#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:Integrabillity.index2SparseCond2.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#))
                                                                                                                                                                 4#)
                                                                                                                                                              1#) } } } } } } #)) -}
2a804bf7dfb96efae2ccc9d450b27216
  $windex2SparseCond3 ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 1)
                   (ww2 :: Index.Uinds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseCond3} True False} (# {__scc {main:Integrabillity.index2SparseCond3} False True} case {__scc {main:Integrabillity.index2SparseCond3.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseCond3.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_20
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseCond3.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_20
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond3.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseCond3.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseCond3.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Uind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    GHC.Types.I#
                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseCond3.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#)
                                                                                                                                                               1#)
                                                                                                                                                            10#)
                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseCond3.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                         a#1)) } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseCond3} False True} {__scc {main:Integrabillity.index2SparseCond3.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                         case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                          @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                          0#
                                                                                                                                                                                                                                                                                                                                          s of wild1 {
                                                                                                                                                                                                                                                                                           GHC.Base.Nothing
                                                                                                                                                                                                                                                                                           -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                              ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                              of {}
                                                                                                                                                                                                                                                                                           GHC.Base.Just x
                                                                                                                                                                                                                                                                                           -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                              @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                              x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                              GHC.Types.I#
                                                                                                                                                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                                                   a#) } } } #)) -}
524403393eb6117e50e2aec536522af0
  $windex2SparseDens1 ::
    Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_9 1)
                   (ww1 :: Index.Linds_9 1)
                   (ww2 :: Index.Uinds_3 1)
                   (ww3 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseDens1} True False} (# {__scc {main:Integrabillity.index2SparseDens1} False True} case {__scc {main:Integrabillity.index2SparseDens1.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseDens1.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_9
                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseDens1.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_9
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens1.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens1.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_3
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> let {
                                                                                                                                                      $j :: GHC.Prim.Int#
                                                                                                                                                            -> GHC.Types.Int
                                                                                                                                                        <join 1> {- Arity: 1,
                                                                                                                                                                    Strictness: <S,U>m -}
                                                                                                                                                      = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseDens1.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                        case {__scc {main:Integrabillity.index2SparseDens1.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                      @ Index.Lind_3
                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                      s2 of wild5 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x2
                                                                                                                                                          -> case x2 of wild6 {
                                                                                                                                                               Index.L0_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       1#)
                                                                                                                                                               Index.L1_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       2#)
                                                                                                                                                               Index.L2_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       3#)
                                                                                                                                                               Index.L3_3
                                                                                                                                                               -> GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                a#)
                                                                                                                                                                                1#)
                                                                                                                                                                             16#)
                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens1.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                y)
                                                                                                                                                                                1#)
                                                                                                                                                                             4#))
                                                                                                                                                                       4#) } } }
                                                                                                                                                    } in
                                                                                                                                                    case x1 of wild4 {
                                                                                                                                                      Index.U0_3
                                                                                                                                                      -> $j
                                                                                                                                                           0#
                                                                                                                                                      Index.U1_3
                                                                                                                                                      -> $j
                                                                                                                                                           1#
                                                                                                                                                      Index.U2_3
                                                                                                                                                      -> $j
                                                                                                                                                           2#
                                                                                                                                                      Index.U3_3
                                                                                                                                                      -> $j
                                                                                                                                                           3# } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseDens1} False True} {__scc {main:Integrabillity.index2SparseDens1.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                         case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                          @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                          0#
                                                                                                                                                                                                                                                                                                                                          s of wild1 {
                                                                                                                                                                                                                                                                                           GHC.Base.Nothing
                                                                                                                                                                                                                                                                                           -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                              ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                              of {}
                                                                                                                                                                                                                                                                                           GHC.Base.Just x
                                                                                                                                                                                                                                                                                           -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                              @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                              x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                              GHC.Types.I#
                                                                                                                                                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                                                   a#) } } } #)) -}
515cd6f32047dc43cd65e9ca96ec7077
  $windex2SparseDens1Area ::
    Index.Uinds_20 1
    -> Index.Linds_20 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 1)
                   (ww2 :: Index.Uinds_3 1)
                   (ww3 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseDens1Area} True False} (# {__scc {main:Integrabillity.index2SparseDens1Area} False True} case {__scc {main:Integrabillity.index2SparseDens1Area.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseDens1Area.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Uind_20
                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                    s of wild1 {
                                                                                                                                                    GHC.Base.Nothing
                                                                                                                                                    -> case Data.Maybe.fromJust1
                                                                                                                                                       ret_ty GHC.Types.Int
                                                                                                                                                       of {}
                                                                                                                                                    GHC.Base.Just x
                                                                                                                                                    -> case {__scc {main:Integrabillity.index2SparseDens1Area.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                        @ Index.Uind_20
                                                                                                                                                                                                                                                                        x of a# { DEFAULT ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens1Area.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens1Area.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                         @ Index.Uind_3
                                                                                                                                                                                                                                                                         0#
                                                                                                                                                                                                                                                                         s1 of wild3 {
                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                         -> case Data.Maybe.fromJust1
                                                                                                                                                            ret_ty GHC.Types.Int
                                                                                                                                                            of {}
                                                                                                                                                         GHC.Base.Just x1
                                                                                                                                                         -> let {
                                                                                                                                                              $j :: GHC.Prim.Int#
                                                                                                                                                                    -> GHC.Types.Int
                                                                                                                                                                <join 1> {- Arity: 1,
                                                                                                                                                                            Strictness: <S,U>m -}
                                                                                                                                                              = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                                case {__scc {main:Integrabillity.index2SparseDens1Area.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                                case {__scc {main:Integrabillity.index2SparseDens1Area.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                  @ Index.Lind_3
                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                  s2 of wild5 {
                                                                                                                                                                  GHC.Base.Nothing
                                                                                                                                                                  -> case Data.Maybe.fromJust1
                                                                                                                                                                     ret_ty GHC.Types.Int
                                                                                                                                                                     of {}
                                                                                                                                                                  GHC.Base.Just x2
                                                                                                                                                                  -> case x2 of wild6 {
                                                                                                                                                                       Index.L0_3
                                                                                                                                                                       -> GHC.Types.I#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            y)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     4#))
                                                                                                                                                                               1#)
                                                                                                                                                                       Index.L1_3
                                                                                                                                                                       -> GHC.Types.I#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            y)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     4#))
                                                                                                                                                                               2#)
                                                                                                                                                                       Index.L2_3
                                                                                                                                                                       -> GHC.Types.I#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            y)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     4#))
                                                                                                                                                                               3#)
                                                                                                                                                                       Index.L3_3
                                                                                                                                                                       -> GHC.Types.I#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens1Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            y)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     4#))
                                                                                                                                                                               4#) } } }
                                                                                                                                                            } in
                                                                                                                                                            case x1 of wild4 {
                                                                                                                                                              Index.U0_3
                                                                                                                                                              -> $j
                                                                                                                                                                   0#
                                                                                                                                                              Index.U1_3
                                                                                                                                                              -> $j
                                                                                                                                                                   1#
                                                                                                                                                              Index.U2_3
                                                                                                                                                              -> $j
                                                                                                                                                                   2#
                                                                                                                                                              Index.U3_3
                                                                                                                                                              -> $j
                                                                                                                                                                   3# } } } } } },
                                                                                   {__scc {main:Integrabillity.index2SparseDens1Area} False True} {__scc {main:Integrabillity.index2SparseDens1Area.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                     case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                      @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                          of {}
                                                                                                                                                                                                                                                                                                       GHC.Base.Just x
                                                                                                                                                                                                                                                                                                       -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                          @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                          GHC.Types.I#
                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                                                                                                               a#) } } } #)) -}
c15330963575591f210423e5b5f29330
  $windex2SparseDens2 ::
    Index.Uinds_9 2
    -> Index.Linds_9 2
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_9 2)
                   (ww1 :: Index.Linds_9 2)
                   (ww2 :: Index.Uinds_3 1)
                   (ww3 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseDens2} True False} (# {__scc {main:Integrabillity.index2SparseDens2} False True} case {__scc {main:Integrabillity.index2SparseDens2.c} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseDens2.c} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Uind_9
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseDens2.c} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Uind_9
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens2.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens2.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Uind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseDens2.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Uind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseDens2.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseDens2.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                  @ Index.Uind_3
                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                  s2 of wild5 {
                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                      -> case Data.Maybe.fromJust1
                                                                                                                                                         ret_ty GHC.Types.Int
                                                                                                                                                         of {}
                                                                                                                                                      GHC.Base.Just x2
                                                                                                                                                      -> let {
                                                                                                                                                           $j :: GHC.Prim.Int#
                                                                                                                                                                 -> GHC.Types.Int
                                                                                                                                                             <join 1> {- Arity: 1,
                                                                                                                                                                         Strictness: <S,U>m -}
                                                                                                                                                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseDens2.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild6 { Index.UnsafemkInd s3 ->
                                                                                                                                                             case {__scc {main:Integrabillity.index2SparseDens2.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                           @ Index.Lind_3
                                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                                           s3 of wild7 {
                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                  ret_ty GHC.Types.Int
                                                                                                                                                                  of {}
                                                                                                                                                               GHC.Base.Just x3
                                                                                                                                                               -> case x3 of wild8 {
                                                                                                                                                                    Index.L0_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     160#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#1)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#))
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseDens2.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                     y)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            1#)
                                                                                                                                                                    Index.L1_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     160#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#1)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#))
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseDens2.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                     y)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            2#)
                                                                                                                                                                    Index.L2_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     160#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#1)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#))
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseDens2.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                     y)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            3#)
                                                                                                                                                                    Index.L3_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     160#)
                                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                                     (GHC.Prim.-#
                                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseDens2.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        a#1)
                                                                                                                                                                                        1#)
                                                                                                                                                                                     16#))
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseDens2.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                     y)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            4#) } } }
                                                                                                                                                         } in
                                                                                                                                                         case x2 of wild6 {
                                                                                                                                                           Index.U0_3
                                                                                                                                                           -> $j
                                                                                                                                                                0#
                                                                                                                                                           Index.U1_3
                                                                                                                                                           -> $j
                                                                                                                                                                1#
                                                                                                                                                           Index.U2_3
                                                                                                                                                           -> $j
                                                                                                                                                                2#
                                                                                                                                                           Index.U3_3
                                                                                                                                                           -> $j
                                                                                                                                                                3# } } } } } } } } },
                                                                               {__scc {main:Integrabillity.index2SparseDens2} False True} case {__scc {main:Integrabillity.index2SparseDens2.d} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                          case {__scc {main:Integrabillity.index2SparseDens2.d} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                        @ Index.Lind_9
                                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                                        s of wild1 {
                                                                                                                                            GHC.Base.Nothing
                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                               of {}
                                                                                                                                            GHC.Base.Just x
                                                                                                                                            -> case {__scc {main:Integrabillity.index2SparseDens2.d} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                            @ Index.Lind_9
                                                                                                                                                                                                                                                            x of a# { DEFAULT ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens2.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                               case {__scc {main:Integrabillity.index2SparseDens2.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                             @ Index.Lind_9
                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                             s1 of wild3 {
                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                    ret_ty GHC.Types.Int
                                                                                                                                                    of {}
                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                 -> case {__scc {main:Integrabillity.index2SparseDens2.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                                                                                                    GHC.Types.I#
                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                         (GHC.Prim.*#
                                                                                                                                                            (GHC.Prim.-#
                                                                                                                                                               ({__scc {main:Integrabillity.index2SparseDens2.d} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#)
                                                                                                                                                               1#)
                                                                                                                                                            10#)
                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseDens2.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                         a#1)) } } } } } } #)) -}
a0b05ce6209a94f97beaaecaa078b549
  $windex2SparseDens2Area ::
    Index.Uinds_20 2
    -> Index.Linds_20 2
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 2)
                   (ww1 :: Index.Linds_20 2)
                   (ww2 :: Index.Uinds_3 1)
                   (ww3 :: Index.Linds_3 1) ->
                 {__scc {main:Integrabillity.index2SparseDens2Area} True False} (# {__scc {main:Integrabillity.index2SparseDens2Area} False True} case {__scc {main:Integrabillity.index2SparseDens2Area.c} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseDens2Area.c} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Uind_20
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    s of wild1 {
                                                                                                                                                    GHC.Base.Nothing
                                                                                                                                                    -> case Data.Maybe.fromJust1
                                                                                                                                                       ret_ty GHC.Types.Int
                                                                                                                                                       of {}
                                                                                                                                                    GHC.Base.Just x
                                                                                                                                                    -> case {__scc {main:Integrabillity.index2SparseDens2Area.c} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                        @ Index.Uind_20
                                                                                                                                                                                                                                                                        x of a# { DEFAULT ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens2Area.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens2Area.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                         @ Index.Uind_20
                                                                                                                                                                                                                                                                         0#
                                                                                                                                                                                                                                                                         s1 of wild3 {
                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                         -> case Data.Maybe.fromJust1
                                                                                                                                                            ret_ty GHC.Types.Int
                                                                                                                                                            of {}
                                                                                                                                                         GHC.Base.Just x1
                                                                                                                                                         -> case {__scc {main:Integrabillity.index2SparseDens2Area.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                             @ Index.Uind_20
                                                                                                                                                                                                                                                                             x1 of a#1 { DEFAULT ->
                                                                                                                                                            case {__scc {main:Integrabillity.index2SparseDens2Area.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                            case {__scc {main:Integrabillity.index2SparseDens2Area.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                              @ Index.Uind_3
                                                                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                                                                              s2 of wild5 {
                                                                                                                                                              GHC.Base.Nothing
                                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                                 of {}
                                                                                                                                                              GHC.Base.Just x2
                                                                                                                                                              -> let {
                                                                                                                                                                   $j :: GHC.Prim.Int#
                                                                                                                                                                         -> GHC.Types.Int
                                                                                                                                                                     <join 1> {- Arity: 1,
                                                                                                                                                                                 Strictness: <S,U>m -}
                                                                                                                                                                   = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                                     case {__scc {main:Integrabillity.index2SparseDens2Area.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild6 { Index.UnsafemkInd s3 ->
                                                                                                                                                                     case {__scc {main:Integrabillity.index2SparseDens2Area.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                       @ Index.Lind_3
                                                                                                                                                                                                                                                                                       0#
                                                                                                                                                                                                                                                                                       s3 of wild7 {
                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                          of {}
                                                                                                                                                                       GHC.Base.Just x3
                                                                                                                                                                       -> case x3 of wild8 {
                                                                                                                                                                            Index.L0_3
                                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.*#
                                                                                                                                                                                                (GHC.Prim.-#
                                                                                                                                                                                                   ({__scc {main:Integrabillity.index2SparseDens2Area.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                       a#)
                                                                                                                                                                                                   1#)
                                                                                                                                                                                                16#)
                                                                                                                                                                                             21#)
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens2Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    a#1)
                                                                                                                                                                                                1#)
                                                                                                                                                                                             16#))
                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseDens2Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 y)
                                                                                                                                                                                             1#)
                                                                                                                                                                                          4#))
                                                                                                                                                                                    1#)
                                                                                                                                                                            Index.L1_3
                                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.*#
                                                                                                                                                                                                (GHC.Prim.-#
                                                                                                                                                                                                   ({__scc {main:Integrabillity.index2SparseDens2Area.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                       a#)
                                                                                                                                                                                                   1#)
                                                                                                                                                                                                16#)
                                                                                                                                                                                             21#)
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens2Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    a#1)
                                                                                                                                                                                                1#)
                                                                                                                                                                                             16#))
                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseDens2Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 y)
                                                                                                                                                                                             1#)
                                                                                                                                                                                          4#))
                                                                                                                                                                                    2#)
                                                                                                                                                                            Index.L2_3
                                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.*#
                                                                                                                                                                                                (GHC.Prim.-#
                                                                                                                                                                                                   ({__scc {main:Integrabillity.index2SparseDens2Area.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                       a#)
                                                                                                                                                                                                   1#)
                                                                                                                                                                                                16#)
                                                                                                                                                                                             21#)
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens2Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    a#1)
                                                                                                                                                                                                1#)
                                                                                                                                                                                             16#))
                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseDens2Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 y)
                                                                                                                                                                                             1#)
                                                                                                                                                                                          4#))
                                                                                                                                                                                    3#)
                                                                                                                                                                            Index.L3_3
                                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.*#
                                                                                                                                                                                                (GHC.Prim.-#
                                                                                                                                                                                                   ({__scc {main:Integrabillity.index2SparseDens2Area.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                       a#)
                                                                                                                                                                                                   1#)
                                                                                                                                                                                                16#)
                                                                                                                                                                                             21#)
                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                             (GHC.Prim.-#
                                                                                                                                                                                                ({__scc {main:Integrabillity.index2SparseDens2Area.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    a#1)
                                                                                                                                                                                                1#)
                                                                                                                                                                                             16#))
                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseDens2Area.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 y)
                                                                                                                                                                                             1#)
                                                                                                                                                                                          4#))
                                                                                                                                                                                    4#) } } }
                                                                                                                                                                 } in
                                                                                                                                                                 case x2 of wild6 {
                                                                                                                                                                   Index.U0_3
                                                                                                                                                                   -> $j
                                                                                                                                                                        0#
                                                                                                                                                                   Index.U1_3
                                                                                                                                                                   -> $j
                                                                                                                                                                        1#
                                                                                                                                                                   Index.U2_3
                                                                                                                                                                   -> $j
                                                                                                                                                                        2#
                                                                                                                                                                   Index.U3_3
                                                                                                                                                                   -> $j
                                                                                                                                                                        3# } } } } } } } } },
                                                                                   {__scc {main:Integrabillity.index2SparseDens2Area} False True} case {__scc {main:Integrabillity.index2SparseDens2Area.d} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                  case {__scc {main:Integrabillity.index2SparseDens2Area.d} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Lind_20
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    s of wild1 {
                                                                                                                                                    GHC.Base.Nothing
                                                                                                                                                    -> case Data.Maybe.fromJust1
                                                                                                                                                       ret_ty GHC.Types.Int
                                                                                                                                                       of {}
                                                                                                                                                    GHC.Base.Just x
                                                                                                                                                    -> case {__scc {main:Integrabillity.index2SparseDens2Area.d} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                                        x of a# { DEFAULT ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens2Area.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                       case {__scc {main:Integrabillity.index2SparseDens2Area.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                         @ Index.Lind_20
                                                                                                                                                                                                                                                                         0#
                                                                                                                                                                                                                                                                         s1 of wild3 {
                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                         -> case Data.Maybe.fromJust1
                                                                                                                                                            ret_ty GHC.Types.Int
                                                                                                                                                            of {}
                                                                                                                                                         GHC.Base.Just x1
                                                                                                                                                         -> case {__scc {main:Integrabillity.index2SparseDens2Area.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                             @ Index.Lind_20
                                                                                                                                                                                                                                                                             x1 of a#1 { DEFAULT ->
                                                                                                                                                            GHC.Types.I#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:Integrabillity.index2SparseDens2Area.d} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           a#)
                                                                                                                                                                       1#)
                                                                                                                                                                    21#)
                                                                                                                                                                 ({__scc {main:Integrabillity.index2SparseDens2Area.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                     a#1)) } } } } } } #)) -}
6f183069868fec9a9f2d17e3a5a0ac4e
  $windex2SparseProjector ::
    Index.Uinds_20 1
    -> Index.Uinds_9 1
    -> Index.Linds_3 6
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)>,
     Inline: [0] -}
c672f69ae084603fdf01073b82595b56
  $windex2SparseProjector2 ::
    Index.Uinds_20 1
    -> Index.Linds_3 4 -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 1) (ww1 :: Index.Linds_3 4) ->
                 {__scc {main:Integrabillity.index2SparseProjector2} True False} (# {__scc {main:Integrabillity.index2SparseProjector2} False True} {__scc {main:Integrabillity.index2SparseProjector2.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                        case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                         @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                                                         0#
                                                                                                                                                                                                                                                                                                                                                         s of wild1 {
                                                                                                                                                                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                             of {}
                                                                                                                                                                                                                                                                                                          GHC.Base.Just x
                                                                                                                                                                                                                                                                                                          -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                             @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                                                             x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                             GHC.Types.I#
                                                                                                                                                                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                  1#
                                                                                                                                                                                                                                                                                                                  a#) } } },
                                                                                    {__scc {main:Integrabillity.index2SparseProjector2} False True} case {__scc {main:Integrabillity.index2SparseProjector2.i} True True} let {
                                                                                                                                                                                                                            a :: Index.Lind_3
                                                                                                                                                                                                                            = {__scc {main:Index.getValInd} True True} case ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                       case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                                                                              s of wild1 {
                                                                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                         GHC.Base.Just x
                                                                                                                                                                                                                                                                         -> x } }
                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                          {__scc {main:Index.fromEnum} True True} case a of wild {
                                                                                                                                                                                                                                                                    Index.L0_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric4
                                                                                                                                                                                                                                                                    Index.L1_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric3
                                                                                                                                                                                                                                                                    Index.L2_3
                                                                                                                                                                                                                                                                    -> Integrabillity.densityEqnArea5
                                                                                                                                                                                                                                                                    Index.L3_3
                                                                                                                                                                                                                                                                    -> Integrabillity.index2SparseProjector1 } of wild { GHC.Types.I# x ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseProjector2.j} True True} let {
                                                                                                                                                                                                                            a :: Index.Lind_3
                                                                                                                                                                                                                            = {__scc {main:Index.getValInd} True True} case ww1 of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                       case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                                                                              s of wild2 {
                                                                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                         GHC.Base.Just x1
                                                                                                                                                                                                                                                                         -> x1 } }
                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                          {__scc {main:Index.fromEnum} True True} case a of wild1 {
                                                                                                                                                                                                                                                                    Index.L0_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric4
                                                                                                                                                                                                                                                                    Index.L1_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric3
                                                                                                                                                                                                                                                                    Index.L2_3
                                                                                                                                                                                                                                                                    -> Integrabillity.densityEqnArea5
                                                                                                                                                                                                                                                                    Index.L3_3
                                                                                                                                                                                                                                                                    -> Integrabillity.index2SparseProjector1 } of wild1 { GHC.Types.I# x1 ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseProjector2.k} True True} let {
                                                                                                                                                                                                                            a :: Index.Lind_3
                                                                                                                                                                                                                            = {__scc {main:Index.getValInd} True True} case ww1 of wild2 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                       case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                              2#
                                                                                                                                                                                                                                                                              s of wild3 {
                                                                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                         GHC.Base.Just x2
                                                                                                                                                                                                                                                                         -> x2 } }
                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                          {__scc {main:Index.fromEnum} True True} case a of wild2 {
                                                                                                                                                                                                                                                                    Index.L0_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric4
                                                                                                                                                                                                                                                                    Index.L1_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric3
                                                                                                                                                                                                                                                                    Index.L2_3
                                                                                                                                                                                                                                                                    -> Integrabillity.densityEqnArea5
                                                                                                                                                                                                                                                                    Index.L3_3
                                                                                                                                                                                                                                                                    -> Integrabillity.index2SparseProjector1 } of wild2 { GHC.Types.I# x2 ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseProjector2.l} True True} let {
                                                                                                                                                                                                                            a :: Index.Lind_3
                                                                                                                                                                                                                            = {__scc {main:Index.getValInd} True True} case ww1 of wild3 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                       case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                              3#
                                                                                                                                                                                                                                                                              s of wild4 {
                                                                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                              @ Index.Lind_3
                                                                                                                                                                                                                                                                         GHC.Base.Just x3
                                                                                                                                                                                                                                                                         -> x3 } }
                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                          {__scc {main:Index.fromEnum} True True} case a of wild3 {
                                                                                                                                                                                                                                                                    Index.L0_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric4
                                                                                                                                                                                                                                                                    Index.L1_3
                                                                                                                                                                                                                                                                    -> Integrabillity.areaMetricMetric3
                                                                                                                                                                                                                                                                    Index.L2_3
                                                                                                                                                                                                                                                                    -> Integrabillity.densityEqnArea5
                                                                                                                                                                                                                                                                    Index.L3_3
                                                                                                                                                                                                                                                                    -> Integrabillity.index2SparseProjector1 } of wild3 { GHC.Types.I# y ->
                                                                                                                                                    GHC.Types.I#
                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                               (GHC.Prim.+#
                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                     x
                                                                                                                                                                     64#)
                                                                                                                                                                  (GHC.Prim.*#
                                                                                                                                                                     x1
                                                                                                                                                                     16#))
                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                  x2
                                                                                                                                                                  4#))
                                                                                                                                                            y)
                                                                                                                                                         1#) } } } } #)) -}
b5213bad03abb381e9127f6ba34b0c0b
  $windex2SparseintCond2_1 ::
    Index.Uinds_20 2
    -> Index.Linds_20 2
    -> Index.Uinds_9 2
    -> Index.Linds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_20 2)
                   (ww1 :: Index.Linds_20 2)
                   (ww2 :: Index.Uinds_9 2)
                   (ww3 :: Index.Linds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseintCond2_1} True False} (# {__scc {main:Integrabillity.index2SparseintCond2_1} False True} case {__scc {main:Integrabillity.index2SparseintCond2_1.e} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseintCond2_1.e} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                       @ Index.Uind_20
                                                                                                                                                                                                                                                                       0#
                                                                                                                                                                                                                                                                       s of wild1 {
                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                      -> case Data.Maybe.fromJust1
                                                                                                                                                         ret_ty GHC.Types.Int
                                                                                                                                                         of {}
                                                                                                                                                      GHC.Base.Just x
                                                                                                                                                      -> case {__scc {main:Integrabillity.index2SparseintCond2_1.e} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                           @ Index.Uind_20
                                                                                                                                                                                                                                                                           x of a# { DEFAULT ->
                                                                                                                                                         case {__scc {main:Integrabillity.index2SparseintCond2_1.f} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                         case {__scc {main:Integrabillity.index2SparseintCond2_1.f} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                            @ Index.Uind_20
                                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                                            s1 of wild3 {
                                                                                                                                                           GHC.Base.Nothing
                                                                                                                                                           -> case Data.Maybe.fromJust1
                                                                                                                                                              ret_ty GHC.Types.Int
                                                                                                                                                              of {}
                                                                                                                                                           GHC.Base.Just x1
                                                                                                                                                           -> case {__scc {main:Integrabillity.index2SparseintCond2_1.f} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                @ Index.Uind_20
                                                                                                                                                                                                                                                                                x1 of a#1 { DEFAULT ->
                                                                                                                                                              case {__scc {main:Integrabillity.index2SparseintCond2_1.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                              case {__scc {main:Integrabillity.index2SparseintCond2_1.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                 @ Index.Uind_9
                                                                                                                                                                                                                                                                                 0#
                                                                                                                                                                                                                                                                                 s2 of wild5 {
                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                -> case Data.Maybe.fromJust1
                                                                                                                                                                   ret_ty GHC.Types.Int
                                                                                                                                                                   of {}
                                                                                                                                                                GHC.Base.Just x2
                                                                                                                                                                -> case {__scc {main:Integrabillity.index2SparseintCond2_1.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                     @ Index.Uind_9
                                                                                                                                                                                                                                                                                     x2 of a#2 { DEFAULT ->
                                                                                                                                                                   case {__scc {main:Integrabillity.index2SparseintCond2_1.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild4 of wild6 { Index.UnsafemkInd s3 ->
                                                                                                                                                                   case {__scc {main:Integrabillity.index2SparseintCond2_1.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                      @ Index.Uind_9
                                                                                                                                                                                                                                                                                      1#
                                                                                                                                                                                                                                                                                      s3 of wild7 {
                                                                                                                                                                     GHC.Base.Nothing
                                                                                                                                                                     -> case Data.Maybe.fromJust1
                                                                                                                                                                        ret_ty GHC.Types.Int
                                                                                                                                                                        of {}
                                                                                                                                                                     GHC.Base.Just x3
                                                                                                                                                                     -> case {__scc {main:Integrabillity.index2SparseintCond2_1.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                          @ Index.Uind_9
                                                                                                                                                                                                                                                                                          x3 of a#3 { DEFAULT ->
                                                                                                                                                                        GHC.Types.I#
                                                                                                                                                                          (GHC.Prim.+#
                                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseintCond2_1.e} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                                                              a#)
                                                                                                                                                                                         1#)
                                                                                                                                                                                      2100#)
                                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                                         ({__scc {main:Integrabillity.index2SparseintCond2_1.f} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                                                              a#1)
                                                                                                                                                                                         1#)
                                                                                                                                                                                      100#))
                                                                                                                                                                                (GHC.Prim.*#
                                                                                                                                                                                   (GHC.Prim.-#
                                                                                                                                                                                      ({__scc {main:Integrabillity.index2SparseintCond2_1.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                                           a#2)
                                                                                                                                                                                      1#)
                                                                                                                                                                                   10#))
                                                                                                                                                                             ({__scc {main:Integrabillity.index2SparseintCond2_1.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                  1#
                                                                                                                                                                                                                                                  a#3)) } } } } } } } } } } } },
                                                                                    {__scc {main:Integrabillity.index2SparseintCond2_1} False True} case {__scc {main:Integrabillity.index2SparseintCond2_1.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                    case {__scc {main:Integrabillity.index2SparseintCond2_1.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                                                                                                                                       0#
                                                                                                                                                                                                                                                                       s of wild1 {
                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                      -> case Data.Maybe.fromJust1
                                                                                                                                                         ret_ty GHC.Types.Int
                                                                                                                                                         of {}
                                                                                                                                                      GHC.Base.Just x
                                                                                                                                                      -> case {__scc {main:Integrabillity.index2SparseintCond2_1.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                           @ Index.Lind_20
                                                                                                                                                                                                                                                                           x of a# { DEFAULT ->
                                                                                                                                                         case {__scc {main:Integrabillity.index2SparseintCond2_1.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                         case {__scc {main:Integrabillity.index2SparseintCond2_1.b} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                            @ Index.Lind_20
                                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                                            s1 of wild3 {
                                                                                                                                                           GHC.Base.Nothing
                                                                                                                                                           -> case Data.Maybe.fromJust1
                                                                                                                                                              ret_ty GHC.Types.Int
                                                                                                                                                              of {}
                                                                                                                                                           GHC.Base.Just x1
                                                                                                                                                           -> case {__scc {main:Integrabillity.index2SparseintCond2_1.b} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                @ Index.Lind_20
                                                                                                                                                                                                                                                                                x1 of a#1 { DEFAULT ->
                                                                                                                                                              case {__scc {main:Integrabillity.index2SparseintCond2_1.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww3 of wild4 { Index.UnsafemkInd s2 ->
                                                                                                                                                              case {__scc {main:Integrabillity.index2SparseintCond2_1.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                                                                                                                                 0#
                                                                                                                                                                                                                                                                                 s2 of wild5 {
                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                -> case Data.Maybe.fromJust1
                                                                                                                                                                   ret_ty GHC.Types.Int
                                                                                                                                                                   of {}
                                                                                                                                                                GHC.Base.Just x2
                                                                                                                                                                -> case {__scc {main:Integrabillity.index2SparseintCond2_1.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                     @ Index.Lind_9
                                                                                                                                                                                                                                                                                     x2 of a#2 { DEFAULT ->
                                                                                                                                                                   GHC.Types.I#
                                                                                                                                                                     (GHC.Prim.+#
                                                                                                                                                                        (GHC.Prim.+#
                                                                                                                                                                           (GHC.Prim.*#
                                                                                                                                                                              (GHC.Prim.-#
                                                                                                                                                                                 ({__scc {main:Integrabillity.index2SparseintCond2_1.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                      1#
                                                                                                                                                                                                                                                      a#)
                                                                                                                                                                                 1#)
                                                                                                                                                                              210#)
                                                                                                                                                                           (GHC.Prim.*#
                                                                                                                                                                              (GHC.Prim.-#
                                                                                                                                                                                 ({__scc {main:Integrabillity.index2SparseintCond2_1.b} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                      1#
                                                                                                                                                                                                                                                      a#1)
                                                                                                                                                                                 1#)
                                                                                                                                                                              10#))
                                                                                                                                                                        ({__scc {main:Integrabillity.index2SparseintCond2_1.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#2)) } } } } } } } } } #)) -}
6406e88fec4ba1c0cca1236f94f11c84
  $windex2SparseintCond2_1Symbol ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Uinds_20 2
    -> Index.Linds_20 3
    -> Index.Uinds_9 2
    -> Index.Linds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 5,
     Strictness: <L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
ab099ba5fd7ee14e490e3d4be2eba256
  $windex2SparseintCond2_1SymbolPure ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Uinds_20 2
    -> Index.Linds_20 3
    -> Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 7,
     Strictness: <L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
2a935cad078deeb870632cdf7ece8b92
  $windex2SparseintCond2_1SymbolRed ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Uinds_20 1
    -> Index.Linds_20 2
    -> Index.Uinds_9 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (ww :: Index.Uinds_20 1)
                   (ww1 :: Index.Linds_20 2)
                   (ww2 :: Index.Uinds_9 1) ->
                 {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed} True False} (# {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed} False True} case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.e} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                                      case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.e} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                  @ Index.Uind_20
                                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                                  s of wild1 {
                                                                                                                                                                        GHC.Base.Nothing
                                                                                                                                                                        -> case Data.Maybe.fromJust1
                                                                                                                                                                           ret_ty GHC.Types.Int
                                                                                                                                                                           of {}
                                                                                                                                                                        GHC.Base.Just x
                                                                                                                                                                        -> case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.e} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                      @ Index.Uind_20
                                                                                                                                                                                                                                                                                                      x of a# { DEFAULT ->
                                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.k} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.k} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                       @ Index.Uind_9
                                                                                                                                                                                                                                                                                                       0#
                                                                                                                                                                                                                                                                                                       s1 of wild3 {
                                                                                                                                                                             GHC.Base.Nothing
                                                                                                                                                                             -> case Data.Maybe.fromJust1
                                                                                                                                                                                ret_ty GHC.Types.Int
                                                                                                                                                                                of {}
                                                                                                                                                                             GHC.Base.Just x1
                                                                                                                                                                             -> case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.k} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                           @ Index.Uind_9
                                                                                                                                                                                                                                                                                                           x1 of a#1 { DEFAULT ->
                                                                                                                                                                                GHC.Types.I#
                                                                                                                                                                                  (GHC.Prim.+#
                                                                                                                                                                                     (GHC.Prim.*#
                                                                                                                                                                                        10#
                                                                                                                                                                                        (GHC.Prim.-#
                                                                                                                                                                                           ({__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.e} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                         1#
                                                                                                                                                                                                                                                                         a#)
                                                                                                                                                                                           1#))
                                                                                                                                                                                     ({__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.k} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                   a#1)) } } } } } },
                                                                                             {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed} False True} case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                                      case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                  @ Index.Lind_20
                                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                                  s of wild1 {
                                                                                                                                                                        GHC.Base.Nothing
                                                                                                                                                                        -> case Data.Maybe.fromJust1
                                                                                                                                                                           ret_ty GHC.Types.Int
                                                                                                                                                                           of {}
                                                                                                                                                                        GHC.Base.Just x
                                                                                                                                                                        -> case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                      @ Index.Lind_20
                                                                                                                                                                                                                                                                                                      x of a# { DEFAULT ->
                                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.c} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                                           case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.c} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                                                                                       s1 of wild3 {
                                                                                                                                                                             GHC.Base.Nothing
                                                                                                                                                                             -> case Data.Maybe.fromJust1
                                                                                                                                                                                ret_ty GHC.Types.Int
                                                                                                                                                                                of {}
                                                                                                                                                                             GHC.Base.Just x1
                                                                                                                                                                             -> case {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.c} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                           @ Index.Lind_20
                                                                                                                                                                                                                                                                                                           x1 of a#1 { DEFAULT ->
                                                                                                                                                                                let {
                                                                                                                                                                                  c :: GHC.Prim.Int#
                                                                                                                                                                                  = {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.c} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 a#1
                                                                                                                                                                                } in
                                                                                                                                                                                let {
                                                                                                                                                                                  c1 :: GHC.Types.Int
                                                                                                                                                                                  = GHC.Types.I#
                                                                                                                                                                                      c
                                                                                                                                                                                } in
                                                                                                                                                                                let {
                                                                                                                                                                                  a :: GHC.Prim.Int#
                                                                                                                                                                                  = {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                                 a#
                                                                                                                                                                                } in
                                                                                                                                                                                let {
                                                                                                                                                                                  a1 :: GHC.Types.Int
                                                                                                                                                                                  = GHC.Types.I#
                                                                                                                                                                                      a
                                                                                                                                                                                } in
                                                                                                                                                                                {__scc {main:Integrabillity.index2SparseintCond2_1SymbolRed.x} True True} case GHC.Prim.<=#
                                                                                                                                                                                                                                                                 a
                                                                                                                                                                                                                                                                 c of lwild {
                                                                                                                                                                                                                                                            DEFAULT
                                                                                                                                                                                                                                                            -> Integrabillity.$wpoly_go13
                                                                                                                                                                                                                                                                 @ GHC.Types.Int
                                                                                                                                                                                                                                                                 c
                                                                                                                                                                                                                                                                 a1
                                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            -> Integrabillity.$wpoly_go13
                                                                                                                                                                                                                                                                 @ GHC.Types.Int
                                                                                                                                                                                                                                                                 a
                                                                                                                                                                                                                                                                 c1
                                                                                                                                                                                                                                                                 w } } } } } } } #)) -}
ecba1f256b333237a7880d18e44729ad
  $wint1Test ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.int1Test} True True} {__scc {main:Integrabillity.int1Test.prod} True False} {__scc {main:Integrabillity.int1Test.flat} True True} EquivarianceEqns.eqn1_1Flat
                                                                                                                                                                                      w
                                                                                                                                                                                      w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.invEta of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.int1Test} False True} {__scc {main:Integrabillity.int1Test.sym} True True} BasicTensors.symI_2
                                                                                                                               w2 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.int1Test} False True} {__scc {main:Integrabillity.int1Test.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww3
                                                                                                                                 ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.int1Test} False True} {__scc {main:Integrabillity.int1Test.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww7
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<2>_N))
                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<2>_N))
                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.int1Test} False True} Tensor.$wtensorContractWith_3
                                                                          @ 2
                                                                          @ 2
                                                                          @ GHC.Real.Rational
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.int1Test1
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww9
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Lind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<1>_N))
                                                                                   <Index.Uind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.int1Test} False True} Tensor.$wtensorContractWith_3
                                                                          @ 1
                                                                          @ 1
                                                                          @ GHC.Real.Rational
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.areaMetricMetric1intCond2
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww11
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_20>_N
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Lind_20>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_19>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Lind_19>_N
                                                                                <Index.Ind
                                                                                   1 Index.Uind_9>_N
                                                                                <Index.Ind
                                                                                   0 Index.Lind_9>_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 {__scc {main:Integrabillity.int1Test} False True} Tensor.$wtensorContractWith_3
                                                                     @ 0
                                                                     @ 0
                                                                     @ GHC.Real.Rational
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.areaMetricMetric1intCond1
                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                     ww13
                                                                       `cast`
                                                                     (Data.Map.Internal.Map
                                                                        ((,,,,,,,)
                                                                           <Index.Ind
                                                                              0 Index.Uind_20>_N
                                                                           <Index.Ind
                                                                              1 Index.Lind_20>_N
                                                                           <Index.Ind
                                                                              0 Index.Uind_19>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_19>_N
                                                                           <Index.Ind
                                                                              1 Index.Uind_9>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_9>_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Uind_3>_N)_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Lind_3>_N)_N)_N
                                                                        <GHC.Real.Rational>_R)_R } } } } } } }) -}
0047eb5087049c2752c222752909d247
  $wint1Test2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.int1Test2} True True} {__scc {main:Integrabillity.int1Test2.prod} True False} BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} {__scc {main:Integrabillity.int1Test2.flat} True True} EquivarianceEqns.eqn1_1Flat
                                                                                                                                  w
                                                                                                                                  w1 of ww2 { Tensor.Tensor ww3 ->
                 case BasicTensors.invEta of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} {__scc {main:Integrabillity.int1Test2.sym} True True} BasicTensors.interI_2
                                                                                                                                 w2 of ww6 { Tensor.Tensor ww7 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} {__scc {main:Integrabillity.int1Test2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww5
                                                                                                                                   ww7 of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} {__scc {main:Integrabillity.int1Test2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 2
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww3
                                                                                                                                   ww9
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<2>_N))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<2>_N))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} {__scc {main:Integrabillity.int1Test2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 3
                                                                                                                                   @ 3
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww1
                                                                                                                                   ww11
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<1>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                     <2>_N))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                     <2>_N))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} Tensor.$wtensorContractWith_3
                                                                           @ 2
                                                                           @ 2
                                                                           @ GHC.Real.Rational
                                                                           @ 1
                                                                           @ 2
                                                                           @ 0
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           Integrabillity.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           Integrabillity.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           Integrabillity.int1Test1
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww13
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 (Index.Ind
                                                                                    (Add0R (<1>_N))
                                                                                    <Index.Uind_20>_N)_N
                                                                                 (Index.Ind
                                                                                    (AddDef (<1>_N,
                                                                                             <1>_N))
                                                                                    <Index.Lind_20>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<0>_N))
                                                                                    <Index.Uind_19>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<0>_N))
                                                                                    <Index.Lind_19>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<1>_N))
                                                                                    <Index.Uind_9>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<0>_N))
                                                                                    <Index.Lind_9>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<3>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                    <Index.Uind_3>_N)_N
                                                                                 (Index.Ind
                                                                                    (Add0L (<3>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                    <Index.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case {__scc {main:Integrabillity.int1Test2} False True} Tensor.$wtensorContractWith_3
                                                                           @ 1
                                                                           @ 1
                                                                           @ GHC.Real.Rational
                                                                           @ 1
                                                                           @ 2
                                                                           @ 0
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           Integrabillity.$stensorContractWith_3
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           Integrabillity.$stensorContractWith_3
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           Integrabillity.areaMetricMetric1intCond2
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww15
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Uind_20>_N
                                                                                 <Index.Ind
                                                                                    2
                                                                                    Index.Lind_20>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Uind_19>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_19>_N
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Uind_9>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_9>_N
                                                                                 (Index.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <Index.Uind_3>_N)_N
                                                                                 (Index.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <Index.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R of ww16 { Unit# ww17 ->
                 {__scc {main:Integrabillity.int1Test2} False True} Tensor.$wtensorContractWith_3
                                                                      @ 0
                                                                      @ 0
                                                                      @ GHC.Real.Rational
                                                                      @ 1
                                                                      @ 2
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      Integrabillity.$stensorContractWith_7
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      Integrabillity.$stensorContractWith_7
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      Integrabillity.areaMetricMetric1intCond1
                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                      ww17
                                                                        `cast`
                                                                      (Data.Map.Internal.Map
                                                                         ((,,,,,,,)
                                                                            <Index.Ind
                                                                               1 Index.Uind_20>_N
                                                                            <Index.Ind
                                                                               2 Index.Lind_20>_N
                                                                            <Index.Ind
                                                                               0 Index.Uind_19>_N
                                                                            <Index.Ind
                                                                               0 Index.Lind_19>_N
                                                                            <Index.Ind
                                                                               1 Index.Uind_9>_N
                                                                            <Index.Ind
                                                                               0 Index.Lind_9>_N
                                                                            (Index.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <Index.Uind_3>_N)_N
                                                                            (Index.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <Index.Lind_3>_N)_N)_N
                                                                         <GHC.Real.Rational>_R)_R } } } } } } } } }) -}
8fb3070301531081e7c239bc9b6caa75
  $wint1Test3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.int1Test3} True True} {__scc {main:Integrabillity.int1Test3.tens} True False} {__scc {main:Integrabillity.int1Test3.prod} True False} BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.flat} True True} EquivarianceEqns.eqn1_1Flat
                                                                                                                                  w
                                                                                                                                  w1 of ww2 { Tensor.Tensor ww3 ->
                 case BasicTensors.invEta of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.sym} True True} BasicTensors.interI_2
                                                                                                                                 w2 of ww6 { Tensor.Tensor ww7 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww5
                                                                                                                                   ww7 of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 2
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww3
                                                                                                                                   ww9
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<2>_N))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<2>_N))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 3
                                                                                                                                   @ 3
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww1
                                                                                                                                   ww11
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<1>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                     <2>_N))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                     <2>_N))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.tens} False True} Tensor.$wtensorTranspose
                                                                                                                                   @ 1
                                                                                                                                   @ 2
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 3
                                                                                                                                   @ 3
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   Integrabillity.densityEqnArea5
                                                                                                                                   Integrabillity.areaMetricMetric2
                                                                                                                                   ww13
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<1>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                     <1>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<3>_N))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<3>_N))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case ({__scc {main:Integrabillity.int1Test3} False True} {__scc {main:Integrabillity.int1Test3.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                               @ 1
                                                                                                                                                                               @ 2
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 1
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 3
                                                                                                                                                                               @ 3
                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                               ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                             @ (Index.Index
                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                  2
                                                                                                                                                                                                                                  0
                                                                                                                                                                                                                                  0
                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                  0
                                                                                                                                                                                                                                  3
                                                                                                                                                                                                                                  3)
                                                                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                                                                             (Tensor.aSymTensor3
                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                @ 2
                                                                                                                                                                                                                                @ 0
                                                                                                                                                                                                                                @ 0
                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                @ 0
                                                                                                                                                                                                                                @ 3
                                                                                                                                                                                                                                @ 3)
                                                                                                                                                                                                                             Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                             ww13
                                                                                                                                                                                                                               `cast`
                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                ((,,,,,,,)
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                      <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (AddDef (<1>_N,
                                                                                                                                                                                                                                               <1>_N))
                                                                                                                                                                                                                                      <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                      <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                      <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<1>_N))
                                                                                                                                                                                                                                      <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                      <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<3>_N))
                                                                                                                                                                                                                                      <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                      (Add0L (<3>_N))
                                                                                                                                                                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                             ww15))
                        `cast`
                      (Tensor.Tensor
                         <1>_N
                         <2>_N
                         <0>_N
                         <0>_N
                         <1>_N
                         <0>_N
                         (Sym (AddDef (<2>_N, <1>_N)))
                         (Sym (AddDef (<2>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} Tensor.$wtensorContractWith_3
                                                                           @ 2
                                                                           @ 2
                                                                           @ GHC.Real.Rational
                                                                           @ 1
                                                                           @ 2
                                                                           @ 0
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           Integrabillity.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           Integrabillity.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           Integrabillity.int1Test1
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww17 of ww18 { Unit# ww19 ->
                 case {__scc {main:Integrabillity.int1Test3} False True} Tensor.$wtensorContractWith_3
                                                                           @ 1
                                                                           @ 1
                                                                           @ GHC.Real.Rational
                                                                           @ 1
                                                                           @ 2
                                                                           @ 0
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           Integrabillity.$stensorContractWith_3
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           Integrabillity.$stensorContractWith_3
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           Integrabillity.areaMetricMetric1intCond2
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww19
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Uind_20>_N
                                                                                 <Index.Ind
                                                                                    2
                                                                                    Index.Lind_20>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Uind_19>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_19>_N
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Uind_9>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_9>_N
                                                                                 (Index.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <Index.Uind_3>_N)_N
                                                                                 (Index.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <Index.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 {__scc {main:Integrabillity.int1Test3} False True} Tensor.$wtensorContractWith_3
                                                                      @ 0
                                                                      @ 0
                                                                      @ GHC.Real.Rational
                                                                      @ 1
                                                                      @ 2
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      Integrabillity.$stensorContractWith_7
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      Integrabillity.$stensorContractWith_7
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      Integrabillity.areaMetricMetric1intCond1
                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                      ww21
                                                                        `cast`
                                                                      (Data.Map.Internal.Map
                                                                         ((,,,,,,,)
                                                                            <Index.Ind
                                                                               1 Index.Uind_20>_N
                                                                            <Index.Ind
                                                                               2 Index.Lind_20>_N
                                                                            <Index.Ind
                                                                               0 Index.Uind_19>_N
                                                                            <Index.Ind
                                                                               0 Index.Lind_19>_N
                                                                            <Index.Ind
                                                                               1 Index.Uind_9>_N
                                                                            <Index.Ind
                                                                               0 Index.Lind_9>_N
                                                                            (Index.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <Index.Uind_3>_N)_N
                                                                            (Index.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <Index.Lind_3>_N)_N)_N
                                                                         <GHC.Real.Rational>_R)_R } } } } } } } } } } }) -}
fed07d70d60f9a864b41751ec1d885d0
  $wint1Zero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.int1Zero} True True} {__scc {main:Integrabillity.int1Zero.prod} True False} {__scc {main:Integrabillity.int1Zero.flat} True True} EquivarianceEqns.eqn1_1Flat
                                                                                                                                                                                      w
                                                                                                                                                                                      w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.invEta of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.int1Zero} False True} {__scc {main:Integrabillity.int1Zero.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                   w2 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.int1Zero} False True} {__scc {main:Integrabillity.int1Zero.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww3
                                                                                                                                 ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.int1Zero} False True} {__scc {main:Integrabillity.int1Zero.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww7
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<2>_N))
                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<2>_N))
                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.int1Zero} False True} Tensor.$wtensorContractWith_3
                                                                          @ 2
                                                                          @ 2
                                                                          @ GHC.Real.Rational
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.int1Test1
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww9
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Lind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<1>_N))
                                                                                   <Index.Uind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.int1Zero} False True} Tensor.$wtensorContractWith_3
                                                                          @ 1
                                                                          @ 1
                                                                          @ GHC.Real.Rational
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.areaMetricMetric1intCond2
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww11
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_20>_N
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Lind_20>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_19>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Lind_19>_N
                                                                                <Index.Ind
                                                                                   1 Index.Uind_9>_N
                                                                                <Index.Ind
                                                                                   0 Index.Lind_9>_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 {__scc {main:Integrabillity.int1Zero} False True} Tensor.$wtensorContractWith_3
                                                                     @ 0
                                                                     @ 0
                                                                     @ GHC.Real.Rational
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.areaMetricMetric1intCond1
                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                     ww13
                                                                       `cast`
                                                                     (Data.Map.Internal.Map
                                                                        ((,,,,,,,)
                                                                           <Index.Ind
                                                                              0 Index.Uind_20>_N
                                                                           <Index.Ind
                                                                              1 Index.Lind_20>_N
                                                                           <Index.Ind
                                                                              0 Index.Uind_19>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_19>_N
                                                                           <Index.Ind
                                                                              1 Index.Uind_9>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_9>_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Uind_3>_N)_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Lind_3>_N)_N)_N
                                                                        <GHC.Real.Rational>_R)_R } } } } } } }) -}
5e9a3563cf1ebd92b23eba0eaf4893fb
  $wintCond1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.intCond1} True True} {__scc {main:Integrabillity.intCond1.intArea} True True} BasicTensors.interArea
                                                                                                                                  w
                                                                                                                                  w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.part1} True False} BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.part1} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww1
                                                                                                                                  ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.intMetric} True True} BasicTensors.interMetric
                                                                                                                                     w2
                                                                                                                                     w3 of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.part2} True False} BasicTensors.delta_20 of ww10 { Tensor.Tensor ww11 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.part2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww9
                                                                                                                                  ww11 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.block1} True False} {__scc {main:Integrabillity.intCond1.block1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                       ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                     @ (Index.Index
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                     (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                        @ 1)
                                                                                                                                                                                                                                                                                     Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                     ww5
                                                                                                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                        <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                     ww13
                                                                                                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                        <GHC.Real.Rational>_R)_R) of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                   w2 of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.block2} True False} BasicTensors.invEta of ww18 { Tensor.Tensor ww19 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   ww19
                                                                                                                                   ww17 of ww20 { Unit# ww21 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.block2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                   Integrabillity.areaMetricMetric1intCond2
                                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                   ww21
                                                                                                                                     `cast`
                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                      ((,,,,,,,)
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                          <1>_N)))
                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                         (Index.Ind
                                                                                                                                            (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                          <1>_N)))
                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                      <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.tens} True True} Tensor.$wtensorProductWith
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 1
                                                                                                                                @ 0
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                ww15
                                                                                                                                ww23 of ww24 { Unit# ww25 ->
                 case {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 1
                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                   `cast`
                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                   `cast`
                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                 Integrabillity.int1Test1
                                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                 ww25
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                   <1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       <Index.Ind
                                                                                                                                          (1
                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                          Index.Uind_3>_N
                                                                                                                                       <Index.Ind
                                                                                                                                          (1
                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                          Index.Lind_3>_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww26 { Unit# ww27 ->
                 {__scc {main:Integrabillity.intCond1} False True} {__scc {main:Integrabillity.intCond1.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            @ 1
                                                                                                                            @ 1
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 2
                                                                                                                            @ 1
                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            Integrabillity.areaMetricMetric1intCond1
                                                                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                                                                            ww27
                                                                                                                              `cast`
                                                                                                                            (Data.Map.Internal.Map
                                                                                                                               ((,,,,,,,)
                                                                                                                                  <Index.Ind
                                                                                                                                     1
                                                                                                                                     Index.Uind_20>_N
                                                                                                                                  <Index.Ind
                                                                                                                                     1
                                                                                                                                     Index.Lind_20>_N
                                                                                                                                  <Index.Ind
                                                                                                                                     0
                                                                                                                                     Index.Uind_19>_N
                                                                                                                                  <Index.Ind
                                                                                                                                     0
                                                                                                                                     Index.Lind_19>_N
                                                                                                                                  <Index.Ind
                                                                                                                                     2
                                                                                                                                     Index.Uind_9>_N
                                                                                                                                  <Index.Ind
                                                                                                                                     1
                                                                                                                                     Index.Lind_9>_N
                                                                                                                                  (Index.Ind
                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                  (Index.Ind
                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                               <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
5f18300abea34b1ac12b19e5cfb53296
  $wintCond1RelFac ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.intCond1RelFac} True True} {__scc {main:Integrabillity.intCond1RelFac.intArea} True True} BasicTensors.interAreanoFactor
                                                                                                                                              w
                                                                                                                                              w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.part1} True False} BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.part1} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              ww1
                                                                                                                                              ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.intMetric} True True} BasicTensors.interMetricnoFactor
                                                                                                                                                 w2
                                                                                                                                                 w3 of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.part2} True False} BasicTensors.delta_20 of ww10 { Tensor.Tensor ww11 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.part2} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              ww9
                                                                                                                                              ww11 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.part2} False True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                                                                                              ({__scc {main:Tensor.fmap} False True} Integrabillity.intCond1RelFac_go8
                                                                                                                                                                                                                                                                                                                       ww13
                                                                                                                                                                                                                                                                                                                         `cast`
                                                                                                                                                                                                                                                                                                                       (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                          ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                          <GHC.Real.Rational>_R)_R) of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.block1} True False} {__scc {main:Integrabillity.intCond1RelFac.block1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                         ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                       (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                                                                                          @ 1)
                                                                                                                                                                                                                                                                                                       Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                                       ww5
                                                                                                                                                                                                                                                                                                         `cast`
                                                                                                                                                                                                                                                                                                       (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                          ((,,,,,,,)
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                             (Index.Ind
                                                                                                                                                                                                                                                                                                                (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                          <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                                       ww15) of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                               w2 of ww18 { Tensor.Tensor ww19 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.block2} True False} BasicTensors.invEta of ww20 { Tensor.Tensor ww21 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 2
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 2
                                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                               ww21
                                                                                                                                               ww19 of ww22 { Unit# ww23 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.block2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.areaMetricMetric1intCond2
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww23
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                        <Index.Uind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww24 { Unit# ww25 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.tens} True True} Tensor.$wtensorProductWith
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                            ww17
                                                                                                                                            ww25 of ww26 { Unit# ww27 ->
                 case {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                             @ 1
                                                                                                                                             @ 1
                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                             @ 1
                                                                                                                                             @ 1
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 2
                                                                                                                                             @ 1
                                                                                                                                             Integrabillity.$stensorContractWith_3
                                                                                                                                               `cast`
                                                                                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                       <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                             Integrabillity.$stensorContractWith_3
                                                                                                                                               `cast`
                                                                                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                       <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                             Integrabillity.int1Test1
                                                                                                                                             GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                             ww27
                                                                                                                                               `cast`
                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                ((,,,,,,,)
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                      <Index.Uind_20>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                      <Index.Lind_20>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Uind_19>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Lind_19>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (AddDef (<1>_N,
                                                                                                                                                               <1>_N))
                                                                                                                                                      <Index.Uind_9>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                      <Index.Lind_9>_N)_N
                                                                                                                                                   <Index.Ind
                                                                                                                                                      (1
                                                                                                                                                       GHC.TypeNats.+ 1)
                                                                                                                                                      Index.Uind_3>_N
                                                                                                                                                   <Index.Ind
                                                                                                                                                      (1
                                                                                                                                                       GHC.TypeNats.+ 1)
                                                                                                                                                      Index.Lind_3>_N)_N
                                                                                                                                                <GHC.Real.Rational>_R)_R of ww28 { Unit# ww29 ->
                 {__scc {main:Integrabillity.intCond1RelFac} False True} {__scc {main:Integrabillity.intCond1RelFac.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 2
                                                                                                                                        @ 1
                                                                                                                                        Integrabillity.$stensorContractWith_7
                                                                                                                                          `cast`
                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                        Integrabillity.$stensorContractWith_7
                                                                                                                                          `cast`
                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                        Integrabillity.areaMetricMetric1intCond1
                                                                                                                                        GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                        ww29
                                                                                                                                          `cast`
                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                           ((,,,,,,,)
                                                                                                                                              <Index.Ind
                                                                                                                                                 1
                                                                                                                                                 Index.Uind_20>_N
                                                                                                                                              <Index.Ind
                                                                                                                                                 1
                                                                                                                                                 Index.Lind_20>_N
                                                                                                                                              <Index.Ind
                                                                                                                                                 0
                                                                                                                                                 Index.Uind_19>_N
                                                                                                                                              <Index.Ind
                                                                                                                                                 0
                                                                                                                                                 Index.Lind_19>_N
                                                                                                                                              <Index.Ind
                                                                                                                                                 2
                                                                                                                                                 Index.Uind_9>_N
                                                                                                                                              <Index.Ind
                                                                                                                                                 1
                                                                                                                                                 Index.Lind_9>_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Sym (Add0L (<1>_N)))
                                                                                                                                                 <Index.Uind_3>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Sym (Add0L (<1>_N)))
                                                                                                                                                 <Index.Lind_3>_N)_N)_N
                                                                                                                                           <GHC.Real.Rational>_R)_R } } } } } } } } } } } } } }) -}
1b787a4a53aded4fafad34aa90463de3
  $wintCond1Zero ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.intCond1Zero} True True} {__scc {main:Integrabillity.intCond1Zero.intMetric} True True} BasicTensors.interMetric
                                                                                                                                            w
                                                                                                                                            w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.block1} True False} {__scc {main:Integrabillity.intCond1Zero.part2} True False} BasicTensors.delta_20 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.part2} False True} Tensor.$wtensorProductWith
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 1
                                                                                                                                          @ 1
                                                                                                                                          @ 1
                                                                                                                                          @ 1
                                                                                                                                          @ 1
                                                                                                                                          @ 1
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                          ww1
                                                                                                                                          ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                           w of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.block2} True False} BasicTensors.invEta of ww10 { Tensor.Tensor ww11 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 2
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 2
                                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                           ww11
                                                                                                                                           ww9 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.block2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.areaMetricMetric1intCond2
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww13
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.tens} True True} Tensor.$wtensorProductWith
                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 1
                                                                                                                                        @ 0
                                                                                                                                        @ 1
                                                                                                                                        @ 1
                                                                                                                                        GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                        ww5
                                                                                                                                          `cast`
                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                           ((,,,,,,,)
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0L (<1>_N))
                                                                                                                                                 <Index.Uind_20>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0L (<1>_N))
                                                                                                                                                 <Index.Lind_20>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                 <Index.Uind_19>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                 <Index.Lind_19>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                 <Index.Uind_9>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                 <Index.Lind_9>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                 <Index.Uind_3>_N)_N
                                                                                                                                              (Index.Ind
                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                 <Index.Lind_3>_N)_N)_N
                                                                                                                                           <GHC.Real.Rational>_R)_R
                                                                                                                                        ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 2
                                                                                                                                         @ 1
                                                                                                                                         Integrabillity.$stensorContractWith_3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         Integrabillity.$stensorContractWith_3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         Integrabillity.int1Test1
                                                                                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                         ww17
                                                                                                                                           `cast`
                                                                                                                                         (Data.Map.Internal.Map
                                                                                                                                            ((,,,,,,,)
                                                                                                                                               (Index.Ind
                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                                               (Index.Ind
                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                                               (Index.Ind
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                                               (Index.Ind
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                                               (Index.Ind
                                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                                           <1>_N))
                                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                                               (Index.Ind
                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                                               <Index.Ind
                                                                                                                                                  (1
                                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                                  Index.Uind_3>_N
                                                                                                                                               <Index.Ind
                                                                                                                                                  (1
                                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                                  Index.Lind_3>_N)_N
                                                                                                                                            <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 {__scc {main:Integrabillity.intCond1Zero} False True} {__scc {main:Integrabillity.intCond1Zero.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 1
                                                                                                                                    @ 1
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    @ 1
                                                                                                                                    Integrabillity.$stensorContractWith_7
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    Integrabillity.$stensorContractWith_7
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    Integrabillity.areaMetricMetric1intCond1
                                                                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                    ww19
                                                                                                                                      `cast`
                                                                                                                                    (Data.Map.Internal.Map
                                                                                                                                       ((,,,,,,,)
                                                                                                                                          <Index.Ind
                                                                                                                                             1
                                                                                                                                             Index.Uind_20>_N
                                                                                                                                          <Index.Ind
                                                                                                                                             1
                                                                                                                                             Index.Lind_20>_N
                                                                                                                                          <Index.Ind
                                                                                                                                             0
                                                                                                                                             Index.Uind_19>_N
                                                                                                                                          <Index.Ind
                                                                                                                                             0
                                                                                                                                             Index.Lind_19>_N
                                                                                                                                          <Index.Ind
                                                                                                                                             2
                                                                                                                                             Index.Uind_9>_N
                                                                                                                                          <Index.Ind
                                                                                                                                             1
                                                                                                                                             Index.Lind_9>_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                                       <GHC.Real.Rational>_R)_R } } } } } } } } }) -}
a421436b38e08cad0ffba768339e518a
  $wintCond1noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.intCond1noFactor} True True} {__scc {main:Integrabillity.intCond1noFactor.intArea} True True} BasicTensors.interAreanoFactor
                                                                                                                                                  w
                                                                                                                                                  w1 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.part1} True False} BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.part1} False True} Tensor.$wtensorProductWith
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                  ww1
                                                                                                                                                  ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.intMetric} True True} BasicTensors.interMetricnoFactor
                                                                                                                                                     w2
                                                                                                                                                     w3 of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.part2} True False} BasicTensors.delta_20 of ww10 { Tensor.Tensor ww11 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.part2} False True} Tensor.$wtensorProductWith
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                  ww9
                                                                                                                                                  ww11 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.block1} True False} {__scc {main:Integrabillity.intCond1noFactor.block1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                                                                                                               ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                             @ (Index.Index
                                                                                                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                                                                                                  0
                                                                                                                                                                                                                                                                                                                  0
                                                                                                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                                                                                                  1
                                                                                                                                                                                                                                                                                                                  1)
                                                                                                                                                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                             (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                                                                                                @ 0
                                                                                                                                                                                                                                                                                                                @ 0
                                                                                                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                                                                                                @ 1
                                                                                                                                                                                                                                                                                                                @ 1)
                                                                                                                                                                                                                                                                                                             Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                                             ww5
                                                                                                                                                                                                                                                                                                               `cast`
                                                                                                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                                             ww13
                                                                                                                                                                                                                                                                                                               `cast`
                                                                                                                                                                                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                   (Index.Ind
                                                                                                                                                                                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                <GHC.Real.Rational>_R)_R) of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                                   w2 of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.block2} True False} BasicTensors.invEta of ww18 { Tensor.Tensor ww19 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 2
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 1
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 2
                                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                   ww19
                                                                                                                                                   ww17 of ww20 { Unit# ww21 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.block2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                   @ 1
                                                                                                                                                   @ 1
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 1
                                                                                                                                                   @ 0
                                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                                     `cast`
                                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                   Integrabillity.$stensorContractWith_3
                                                                                                                                                     `cast`
                                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                   Integrabillity.areaMetricMetric1intCond2
                                                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                   ww21
                                                                                                                                                     `cast`
                                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                                      ((,,,,,,,)
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<1>_N))
                                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                          <1>_N)))
                                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                                         (Index.Ind
                                                                                                                                                            (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                          <1>_N)))
                                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                                      <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.tens} True True} Tensor.$wtensorProductWith
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                ww15
                                                                                                                                                ww23 of ww24 { Unit# ww25 ->
                 case {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                 @ 1
                                                                                                                                                 @ 1
                                                                                                                                                 @ 0
                                                                                                                                                 @ 0
                                                                                                                                                 @ 2
                                                                                                                                                 @ 1
                                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                                   `cast`
                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                                   `cast`
                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                 Integrabillity.int1Test1
                                                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                 ww25
                                                                                                                                                   `cast`
                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                   <1>_N))
                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                       (Index.Ind
                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                       <Index.Ind
                                                                                                                                                          (1
                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                          Index.Uind_3>_N
                                                                                                                                                       <Index.Ind
                                                                                                                                                          (1
                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                          Index.Lind_3>_N)_N
                                                                                                                                                    <GHC.Real.Rational>_R)_R of ww26 { Unit# ww27 ->
                 {__scc {main:Integrabillity.intCond1noFactor} False True} {__scc {main:Integrabillity.intCond1noFactor.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 2
                                                                                                                                            @ 1
                                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                                              `cast`
                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                                              `cast`
                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                            Integrabillity.areaMetricMetric1intCond1
                                                                                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                            ww27
                                                                                                                                              `cast`
                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                               ((,,,,,,,)
                                                                                                                                                  <Index.Ind
                                                                                                                                                     1
                                                                                                                                                     Index.Uind_20>_N
                                                                                                                                                  <Index.Ind
                                                                                                                                                     1
                                                                                                                                                     Index.Lind_20>_N
                                                                                                                                                  <Index.Ind
                                                                                                                                                     0
                                                                                                                                                     Index.Uind_19>_N
                                                                                                                                                  <Index.Ind
                                                                                                                                                     0
                                                                                                                                                     Index.Lind_19>_N
                                                                                                                                                  <Index.Ind
                                                                                                                                                     2
                                                                                                                                                     Index.Uind_9>_N
                                                                                                                                                  <Index.Ind
                                                                                                                                                     1
                                                                                                                                                     Index.Lind_9>_N
                                                                                                                                                  (Index.Ind
                                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                  (Index.Ind
                                                                                                                                                     (Sym (Add0L (<1>_N)))
                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                               <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
9e3ffcb1957949313c878d3e820cb759
  $wintCond2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.intCond2} True True} {__scc {main:Integrabillity.intCond2.prod} True False} {__scc {main:Integrabillity.intCond2.intTotal} True False} {__scc {main:Integrabillity.intCond2.int1} True True} BasicTensors.$winterArea
                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                 w1 of ww { Unit# ww1 ->
                 case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.int1} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww3 of ww4 { Unit# ww5 ->
                 case Integrabillity.intCond6
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<2>_N))
                         (Add0R (<2>_N))
                         <GHC.Real.Rational>_R)_R of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.intTotal} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                               ({__scc {main:Tensor.fmap} False True} Integrabillity.intCond2_go8
                                                                                                                                                                                                                                                                                                                                                        ww8) of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.intTotal} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                           ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                         @ (Index.Index
                                                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                                                              2
                                                                                                                                                                                                                                                                              2)
                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                         (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                                                            @ 2
                                                                                                                                                                                                                                                                            @ 2)
                                                                                                                                                                                                                                                                         Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                         ww5
                                                                                                                                                                                                                                                                           `cast`
                                                                                                                                                                                                                                                                         (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                            ((,,,,,,,)
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                           <1>_N))
                                                                                                                                                                                                                                                                                  <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                               (Index.Ind
                                                                                                                                                                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                           <1>_N))
                                                                                                                                                                                                                                                                                  <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                            <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                         ww10) of ww11 { Tensor.Tensor ww12 ->
                 case BasicTensors.invEta of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                   w2 of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww14
                                                                                                                                 ww16 of ww17 { Unit# ww18 ->
                 case {__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww12
                                                                                                                                 ww18
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<2>_N))
                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<2>_N))
                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww19 { Unit# ww20 ->
                 case {__scc {main:Integrabillity.intCond2} False True} Tensor.$wtensorContractWith_3
                                                                          @ 3
                                                                          @ 3
                                                                          @ GHC.Real.Rational
                                                                          @ 1
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_11
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                          Integrabillity.$stensorContractWith_11
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                          Integrabillity.intCond5
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww20
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Uind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Lind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<1>_N))
                                                                                   <Index.Uind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<2>_N,
                                                                                            <2>_N) ; Sym (AddDef (<3>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<2>_N,
                                                                                            <2>_N) ; Sym (AddDef (<3>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Integrabillity.intCond2} False True} Tensor.$wtensorContractWith_3
                                                                          @ 2
                                                                          @ 2
                                                                          @ GHC.Real.Rational
                                                                          @ 1
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.intCond4
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww22
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Uind_20>_N
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Lind_20>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_19>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Lind_19>_N
                                                                                <Index.Ind
                                                                                   1 Index.Uind_9>_N
                                                                                <Index.Ind
                                                                                   0 Index.Lind_9>_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<2>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<2>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 {__scc {main:Integrabillity.intCond2} False True} Tensor.$wtensorContractWith_3
                                                                     @ 1
                                                                     @ 1
                                                                     @ GHC.Real.Rational
                                                                     @ 1
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     Integrabillity.$stensorContractWith_3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     Integrabillity.$stensorContractWith_3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     Integrabillity.int1Test1
                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                     ww24
                                                                       `cast`
                                                                     (Data.Map.Internal.Map
                                                                        ((,,,,,,,)
                                                                           <Index.Ind
                                                                              1 Index.Uind_20>_N
                                                                           <Index.Ind
                                                                              1 Index.Lind_20>_N
                                                                           <Index.Ind
                                                                              0 Index.Uind_19>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_19>_N
                                                                           <Index.Ind
                                                                              1 Index.Uind_9>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_9>_N
                                                                           (Index.Ind
                                                                              (Sym (AddDef (<1>_N,
                                                                                            <1>_N)))
                                                                              <Index.Uind_3>_N)_N
                                                                           (Index.Ind
                                                                              (Sym (AddDef (<1>_N,
                                                                                            <1>_N)))
                                                                              <Index.Lind_3>_N)_N)_N
                                                                        <GHC.Real.Rational>_R)_R } } } } } } } } } } } }) -}
00675764819f573b5defaf7b9bdb26d3
  $wintCond2_1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
1f92e535db3f5851d109ba4417f27ca1
  $wintCond2_1Symbol ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
2432393b15dbfc53b47ccfcc9420f121
  $wintCond2_1SymbolPure ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 1 1 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} True True} {__scc {main:Integrabillity.intCond2_1SymbolPure.tens} True False} BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.flatInter} True False} {__scc {main:Integrabillity.intCond2_1SymbolPure.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                   w
                                                                                                                                                                                                                                   w1 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.flatInter} False True} BasicTensors.$wflatArea
                                                                                                                                                              w1 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.flatInter} False True} Tensor.$wtensorProductWith
                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                              @ 1
                                                                                                                                                              @ 1
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ 1
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                              ww5
                                                                                                                                                              ww7 of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.flatInter} False True} Tensor.$wtensorContractWith_20
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ 1
                                                                                                                                                              Integrabillity.$stensorContractWith_7
                                                                                                                                                                `cast`
                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                        <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                              Integrabillity.$stensorContractWith_3
                                                                                                                                                                `cast`
                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                              Integrabillity.areaMetricMetric2
                                                                                                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                              ww9
                                                                                                                                                                `cast`
                                                                                                                                                              (Data.Map.Internal.Map
                                                                                                                                                                 ((,,,,,,,)
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                                       <Index.Uind_20>_N)_N
                                                                                                                                                                    <Index.Ind
                                                                                                                                                                       (1
                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                       Index.Lind_20>_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                       <Index.Uind_19>_N)_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                       <Index.Lind_19>_N)_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                       <Index.Uind_9>_N)_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                                       <Index.Lind_9>_N)_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0R (<1>_N))
                                                                                                                                                                       <Index.Uind_3>_N)_N
                                                                                                                                                                    (Index.Ind
                                                                                                                                                                       (Add0R (<1>_N))
                                                                                                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                                                                                                 <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                         ww3
                                                                                                                                                         ww11 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                         ww1
                                                                                                                                                         ww13
                                                                                                                                                           `cast`
                                                                                                                                                         (Data.Map.Internal.Map
                                                                                                                                                            ((,,,,,,,)
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Uind_3>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Lind_3>_N)_N)_N
                                                                                                                                                            <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 2
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                         ww1
                                                                                                                                                         ww15
                                                                                                                                                           `cast`
                                                                                                                                                         (Data.Map.Internal.Map
                                                                                                                                                            ((,,,,,,,)
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                                                           <1>_N))
                                                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Uind_3>_N)_N
                                                                                                                                                               (Index.Ind
                                                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                                                  <Index.Lind_3>_N)_N)_N
                                                                                                                                                            <GHC.Real.Rational>_R)_R of ww16 { Unit# ww17 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Integrabillity.intCond2_1SymbolPure.tensTranspose} True True} Tensor.$wtensorTranspose
                                                                                                                                                                 @ 2
                                                                                                                                                                 @ 3
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 Integrabillity.densityEqnArea5
                                                                                                                                                                 Integrabillity.intCond4
                                                                                                                                                                 ww17
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                   <1>_N))
                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                   <2>_N))
                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                       (Index.Ind
                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                    <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolPure} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                 @ 2
                                                                                                                                 @ 3
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                               @ (Index.Index
                                                                                                                                                                                    2
                                                                                                                                                                                    3
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    1
                                                                                                                                                                                    1
                                                                                                                                                                                    1
                                                                                                                                                                                    1)
                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                               (Tensor.aSymTensor3
                                                                                                                                                                                  @ 2
                                                                                                                                                                                  @ 3
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1)
                                                                                                                                                                               Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                               ww17
                                                                                                                                                                                 `cast`
                                                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (AddDef (<1>_N,
                                                                                                                                                                                                 <1>_N))
                                                                                                                                                                                        <Index.Uind_20>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (AddDef (<1>_N,
                                                                                                                                                                                                 <2>_N))
                                                                                                                                                                                        <Index.Lind_20>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                                                        <Index.Uind_19>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                                                        <Index.Lind_19>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                                                        <Index.Uind_9>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                                                        <Index.Lind_9>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                                                     (Index.Ind
                                                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                  <GHC.Real.Rational>_R)_R
                                                                                                                                                                               ww19) of ww20 { Tensor.Tensor ww21 ->
                 (# ww21 #) } } } } } } } } } } }) -}
15a6c650348f4748306d082e9a0d93e7
  $wintCond2_1SymbolRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} True True} {__scc {main:Integrabillity.intCond2_1SymbolRed.total} True False} {__scc {main:Integrabillity.intCond2_1SymbolRed.totalTens} True False} {__scc {main:Integrabillity.intCond2_1SymbolRed.tens} True False} BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.flatInter} True False} {__scc {main:Integrabillity.intCond2_1SymbolRed.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.flatInter} False True} BasicTensors.$wflatArea
                                                                                                                                                            w1 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.flatInter} False True} Tensor.$wtensorProductWith
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            @ 1
                                                                                                                                                            @ 1
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ 1
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                            ww3
                                                                                                                                                            ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.flatInter} False True} Tensor.$wtensorContractWith_20
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ 1
                                                                                                                                                            Integrabillity.$stensorContractWith_7
                                                                                                                                                              `cast`
                                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                            Integrabillity.$stensorContractWith_3
                                                                                                                                                              `cast`
                                                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                            Integrabillity.areaMetricMetric2
                                                                                                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                            ww7
                                                                                                                                                              `cast`
                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                               ((,,,,,,,)
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                                     <Index.Uind_20>_N)_N
                                                                                                                                                                  <Index.Ind
                                                                                                                                                                     (1
                                                                                                                                                                      GHC.TypeNats.+ 1)
                                                                                                                                                                     Index.Lind_20>_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                     <Index.Uind_19>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                     <Index.Lind_19>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                     <Index.Uind_9>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                     <Index.Lind_9>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0R (<1>_N))
                                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                                  (Index.Ind
                                                                                                                                                                     (Add0R (<1>_N))
                                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                                               <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                       @ 1
                                                                                                                                                       @ 1
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 1
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 1
                                                                                                                                                       @ 1
                                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                       ww1
                                                                                                                                                       ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.tensTranspose} True False} {__scc {main:Integrabillity.intCond2_1SymbolRed.tensTranspose} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                           Integrabillity.densityEqnArea5
                                                                                                                                                                                                                                           Integrabillity.areaMetricMetric2
                                                                                                                                                                                                                                           ww11
                                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.totalTens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                       @ 2
                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                       ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                     @ (Index.Index
                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                          2
                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                                     (Tensor.aSymTensor3
                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                        @ 2
                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                        @ 1)
                                                                                                                                                                                                                                                     Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                     ww11
                                                                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0R (<1>_N))
                                                                                                                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (AddDef (<1>_N,
                                                                                                                                                                                                                                                                       <1>_N))
                                                                                                                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                              <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                        <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                     ww13) of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.totalBlockEta} True False} BasicTensors.invEta of ww16 { Tensor.Tensor ww17 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.sym} True True} BasicTensors.interI_2
                                                                                                                                                     w2 of ww18 { Tensor.Tensor ww19 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.totalBlockEta} False True} Tensor.$wtensorProductWith
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 2
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 1
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 2
                                                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                ww17
                                                                                                                                                                ww19 of ww20 { Unit# ww21 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.totalBlockEta} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                @ 1
                                                                                                                                                                @ 1
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 0
                                                                                                                                                                @ 1
                                                                                                                                                                @ 0
                                                                                                                                                                Integrabillity.$stensorContractWith_3
                                                                                                                                                                  `cast`
                                                                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                Integrabillity.$stensorContractWith_3
                                                                                                                                                                  `cast`
                                                                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                Integrabillity.areaMetricMetric1intCond2
                                                                                                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                ww21
                                                                                                                                                                  `cast`
                                                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                                                   ((,,,,,,,)
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<1>_N))
                                                                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                       <1>_N)))
                                                                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                                                                      (Index.Ind
                                                                                                                                                                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                       <1>_N)))
                                                                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                                                                   <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} {__scc {main:Integrabillity.intCond2_1SymbolRed.total} False True} Tensor.$wtensorProductWith
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        @ 1
                                                                                                                                                        @ 2
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 1
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 1
                                                                                                                                                        @ 1
                                                                                                                                                        GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                        ww15
                                                                                                                                                        ww23 of ww24 { Unit# ww25 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} Tensor.$wtensorContractWith_3
                                                                                     @ 1
                                                                                     @ 1
                                                                                     @ GHC.Real.Rational
                                                                                     @ 1
                                                                                     @ 2
                                                                                     @ 0
                                                                                     @ 0
                                                                                     @ 1
                                                                                     @ 0
                                                                                     Integrabillity.$stensorContractWith_3
                                                                                       `cast`
                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                     Integrabillity.$stensorContractWith_3
                                                                                       `cast`
                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                     Integrabillity.areaMetricMetric2
                                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                                     ww25
                                                                                       `cast`
                                                                                     (Data.Map.Internal.Map
                                                                                        ((,,,,,,,)
                                                                                           (Index.Ind
                                                                                              (Add0R (<1>_N))
                                                                                              <Index.Uind_20>_N)_N
                                                                                           (Index.Ind
                                                                                              (Add0R (<2>_N))
                                                                                              <Index.Lind_20>_N)_N
                                                                                           (Index.Ind
                                                                                              (Add0L (<0>_N))
                                                                                              <Index.Uind_19>_N)_N
                                                                                           (Index.Ind
                                                                                              (Add0L (<0>_N))
                                                                                              <Index.Lind_19>_N)_N
                                                                                           (Index.Ind
                                                                                              (Add0L (<1>_N))
                                                                                              <Index.Uind_9>_N)_N
                                                                                           (Index.Ind
                                                                                              (Add0L (<0>_N))
                                                                                              <Index.Lind_9>_N)_N
                                                                                           <Index.Ind
                                                                                              (1
                                                                                               GHC.TypeNats.+ 1)
                                                                                              Index.Uind_3>_N
                                                                                           <Index.Ind
                                                                                              (1
                                                                                               GHC.TypeNats.+ 1)
                                                                                              Index.Lind_3>_N)_N
                                                                                        <GHC.Real.Rational>_R)_R of ww26 { Unit# ww27 ->
                 {__scc {main:Integrabillity.intCond2_1SymbolRed} False True} Tensor.$wtensorContractWith_3
                                                                                @ 0
                                                                                @ 0
                                                                                @ GHC.Real.Rational
                                                                                @ 1
                                                                                @ 2
                                                                                @ 0
                                                                                @ 0
                                                                                @ 1
                                                                                @ 0
                                                                                Integrabillity.$stensorContractWith_7
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                Integrabillity.$stensorContractWith_7
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                Integrabillity.areaMetricMetric1intCond1
                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                ww27
                                                                                  `cast`
                                                                                (Data.Map.Internal.Map
                                                                                   ((,,,,,,,)
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Uind_20>_N
                                                                                      <Index.Ind
                                                                                         2
                                                                                         Index.Lind_20>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Uind_19>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_19>_N
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Uind_9>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_9>_N
                                                                                      (Index.Ind
                                                                                         (Sym (Add0L (<1>_N)))
                                                                                         <Index.Uind_3>_N)_N
                                                                                      (Index.Ind
                                                                                         (Sym (Add0L (<1>_N)))
                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                   <GHC.Real.Rational>_R)_R } } } } } } } } } } } } } }) -}
3e85e9ac1aef041ef7da2630d49e7a3a
  $wintCond2_1SymbolRedWrong ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} True True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.total} True False} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.totalTens} True False} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.tens} True False} BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.flatInter} True False} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                               w
                                                                                                                                                                                                                                               w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.flatInter} False True} BasicTensors.$wflatArea
                                                                                                                                                                      w1 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.flatInter} False True} Tensor.$wtensorProductWith
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                      ww3
                                                                                                                                                                      ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.flatInter} False True} Tensor.$wtensorContractWith_20
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 1
                                                                                                                                                                      Integrabillity.$stensorContractWith_7
                                                                                                                                                                        `cast`
                                                                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                      Integrabillity.$stensorContractWith_3
                                                                                                                                                                        `cast`
                                                                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                      Integrabillity.areaMetricMetric2
                                                                                                                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                      ww7
                                                                                                                                                                        `cast`
                                                                                                                                                                      (Data.Map.Internal.Map
                                                                                                                                                                         ((,,,,,,,)
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                                               <Index.Uind_20>_N)_N
                                                                                                                                                                            <Index.Ind
                                                                                                                                                                               (1
                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                               Index.Lind_20>_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                                               <Index.Uind_19>_N)_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                                               <Index.Lind_19>_N)_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                                               <Index.Uind_9>_N)_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                                               <Index.Lind_9>_N)_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                                                               <Index.Uind_3>_N)_N
                                                                                                                                                                            (Index.Ind
                                                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                                                               <Index.Lind_3>_N)_N)_N
                                                                                                                                                                         <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.tens} False True} Tensor.$wtensorProductWith
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                 ww1
                                                                                                                                                                 ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.totalBlockEta} True False} BasicTensors.invEta of ww12 { Tensor.Tensor ww13 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.sym} True True} BasicTensors.interI_2
                                                                                                                                                               w2 of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.totalBlockEta} False True} Tensor.$wtensorProductWith
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 2
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 1
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 2
                                                                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                          ww13
                                                                                                                                                                          ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.totalBlockEta} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                          @ 1
                                                                                                                                                                          @ 1
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 0
                                                                                                                                                                          @ 1
                                                                                                                                                                          @ 0
                                                                                                                                                                          Integrabillity.$stensorContractWith_3
                                                                                                                                                                            `cast`
                                                                                                                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                          Integrabillity.$stensorContractWith_3
                                                                                                                                                                            `cast`
                                                                                                                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                          Integrabillity.areaMetricMetric1intCond2
                                                                                                                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                          ww17
                                                                                                                                                                            `cast`
                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                                 <1>_N)))
                                                                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                   (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                                 <1>_N)))
                                                                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                                                                             <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} {__scc {main:Integrabillity.intCond2_1SymbolRedWrong.total} False True} Tensor.$wtensorProductWith
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 2
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 1
                                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                  ww11
                                                                                                                                                                    `cast`
                                                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                                                     ((,,,,,,,)
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0R (<1>_N))
                                                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (AddDef (<1>_N,
                                                                                                                                                                                    <1>_N))
                                                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                                                        (Index.Ind
                                                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                                                     <GHC.Real.Rational>_R)_R
                                                                                                                                                                  ww19 of ww20 { Unit# ww21 ->
                 case {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} Tensor.$wtensorContractWith_3
                                                                                          @ 1
                                                                                          @ 1
                                                                                          @ GHC.Real.Rational
                                                                                          @ 1
                                                                                          @ 2
                                                                                          @ 0
                                                                                          @ 0
                                                                                          @ 1
                                                                                          @ 0
                                                                                          Integrabillity.$stensorContractWith_3
                                                                                            `cast`
                                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                          Integrabillity.$stensorContractWith_3
                                                                                            `cast`
                                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                          Integrabillity.areaMetricMetric2
                                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                                          ww21
                                                                                            `cast`
                                                                                          (Data.Map.Internal.Map
                                                                                             ((,,,,,,,)
                                                                                                (Index.Ind
                                                                                                   (Add0R (<1>_N))
                                                                                                   <Index.Uind_20>_N)_N
                                                                                                (Index.Ind
                                                                                                   (Add0R (<2>_N))
                                                                                                   <Index.Lind_20>_N)_N
                                                                                                (Index.Ind
                                                                                                   (Add0L (<0>_N))
                                                                                                   <Index.Uind_19>_N)_N
                                                                                                (Index.Ind
                                                                                                   (Add0L (<0>_N))
                                                                                                   <Index.Lind_19>_N)_N
                                                                                                (Index.Ind
                                                                                                   (Add0L (<1>_N))
                                                                                                   <Index.Uind_9>_N)_N
                                                                                                (Index.Ind
                                                                                                   (Add0L (<0>_N))
                                                                                                   <Index.Lind_9>_N)_N
                                                                                                <Index.Ind
                                                                                                   (1
                                                                                                    GHC.TypeNats.+ 1)
                                                                                                   Index.Uind_3>_N
                                                                                                <Index.Ind
                                                                                                   (1
                                                                                                    GHC.TypeNats.+ 1)
                                                                                                   Index.Lind_3>_N)_N
                                                                                             <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 {__scc {main:Integrabillity.intCond2_1SymbolRedWrong} False True} Tensor.$wtensorContractWith_3
                                                                                     @ 0
                                                                                     @ 0
                                                                                     @ GHC.Real.Rational
                                                                                     @ 1
                                                                                     @ 2
                                                                                     @ 0
                                                                                     @ 0
                                                                                     @ 1
                                                                                     @ 0
                                                                                     Integrabillity.$stensorContractWith_7
                                                                                       `cast`
                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                     Integrabillity.$stensorContractWith_7
                                                                                       `cast`
                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                     Integrabillity.areaMetricMetric1intCond1
                                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                                     ww23
                                                                                       `cast`
                                                                                     (Data.Map.Internal.Map
                                                                                        ((,,,,,,,)
                                                                                           <Index.Ind
                                                                                              1
                                                                                              Index.Uind_20>_N
                                                                                           <Index.Ind
                                                                                              2
                                                                                              Index.Lind_20>_N
                                                                                           <Index.Ind
                                                                                              0
                                                                                              Index.Uind_19>_N
                                                                                           <Index.Ind
                                                                                              0
                                                                                              Index.Lind_19>_N
                                                                                           <Index.Ind
                                                                                              1
                                                                                              Index.Uind_9>_N
                                                                                           <Index.Ind
                                                                                              0
                                                                                              Index.Lind_9>_N
                                                                                           (Index.Ind
                                                                                              (Sym (Add0L (<1>_N)))
                                                                                              <Index.Uind_3>_N)_N
                                                                                           (Index.Ind
                                                                                              (Sym (Add0L (<1>_N)))
                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                        <GHC.Real.Rational>_R)_R } } } } } } } } } } } }) -}
f161c4f5cec3c15f5137219aa891704a
  $wintCond3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.intCond3} True True} {__scc {main:Integrabillity.intCond3.prod} True False} {__scc {main:Integrabillity.intCond3.intTotal} True True} BasicTensors.interArea
                                                                                                                                                                                          w
                                                                                                                                                                                          w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.invEta of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.intCond3} False True} {__scc {main:Integrabillity.intCond3.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                   w2 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Integrabillity.intCond3} False True} {__scc {main:Integrabillity.intCond3.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww3
                                                                                                                                 ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.intCond3} False True} {__scc {main:Integrabillity.intCond3.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww7
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<2>_N))
                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<2>_N))
                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Integrabillity.intCond3} False True} Tensor.$wtensorContractWith_3
                                                                          @ 2
                                                                          @ 2
                                                                          @ GHC.Real.Rational
                                                                          @ 1
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.$stensorContractWith_1
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                          Integrabillity.intCond8
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww9
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Uind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0R (<1>_N))
                                                                                   <Index.Lind_20>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Uind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_19>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<1>_N))
                                                                                   <Index.Uind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (Add0L (<0>_N))
                                                                                   <Index.Lind_9>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (AddDef (<1>_N,
                                                                                            <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                  <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.intCond3} False True} Tensor.$wtensorContractWith_3
                                                                          @ 1
                                                                          @ 1
                                                                          @ GHC.Real.Rational
                                                                          @ 1
                                                                          @ 1
                                                                          @ 0
                                                                          @ 0
                                                                          @ 1
                                                                          @ 0
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.$stensorContractWith_3
                                                                            `cast`
                                                                          (Sym (GHC.TypeNats.N:SNat[0]
                                                                                    <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                          Integrabillity.areaMetricMetric2
                                                                          GHC.Real.$fEnumRatio_$s$c+
                                                                          ww11
                                                                            `cast`
                                                                          (Data.Map.Internal.Map
                                                                             ((,,,,,,,)
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Uind_20>_N
                                                                                <Index.Ind
                                                                                   1
                                                                                   Index.Lind_20>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Uind_19>_N
                                                                                <Index.Ind
                                                                                   0
                                                                                   Index.Lind_19>_N
                                                                                <Index.Ind
                                                                                   1 Index.Uind_9>_N
                                                                                <Index.Ind
                                                                                   0 Index.Lind_9>_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Uind_3>_N)_N
                                                                                (Index.Ind
                                                                                   (Sym (AddDef (<1>_N,
                                                                                                 <1>_N)))
                                                                                   <Index.Lind_3>_N)_N)_N
                                                                             <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 {__scc {main:Integrabillity.intCond3} False True} Tensor.$wtensorContractWith_3
                                                                     @ 0
                                                                     @ 0
                                                                     @ GHC.Real.Rational
                                                                     @ 1
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.$stensorContractWith_7
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     Integrabillity.areaMetricMetric1intCond1
                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                     ww13
                                                                       `cast`
                                                                     (Data.Map.Internal.Map
                                                                        ((,,,,,,,)
                                                                           <Index.Ind
                                                                              1 Index.Uind_20>_N
                                                                           <Index.Ind
                                                                              1 Index.Lind_20>_N
                                                                           <Index.Ind
                                                                              0 Index.Uind_19>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_19>_N
                                                                           <Index.Ind
                                                                              1 Index.Uind_9>_N
                                                                           <Index.Ind
                                                                              0 Index.Lind_9>_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Uind_3>_N)_N
                                                                           (Index.Ind
                                                                              (Sym (Add0L (<1>_N)))
                                                                              <Index.Lind_3>_N)_N)_N
                                                                        <GHC.Real.Rational>_R)_R } } } } } } }) -}
0656207180b24f35b11c00725e752c38
  $wintCondComp ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
46425cb3ada84ec6a9286aee4ab1f10e
  $wintCondCompNoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
94d1910c74a3e18e6d6b9bcc2a063426
  $wintCondCompZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
38e7a8a017e1bf86b712ae4670fd9840
  $wintCondOrd2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
016a26d73649f0bef3ae03a1a724c3fc
  $wintCondSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 2 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
b7fe66cb4b07fa222212c4966576e619
  $wintRankDef1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 2 0 0 3 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
74fcf12144eed0e8488eaab0f33fccb2
  $wintRankDef2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
53a325896ccf083fbb97bf59691d4385
  $wintRankDef3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 2 0 0 2 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
9902d2814c65db3eaad8c247730c9806
  $wintRankDef4 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 2 2 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
4ea573eae03eca7b397c7f0d653b9595
  $wintRankDef5 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 2 0 0 2 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
c6888c43aa9c9e46d4438f44f01184dc
  $winter4Factor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 0 0 0 0) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case {__scc {main:Integrabillity.inter4Factor} True True} {__scc {main:Integrabillity.inter4Factor.prod} True False} {__scc {main:Integrabillity.inter4Factor.intI} True True} BasicTensors.symI_Area
                                                                                                                                                                                                  w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.inter4Factor} False True} {__scc {main:Integrabillity.inter4Factor.intJnoF} True True} BasicTensors.interJ_Area
                                                                                                                                           w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.inter4Factor} False True} {__scc {main:Integrabillity.inter4Factor.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 4
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 4
                                                                                                                                         @ 0
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         ww1
                                                                                                                                         ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.inter4Factor} False True} Tensor.$wtensorContractWith_3
                                                                              @ 3
                                                                              @ 3
                                                                              @ GHC.Real.Rational
                                                                              @ 1
                                                                              @ 1
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              Integrabillity.$stensorContractWith_11
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                              Integrabillity.$stensorContractWith_11
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                              Integrabillity.intCond5
                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                              ww5
                                                                                `cast`
                                                                              (Data.Map.Internal.Map
                                                                                 ((,,,,,,,)
                                                                                    (Index.Ind
                                                                                       (Add0R (<1>_N))
                                                                                       <Index.Uind_20>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<1>_N))
                                                                                       <Index.Lind_20>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<0>_N))
                                                                                       <Index.Uind_19>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<0>_N))
                                                                                       <Index.Lind_19>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<0>_N))
                                                                                       <Index.Uind_9>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<0>_N))
                                                                                       <Index.Lind_9>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0L (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                     <1>_N)))
                                                                                       <Index.Uind_3>_N)_N
                                                                                    (Index.Ind
                                                                                       (Add0R (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                     <1>_N)))
                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                 <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Integrabillity.inter4Factor} False True} Tensor.$wtensorContractWith_3
                                                                              @ 2
                                                                              @ 2
                                                                              @ GHC.Real.Rational
                                                                              @ 1
                                                                              @ 1
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              Integrabillity.$stensorContractWith_1
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                              Integrabillity.$stensorContractWith_1
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                              Integrabillity.intCond8
                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                              ww8
                                                                                `cast`
                                                                              (Data.Map.Internal.Map
                                                                                 ((,,,,,,,)
                                                                                    <Index.Ind
                                                                                       1
                                                                                       Index.Uind_20>_N
                                                                                    <Index.Ind
                                                                                       1
                                                                                       Index.Lind_20>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Uind_19>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Lind_19>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Uind_9>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Lind_9>_N
                                                                                    (Index.Ind
                                                                                       (Sym (AddDef (<2>_N,
                                                                                                     <1>_N)))
                                                                                       <Index.Uind_3>_N)_N
                                                                                    (Index.Ind
                                                                                       (Sym (AddDef (<2>_N,
                                                                                                     <1>_N)))
                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                 <GHC.Real.Rational>_R)_R of ww9 { Unit# ww10 ->
                 case {__scc {main:Integrabillity.inter4Factor} False True} Tensor.$wtensorContractWith_3
                                                                              @ 1
                                                                              @ 1
                                                                              @ GHC.Real.Rational
                                                                              @ 1
                                                                              @ 1
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              Integrabillity.$stensorContractWith_3
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                              Integrabillity.$stensorContractWith_3
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                              Integrabillity.areaMetricMetric1intCond2
                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                              ww10
                                                                                `cast`
                                                                              (Data.Map.Internal.Map
                                                                                 ((,,,,,,,)
                                                                                    <Index.Ind
                                                                                       1
                                                                                       Index.Uind_20>_N
                                                                                    <Index.Ind
                                                                                       1
                                                                                       Index.Lind_20>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Uind_19>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Lind_19>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Uind_9>_N
                                                                                    <Index.Ind
                                                                                       0
                                                                                       Index.Lind_9>_N
                                                                                    (Index.Ind
                                                                                       (Sym (AddDef (<1>_N,
                                                                                                     <1>_N)))
                                                                                       <Index.Uind_3>_N)_N
                                                                                    (Index.Ind
                                                                                       (Sym (AddDef (<1>_N,
                                                                                                     <1>_N)))
                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                 <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 {__scc {main:Integrabillity.inter4Factor} False True} Tensor.$wtensorContractWith_3
                                                                         @ 0
                                                                         @ 0
                                                                         @ GHC.Real.Rational
                                                                         @ 1
                                                                         @ 1
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         Integrabillity.$stensorContractWith_7
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         Integrabillity.$stensorContractWith_7
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         Integrabillity.areaMetricMetric1intCond1
                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                         ww12
                                                                           `cast`
                                                                         (Data.Map.Internal.Map
                                                                            ((,,,,,,,)
                                                                               <Index.Ind
                                                                                  1 Index.Uind_20>_N
                                                                               <Index.Ind
                                                                                  1 Index.Lind_20>_N
                                                                               <Index.Ind
                                                                                  0 Index.Uind_19>_N
                                                                               <Index.Ind
                                                                                  0 Index.Lind_19>_N
                                                                               <Index.Ind
                                                                                  0 Index.Uind_9>_N
                                                                               <Index.Ind
                                                                                  0 Index.Lind_9>_N
                                                                               (Index.Ind
                                                                                  (Sym (Add0L (<1>_N)))
                                                                                  <Index.Uind_3>_N)_N
                                                                               (Index.Ind
                                                                                  (Sym (Add0L (<1>_N)))
                                                                                  <Index.Lind_3>_N)_N)_N
                                                                            <GHC.Real.Rational>_R)_R } } } } } }) -}
ad37752f6cd23642772ce62baf1802d2
  $winter4noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 0 0 0 0) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case {__scc {main:Integrabillity.inter4noFactor} True True} {__scc {main:Integrabillity.inter4noFactor.prod} True False} {__scc {main:Integrabillity.inter4noFactor.intI} True True} BasicTensors.interI_Area
                                                                                                                                                                                                        w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.inter4noFactor} False True} {__scc {main:Integrabillity.inter4noFactor.intJnoF} True True} BasicTensors.interJ_AreanoFactor
                                                                                                                                               w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.inter4noFactor} False True} {__scc {main:Integrabillity.inter4noFactor.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                             @ 1
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 4
                                                                                                                                             @ 0
                                                                                                                                             @ 1
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 4
                                                                                                                                             @ 0
                                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                             ww1
                                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.inter4noFactor} False True} Tensor.$wtensorContractWith_3
                                                                                @ 3
                                                                                @ 3
                                                                                @ GHC.Real.Rational
                                                                                @ 1
                                                                                @ 1
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                Integrabillity.$stensorContractWith_11
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                Integrabillity.$stensorContractWith_11
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                Integrabillity.intCond5
                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                ww5
                                                                                  `cast`
                                                                                (Data.Map.Internal.Map
                                                                                   ((,,,,,,,)
                                                                                      (Index.Ind
                                                                                         (Add0R (<1>_N))
                                                                                         <Index.Uind_20>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<1>_N))
                                                                                         <Index.Lind_20>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<0>_N))
                                                                                         <Index.Uind_19>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<0>_N))
                                                                                         <Index.Lind_19>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<0>_N))
                                                                                         <Index.Uind_9>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<0>_N))
                                                                                         <Index.Lind_9>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0L (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                       <1>_N)))
                                                                                         <Index.Uind_3>_N)_N
                                                                                      (Index.Ind
                                                                                         (Add0R (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                       <1>_N)))
                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                   <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Integrabillity.inter4noFactor} False True} Tensor.$wtensorContractWith_3
                                                                                @ 2
                                                                                @ 2
                                                                                @ GHC.Real.Rational
                                                                                @ 1
                                                                                @ 1
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                Integrabillity.$stensorContractWith_1
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                Integrabillity.$stensorContractWith_1
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                Integrabillity.intCond8
                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                ww8
                                                                                  `cast`
                                                                                (Data.Map.Internal.Map
                                                                                   ((,,,,,,,)
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Uind_20>_N
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Lind_20>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Uind_19>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_19>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Uind_9>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_9>_N
                                                                                      (Index.Ind
                                                                                         (Sym (AddDef (<2>_N,
                                                                                                       <1>_N)))
                                                                                         <Index.Uind_3>_N)_N
                                                                                      (Index.Ind
                                                                                         (Sym (AddDef (<2>_N,
                                                                                                       <1>_N)))
                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                   <GHC.Real.Rational>_R)_R of ww9 { Unit# ww10 ->
                 case {__scc {main:Integrabillity.inter4noFactor} False True} Tensor.$wtensorContractWith_3
                                                                                @ 1
                                                                                @ 1
                                                                                @ GHC.Real.Rational
                                                                                @ 1
                                                                                @ 1
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                Integrabillity.$stensorContractWith_3
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                Integrabillity.$stensorContractWith_3
                                                                                  `cast`
                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                Integrabillity.areaMetricMetric1intCond2
                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                ww10
                                                                                  `cast`
                                                                                (Data.Map.Internal.Map
                                                                                   ((,,,,,,,)
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Uind_20>_N
                                                                                      <Index.Ind
                                                                                         1
                                                                                         Index.Lind_20>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Uind_19>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_19>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Uind_9>_N
                                                                                      <Index.Ind
                                                                                         0
                                                                                         Index.Lind_9>_N
                                                                                      (Index.Ind
                                                                                         (Sym (AddDef (<1>_N,
                                                                                                       <1>_N)))
                                                                                         <Index.Uind_3>_N)_N
                                                                                      (Index.Ind
                                                                                         (Sym (AddDef (<1>_N,
                                                                                                       <1>_N)))
                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                   <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 {__scc {main:Integrabillity.inter4noFactor} False True} Tensor.$wtensorContractWith_3
                                                                           @ 0
                                                                           @ 0
                                                                           @ GHC.Real.Rational
                                                                           @ 1
                                                                           @ 1
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           Integrabillity.$stensorContractWith_7
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                           Integrabillity.$stensorContractWith_7
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                           Integrabillity.areaMetricMetric1intCond1
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww12
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Uind_20>_N
                                                                                 <Index.Ind
                                                                                    1
                                                                                    Index.Lind_20>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Uind_19>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_19>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Uind_9>_N
                                                                                 <Index.Ind
                                                                                    0
                                                                                    Index.Lind_9>_N
                                                                                 (Index.Ind
                                                                                    (Sym (Add0L (<1>_N)))
                                                                                    <Index.Uind_3>_N)_N
                                                                                 (Index.Ind
                                                                                    (Sym (Add0L (<1>_N)))
                                                                                    <Index.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R } } } } } }) -}
596516de605495c91151c5e99dd799a8
  $winter6Factor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 1 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.inter6Factor} True True} {__scc {main:Integrabillity.inter6Factor.contr1} True False} {__scc {main:Integrabillity.inter6Factor.prod1} True False} {__scc {main:Integrabillity.inter6Factor.symI} True True} BasicTensors.symI_Area
                                                                                                                                                                                                                                                                w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.intJ} True True} BasicTensors.interJ_Area
                                                                                                                                        w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.prod1} False True} Tensor.$wtensorProductWith
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ 1
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 4
                                                                                                                                          @ 0
                                                                                                                                          @ 1
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 4
                                                                                                                                          @ 0
                                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                          ww1
                                                                                                                                          ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 3
                                                                                                                                           @ 3
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           Integrabillity.$stensorContractWith_11
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_11
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                                           Integrabillity.intCond5
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww5
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 2
                                                                                                                                           @ 2
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           Integrabillity.$stensorContractWith_1
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_1
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                           Integrabillity.intCond8
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww8
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<2>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<2>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww9 { Unit# ww10 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.areaMetricMetric1intCond2
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww10
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<1>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<1>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           Integrabillity.$stensorContractWith_7
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_7
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                           Integrabillity.areaMetricMetric1intCond1
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww12
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (Add0L (<1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (Add0L (<1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr2} True False} {__scc {main:Integrabillity.inter6Factor.prod2} True False} {__scc {main:Integrabillity.inter6Factor.symI2} True True} BasicTensors.symI_2
                                                                                                                                                                                                                                                                  w2 of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.intJ2} True True} BasicTensors.interJ_2
                                                                                                                                         w3 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.prod2} False True} Tensor.$wtensorProductWith
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 1
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 2
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 0
                                                                                                                                          @ 1
                                                                                                                                          @ 2
                                                                                                                                          @ 0
                                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                          ww16
                                                                                                                                          ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_3
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           Integrabillity.areaMetricMetric1intCond2
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww20
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} {__scc {main:Integrabillity.inter6Factor.contr2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 1
                                                                                                                                           Integrabillity.$stensorContractWith_7
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                           Integrabillity.$stensorContractWith_7
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                           Integrabillity.areaMetricMetric1intCond1
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww22
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (Add0L (<1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (Add0L (<1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 case {__scc {main:Integrabillity.inter6Factor} False True} Tensor.$wtensorProductWith
                                                                              @ GHC.Real.Rational
                                                                              @ GHC.Real.Rational
                                                                              @ GHC.Real.Rational
                                                                              @ 1
                                                                              @ 1
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 1
                                                                              @ 1
                                                                              @ 0
                                                                              @ 0
                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                              ww14
                                                                              ww24 of ww25 { Unit# ww26 ->
                 (# ww26
                      `cast`
                    (Data.Map.Internal.Map
                       ((,,,,,,,)
                          (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                          (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                          (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                          (Index.Ind (Add0L (<1>_N)) <Index.Lind_9>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Uind_3>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Lind_3>_N)_N)_N
                       <GHC.Real.Rational>_R)_R #) } } } } } } } } } } } } }) -}
378769f143ef7505dd26a33adf2c97b9
  $winter6noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 1 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.inter6noFactor} True True} {__scc {main:Integrabillity.inter6noFactor.contr1} True False} {__scc {main:Integrabillity.inter6noFactor.prod1} True False} {__scc {main:Integrabillity.inter6noFactor.intI} True True} BasicTensors.interI_Area
                                                                                                                                                                                                                                                                        w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.intJnoF} True True} BasicTensors.interJ_AreanoFactor
                                                                                                                                               w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.prod1} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 4
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 4
                                                                                                                                              @ 0
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              ww1
                                                                                                                                              ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 3
                                                                                                                                               @ 3
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               Integrabillity.$stensorContractWith_11
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_11
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                                               Integrabillity.intCond5
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww5
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        <Index.Uind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                        <Index.Lind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<4>_N) ; Sym (AddDef (<3>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 2
                                                                                                                                               @ 2
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               Integrabillity.$stensorContractWith_1
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_1
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                               Integrabillity.intCond8
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww8
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Uind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Lind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_9>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_9>_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (AddDef (<2>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (AddDef (<2>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww9 { Unit# ww10 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.areaMetricMetric1intCond2
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww10
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Uind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Lind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_9>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_9>_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr1} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               Integrabillity.$stensorContractWith_7
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_7
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                               Integrabillity.areaMetricMetric1intCond1
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww12
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Uind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Lind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_9>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_9>_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (Add0L (<1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (Add0L (<1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr2} True False} {__scc {main:Integrabillity.inter6noFactor.prod2} True False} {__scc {main:Integrabillity.inter6noFactor.intI2} True True} BasicTensors.interI_2
                                                                                                                                                                                                                                                                          w2 of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.intJ2noFac} True True} BasicTensors.interJ_2noFactor
                                                                                                                                                  w3 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.prod2} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 2
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 2
                                                                                                                                              @ 0
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              ww16
                                                                                                                                              ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               Integrabillity.areaMetricMetric1intCond2
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww20
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_20>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        <Index.Uind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                        <Index.Lind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                      <1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} {__scc {main:Integrabillity.inter6noFactor.contr2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               Integrabillity.$stensorContractWith_7
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                               Integrabillity.$stensorContractWith_7
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                               Integrabillity.areaMetricMetric1intCond1
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww22
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_20>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Uind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        0
                                                                                                                                                        Index.Lind_19>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Uind_9>_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        1
                                                                                                                                                        Index.Lind_9>_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (Add0L (<1>_N)))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Sym (Add0L (<1>_N)))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 case {__scc {main:Integrabillity.inter6noFactor} False True} Tensor.$wtensorProductWith
                                                                                @ GHC.Real.Rational
                                                                                @ GHC.Real.Rational
                                                                                @ GHC.Real.Rational
                                                                                @ 1
                                                                                @ 1
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 0
                                                                                @ 1
                                                                                @ 1
                                                                                @ 0
                                                                                @ 0
                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                ww14
                                                                                ww24 of ww25 { Unit# ww26 ->
                 (# ww26
                      `cast`
                    (Data.Map.Internal.Map
                       ((,,,,,,,)
                          (Index.Ind (Add0R (<1>_N)) <Index.Uind_20>_N)_N
                          (Index.Ind (Add0R (<1>_N)) <Index.Lind_20>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Uind_19>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Lind_19>_N)_N
                          (Index.Ind (Add0L (<1>_N)) <Index.Uind_9>_N)_N
                          (Index.Ind (Add0L (<1>_N)) <Index.Lind_9>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Uind_3>_N)_N
                          (Index.Ind (Add0L (<0>_N)) <Index.Lind_3>_N)_N)_N
                       <GHC.Real.Rational>_R)_R #) } } } } } } } } } } } } }) -}
aac1eae85b66a54faaee617d71ec6978
  $winterProTest ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 2 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
9adde1d13aee71f40c60b580e475dda5
  $wmkEqnSparseintCond2_1New ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
e10c9db1e3387ef7f1dad1e599c29b2f
  $wmkEqnSparseintCond2_1Symbol ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 2 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 3 0 0 2 1 0 0) GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCond2_1Symbol} True True} letrec {
                                                                                       go13 :: [((GHC.Types.Int,
                                                                                                  GHC.Types.Int),
                                                                                                 GHC.Real.Rational)]
                                                                                               -> Data.Map.Internal.Map
                                                                                                    (Index.Index
                                                                                                       2
                                                                                                       3
                                                                                                       0
                                                                                                       0
                                                                                                       2
                                                                                                       1
                                                                                                       0
                                                                                                       0)
                                                                                                    GHC.Real.Rational
                                                                                               -> [((GHC.Types.Int,
                                                                                                     GHC.Types.Int),
                                                                                                    GHC.Real.Rational)]
                                                                                         {- Arity: 2,
                                                                                            Strictness: <L,1*U><S,1*U> -}
                                                                                       = \ (z' :: [((GHC.Types.Int,
                                                                                                     GHC.Types.Int),
                                                                                                    GHC.Real.Rational)])
                                                                                           (ds :: Data.Map.Internal.Map
                                                                                                    (Index.Index
                                                                                                       2
                                                                                                       3
                                                                                                       0
                                                                                                       0
                                                                                                       2
                                                                                                       1
                                                                                                       0
                                                                                                       0)
                                                                                                    GHC.Real.Rational) ->
                                                                                         case ds of wild {
                                                                                           Data.Map.Internal.Bin dt1 kx x l r
                                                                                           -> case kx of ww1 { (,,,,,,,) ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                                                                                              go13
                                                                                                (GHC.Types.:
                                                                                                   @ ((GHC.Types.Int,
                                                                                                       GHC.Types.Int),
                                                                                                      GHC.Real.Rational)
                                                                                                   (case Integrabillity.$windex2SparseintCond2_1Symbol
                                                                                                           w
                                                                                                           ww2
                                                                                                           ww3
                                                                                                           ww6
                                                                                                           ww7 of ww10 { (#,#) ww11 ww12 ->
                                                                                                    (ww11,
                                                                                                     ww12) },
                                                                                                    x)
                                                                                                   (go13
                                                                                                      z'
                                                                                                      r))
                                                                                                l }
                                                                                           Data.Map.Internal.Tip
                                                                                           -> z' }
                                                                                     } in
                                                                                     Integrabillity.$sfromList
                                                                                       @ (GHC.Real.Ratio
                                                                                            GHC.Integer.Type.Integer)
                                                                                       (go13
                                                                                          (GHC.Types.[]
                                                                                             @ ((GHC.Types.Int,
                                                                                                 GHC.Types.Int),
                                                                                                GHC.Real.Rational))
                                                                                          ww)) -}
47bfaf38f05a027f96bd879019fc663e
  $wmkEqnSparseintCond2_1SymbolPure ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 3 0 0 1 1 1 1) GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCond2_1SymbolPure} True True} letrec {
                                                                                           go13 :: [((GHC.Types.Int,
                                                                                                      GHC.Types.Int),
                                                                                                     GHC.Real.Rational)]
                                                                                                   -> Data.Map.Internal.Map
                                                                                                        (Index.Index
                                                                                                           2
                                                                                                           3
                                                                                                           0
                                                                                                           0
                                                                                                           1
                                                                                                           1
                                                                                                           1
                                                                                                           1)
                                                                                                        GHC.Real.Rational
                                                                                                   -> [((GHC.Types.Int,
                                                                                                         GHC.Types.Int),
                                                                                                        GHC.Real.Rational)]
                                                                                             {- Arity: 2,
                                                                                                Strictness: <L,1*U><S,1*U> -}
                                                                                           = \ (z' :: [((GHC.Types.Int,
                                                                                                         GHC.Types.Int),
                                                                                                        GHC.Real.Rational)])
                                                                                               (ds :: Data.Map.Internal.Map
                                                                                                        (Index.Index
                                                                                                           2
                                                                                                           3
                                                                                                           0
                                                                                                           0
                                                                                                           1
                                                                                                           1
                                                                                                           1
                                                                                                           1)
                                                                                                        GHC.Real.Rational) ->
                                                                                             case ds of wild {
                                                                                               Data.Map.Internal.Bin dt1 kx x l r
                                                                                               -> case kx of ww1 { (,,,,,,,) ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                                                                                                  go13
                                                                                                    (GHC.Types.:
                                                                                                       @ ((GHC.Types.Int,
                                                                                                           GHC.Types.Int),
                                                                                                          GHC.Real.Rational)
                                                                                                       (case Integrabillity.$windex2SparseintCond2_1SymbolPure
                                                                                                               w
                                                                                                               ww2
                                                                                                               ww3
                                                                                                               ww6
                                                                                                               ww7
                                                                                                               ww8
                                                                                                               ww9 of ww10 { (#,#) ww11 ww12 ->
                                                                                                        (ww11,
                                                                                                         ww12) },
                                                                                                        x)
                                                                                                       (go13
                                                                                                          z'
                                                                                                          r))
                                                                                                    l }
                                                                                               Data.Map.Internal.Tip
                                                                                               -> z' }
                                                                                         } in
                                                                                         Integrabillity.$sfromList
                                                                                           @ (GHC.Real.Ratio
                                                                                                GHC.Integer.Type.Integer)
                                                                                           (go13
                                                                                              (GHC.Types.[]
                                                                                                 @ ((GHC.Types.Int,
                                                                                                     GHC.Types.Int),
                                                                                                    GHC.Real.Rational))
                                                                                              ww)) -}
774882a5d46bfbbd2a56cddbb7c11423
  $wmkEqnSparseintCond2_1SymbolRed ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCond2_1SymbolRed} True True} letrec {
                                                                                          go13 :: [((GHC.Types.Int,
                                                                                                     GHC.Types.Int),
                                                                                                    GHC.Real.Rational)]
                                                                                                  -> Data.Map.Internal.Map
                                                                                                       (Index.Index
                                                                                                          1
                                                                                                          2
                                                                                                          0
                                                                                                          0
                                                                                                          1
                                                                                                          0
                                                                                                          0
                                                                                                          0)
                                                                                                       GHC.Real.Rational
                                                                                                  -> [((GHC.Types.Int,
                                                                                                        GHC.Types.Int),
                                                                                                       GHC.Real.Rational)]
                                                                                            {- Arity: 2,
                                                                                               Strictness: <L,1*U><S,1*U> -}
                                                                                          = \ (z' :: [((GHC.Types.Int,
                                                                                                        GHC.Types.Int),
                                                                                                       GHC.Real.Rational)])
                                                                                              (ds :: Data.Map.Internal.Map
                                                                                                       (Index.Index
                                                                                                          1
                                                                                                          2
                                                                                                          0
                                                                                                          0
                                                                                                          1
                                                                                                          0
                                                                                                          0
                                                                                                          0)
                                                                                                       GHC.Real.Rational) ->
                                                                                            case ds of wild {
                                                                                              Data.Map.Internal.Bin dt1 kx x l r
                                                                                              -> case kx of ww1 { (,,,,,,,) ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                                                                                                 go13
                                                                                                   (GHC.Types.:
                                                                                                      @ ((GHC.Types.Int,
                                                                                                          GHC.Types.Int),
                                                                                                         GHC.Real.Rational)
                                                                                                      (case Integrabillity.$windex2SparseintCond2_1SymbolRed
                                                                                                              w
                                                                                                              ww2
                                                                                                              ww3
                                                                                                              ww6 of ww10 { (#,#) ww11 ww12 ->
                                                                                                       (ww11,
                                                                                                        ww12) },
                                                                                                       x)
                                                                                                      (go13
                                                                                                         z'
                                                                                                         r))
                                                                                                   l }
                                                                                              Data.Map.Internal.Tip
                                                                                              -> z' }
                                                                                        } in
                                                                                        Integrabillity.$sfromList
                                                                                          @ (GHC.Real.Ratio
                                                                                               GHC.Integer.Type.Integer)
                                                                                          (go13
                                                                                             (GHC.Types.[]
                                                                                                @ ((GHC.Types.Int,
                                                                                                    GHC.Types.Int),
                                                                                                   GHC.Real.Rational))
                                                                                             ww)) -}
8a8c2896d938b405d1ee90b548d48d5a
  $wmkEqnSparseintCondCompNew ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
201897693c8f34408894169a77b49d80
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
c6194ec14aeeeba0c9ff7976436f3bce
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> a
  {- Arity: 3, Strictness: <S,U><S(S),1*U(U)><S,1*U>, Inline: [0] -}
f8c919daf99b4e1ed3adaca34539195a
  $wprojectorMatrix ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index
               (1 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 1)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (4 GHC.TypeNats.+ 2))
            GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.projectorMatrix} True True} {__scc {main:BasicTensors.interI_Area} True True} BasicTensors.interI_Area2
                                                                                                                                  BasicTensors.interI_Area1
                                                                                                                                  (BasicTensors.interF_IArea
                                                                                                                                     w) of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.projectorMatrix} False True} BasicTensors.interI_2
                                                                                 w1 of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.projectorMatrix} False True} Tensor.$wtensorProductWith
                                                                            @ GHC.Real.Rational
                                                                            @ GHC.Real.Rational
                                                                            @ GHC.Real.Rational
                                                                            @ 1
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 4
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 1
                                                                            @ 0
                                                                            @ 0
                                                                            @ 2
                                                                            GHC.Real.$fFractionalRatio_$s$c*
                                                                            ww1
                                                                            ww3 } }) -}
ef4c6efb911dd69cbd5f2be1ce52d7e3
  $wprojectorMatrixMixed1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index
               (1 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 1)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (4 GHC.TypeNats.+ 2))
            GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.projectorMatrixMixed1} True True} {__scc {main:BasicTensors.interI_Area} True True} BasicTensors.interI_Area2
                                                                                                                                        BasicTensors.interI_Area1
                                                                                                                                        (BasicTensors.interF_IArea
                                                                                                                                           w) of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.projectorMatrixMixed1} False True} BasicTensors.symI_2
                                                                                       w1 of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.projectorMatrixMixed1} False True} Tensor.$wtensorProductWith
                                                                                  @ GHC.Real.Rational
                                                                                  @ GHC.Real.Rational
                                                                                  @ GHC.Real.Rational
                                                                                  @ 1
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 4
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 1
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 2
                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                  ww1
                                                                                  ww3 } }) -}
fe1fe0f441dfee226aced471acd0e478
  $wprojectorMatrixMixed2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index
               (1 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 1)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (4 GHC.TypeNats.+ 2))
            GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.projectorMatrixMixed2} True True} BasicTensors.symI_Area
                                                                                      w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.projectorMatrixMixed2} False True} BasicTensors.interI_2
                                                                                       w1 of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.projectorMatrixMixed2} False True} Tensor.$wtensorProductWith
                                                                                  @ GHC.Real.Rational
                                                                                  @ GHC.Real.Rational
                                                                                  @ GHC.Real.Rational
                                                                                  @ 1
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 4
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 1
                                                                                  @ 0
                                                                                  @ 0
                                                                                  @ 2
                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                  ww1
                                                                                  ww3 } }) -}
fb06e5c28ad956275dc952983d1651b8
  $wprojectorMatrixSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index
               (1 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 1)
               (0 GHC.TypeNats.+ 0)
               (0 GHC.TypeNats.+ 0)
               (4 GHC.TypeNats.+ 2))
            GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Integrabillity.projectorMatrixSym} True True} BasicTensors.symI_Area
                                                                                   w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.projectorMatrixSym} False True} BasicTensors.symI_2
                                                                                    w1 of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.projectorMatrixSym} False True} Tensor.$wtensorProductWith
                                                                               @ GHC.Real.Rational
                                                                               @ GHC.Real.Rational
                                                                               @ GHC.Real.Rational
                                                                               @ 1
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 4
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 0
                                                                               @ 1
                                                                               @ 0
                                                                               @ 0
                                                                               @ 2
                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                               ww1
                                                                               ww3 } }) -}
d21b9d50d363142b4fcf97e5387e8bf4
  $wprolongation1AI_ACK ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 1 2 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 {__scc {main:Integrabillity.prolongation1AI_ACK} True True} let {
                                                                               flatInter :: Tensor.Tensor
                                                                                              0
                                                                                              1
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              1
                                                                                              1
                                                                                              GHC.Real.Rational
                                                                               = let {
                                                                                   flatA :: Tensor.Tensor
                                                                                              0
                                                                                              1
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              0
                                                                                              GHC.Real.Rational
                                                                                   = {__scc {main:Integrabillity.prolongation1AI_ACK.flatA} True True} BasicTensors.flatArea
                                                                                                                                                         w1
                                                                                 } in
                                                                                 let {
                                                                                   intArea :: Tensor.Tensor
                                                                                                1
                                                                                                1
                                                                                                0
                                                                                                0
                                                                                                0
                                                                                                0
                                                                                                1
                                                                                                1
                                                                                                GHC.Real.Rational
                                                                                   = {__scc {main:Integrabillity.prolongation1AI_ACK.intArea} True True} BasicTensors.interArea
                                                                                                                                                           w
                                                                                                                                                           w1
                                                                                 } in
                                                                                 {__scc {main:Integrabillity.prolongation1AI_ACK.flatInter} True True} case (Integrabillity.prolongation1AI_ACK3
                                                                                                                                                               intArea
                                                                                                                                                               flatA)
                                                                                                                                                              `cast`
                                                                                                                                                            (Tensor.Tensor
                                                                                                                                                               (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                               <1
                                                                                                                                                                GHC.TypeNats.+ 1>_N
                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                                               <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                                                                                                                                                       case Tensor.$wtensorContractWith_20
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 0
                                                                                                                                                              @ 1
                                                                                                                                                              @ 1
                                                                                                                                                              Integrabillity.$stensorContractWith_7
                                                                                                                                                                `cast`
                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                        <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                              Integrabillity.$stensorContractWith_3
                                                                                                                                                                `cast`
                                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                              Integrabillity.areaMetricMetric2
                                                                                                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                              ww1 of ww2 { Unit# ww3 ->
                                                                                                                                                       Tensor.Tensor
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 1
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         ww3 } }
                                                                             } in
                                                                             ({__scc {main:Integrabillity.prolongation1AI_ACK.tens} True True} Integrabillity.prolongation1AI_ACK2
                                                                                                                                                 BasicTensors.delta_20
                                                                                                                                                 (Integrabillity.prolongation1AI_ACK1
                                                                                                                                                    BasicTensors.delta_9
                                                                                                                                                    flatInter)
                                                                                                                                                   `cast`
                                                                                                                                                 (Tensor.Tensor
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <GHC.Real.Rational>_R)_R)
                                                                               `cast`
                                                                             (Tensor.Tensor
                                                                                (Add0R (<1>_N))
                                                                                (AddDef (<1>_N,
                                                                                         <1>_N))
                                                                                (Add0L (<0>_N))
                                                                                (Add0L (<0>_N))
                                                                                (Add0L (<1>_N))
                                                                                (Add0L (<1>_N))
                                                                                (Add0L (<1>_N))
                                                                                (Add0L (<1>_N))
                                                                                <GHC.Real.Rational>_R)_R) -}
076264e3ee996519812a6e3ce45018cd
  $wprolongation2AaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 0 0 3 3) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case ({__scc {main:Integrabillity.prolongation2AaBb} True True} {__scc {main:Integrabillity.prolongation2AaBb.tens} True False} Integrabillity.prolongation2AaBb6)
                        `cast`
                      (Tensor.Tensor
                         (AddDef (<1>_N, <1>_N))
                         (AddDef (<1>_N, <1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<3>_N))
                         (Add0L (<3>_N))
                         <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} let {
                                                                                   int2 :: Tensor.Tensor
                                                                                             1
                                                                                             1
                                                                                             0
                                                                                             0
                                                                                             0
                                                                                             0
                                                                                             2
                                                                                             2
                                                                                             GHC.Real.Rational
                                                                                   = {__scc {main:Integrabillity.prolongation2AaBb.int2} True True} BasicTensors.interEqn1_2
                                                                                                                                                      w
                                                                                                                                                      w1
                                                                                 } in
                                                                                 ({__scc {main:Integrabillity.prolongation2AaBb.block2} True True} Integrabillity.prolongation2AaBb5
                                                                                                                                                     int2
                                                                                                                                                     Integrabillity.prolongation2AaBb3
                                                                                                                                                       `cast`
                                                                                                                                                     (Tensor.Tensor
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                                        <GHC.Real.Rational>_R)_R)
                                                                                   `cast`
                                                                                 (Tensor.Tensor
                                                                                    (AddDef (<1>_N,
                                                                                             <1>_N))
                                                                                    (AddDef (<1>_N,
                                                                                             <1>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (AddDef (<2>_N,
                                                                                             <1>_N))
                                                                                    (AddDef (<2>_N,
                                                                                             <1>_N))
                                                                                    <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block3} True False} {__scc {main:Integrabillity.prolongation2AaBb.block3} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                                                       @ 2
                                                                                                                                                                                                                       @ 2
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 3
                                                                                                                                                                                                                       @ 3
                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                       Integrabillity.prolongation2AaBb2
                                                                                                                                                                                                                       Integrabillity.prolongation2AaBb1
                                                                                                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block3} False True} Tensor.$wtensorTranspose
                                                                                                                                                     @ 2
                                                                                                                                                     @ 2
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 3
                                                                                                                                                     @ 3
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     Integrabillity.areaMetricMetric3
                                                                                                                                                     Integrabillity.areaMetricMetric2
                                                                                                                                                     ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.tens} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 3
                                                                                                                                                                                                                                         @ 3
                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                         (let {
                                                                                                                                                                                                                                            ww8 :: Data.Map.Internal.Map
                                                                                                                                                                                                                                                     (Index.Index
                                                                                                                                                                                                                                                        2
                                                                                                                                                                                                                                                        2
                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                                        3
                                                                                                                                                                                                                                                        3)
                                                                                                                                                                                                                                                     GHC.Real.Rational
                                                                                                                                                                                                                                            = {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                3
                                                                                                                                                                                                                                                                                                3)
                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                              @ 3
                                                                                                                                                                                                                                                                                              @ 3)
                                                                                                                                                                                                                                                                                           Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                           ww3
                                                                                                                                                                                                                                                                                           ww7
                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                          {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                                                                            3
                                                                                                                                                                                                                                                                                            3)
                                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                       (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 2
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                          @ 3
                                                                                                                                                                                                                                                                                          @ 3)
                                                                                                                                                                                                                                                                                       Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                                                                       ww1
                                                                                                                                                                                                                                                                                       ww8) of ww8 { Tensor.Tensor ww9 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.tensTrans} True True} Tensor.$wtensorTranspose
                                                                                                                                                       @ 2
                                                                                                                                                       @ 2
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 3
                                                                                                                                                       @ 3
                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                       Integrabillity.intCond7
                                                                                                                                                       Integrabillity.prolongation2AaBb1
                                                                                                                                                       ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.tensTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                        @ 2
                                                                                                                                                        @ 2
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 3
                                                                                                                                                        @ 3
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        Integrabillity.densityEqnArea5
                                                                                                                                                        Integrabillity.areaMetricMetric2
                                                                                                                                                        ww11 of ww12 { Unit# ww13 ->
                 case {__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                              @ 2
                                                                                                                              @ 2
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 0
                                                                                                                              @ 3
                                                                                                                              @ 3
                                                                                                                              @ GHC.Real.Rational
                                                                                                                              ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                            @ (Index.Index
                                                                                                                                                                                 2
                                                                                                                                                                                 2
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 0
                                                                                                                                                                                 3
                                                                                                                                                                                 3)
                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                            (Tensor.aSymTensor3
                                                                                                                                                                               @ 2
                                                                                                                                                                               @ 2
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 3
                                                                                                                                                                               @ 3)
                                                                                                                                                                            Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                            ww9
                                                                                                                                                                            ww13) of ww14 { Tensor.Tensor ww15 ->
                 (# ww15 #) } } } } } } } }) -}
43211be213f0edf47e4a6f497b34babe
  $wprolongation2AaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 3 3) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case {__scc {main:Integrabillity.prolongation2AaBbC} True True} let {
                                                                                   flatInter :: Tensor.Tensor
                                                                                                  0
                                                                                                  1
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  1
                                                                                                  1
                                                                                                  GHC.Real.Rational
                                                                                   = let {
                                                                                       flatA :: Tensor.Tensor
                                                                                                  0
                                                                                                  1
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  0
                                                                                                  GHC.Real.Rational
                                                                                       = {__scc {main:Integrabillity.prolongation2AaBbC.flatA} True True} BasicTensors.flatArea
                                                                                                                                                            w1
                                                                                     } in
                                                                                     let {
                                                                                       intArea :: Tensor.Tensor
                                                                                                    1
                                                                                                    1
                                                                                                    0
                                                                                                    0
                                                                                                    0
                                                                                                    0
                                                                                                    1
                                                                                                    1
                                                                                                    GHC.Real.Rational
                                                                                       = {__scc {main:Integrabillity.prolongation2AaBbC.intArea} True True} BasicTensors.interArea
                                                                                                                                                              w
                                                                                                                                                              w1
                                                                                     } in
                                                                                     {__scc {main:Integrabillity.prolongation2AaBbC.flatInter} True True} case (Integrabillity.prolongation2AaBbC5
                                                                                                                                                                  intArea
                                                                                                                                                                  flatA)
                                                                                                                                                                 `cast`
                                                                                                                                                               (Tensor.Tensor
                                                                                                                                                                  (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                                  <1
                                                                                                                                                                   GHC.TypeNats.+ 1>_N
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                                                                                                                                                          case Tensor.$wtensorContractWith_20
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 0
                                                                                                                                                                 @ 1
                                                                                                                                                                 @ 1
                                                                                                                                                                 Integrabillity.$stensorContractWith_7
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                 Integrabillity.$stensorContractWith_3
                                                                                                                                                                   `cast`
                                                                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                 Integrabillity.areaMetricMetric2
                                                                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                 ww1 of ww2 { Unit# ww3 ->
                                                                                                                                                          Tensor.Tensor
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 0
                                                                                                                                                            @ 1
                                                                                                                                                            @ 1
                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                            ww3 } }
                                                                                 } in
                                                                                 ({__scc {main:Integrabillity.prolongation2AaBbC.tens} True True} Integrabillity.prolongation2AaBbC4
                                                                                                                                                    BasicTensors.delta_20
                                                                                                                                                    (Integrabillity.prolongation2AaBbC3
                                                                                                                                                       BasicTensors.delta_20
                                                                                                                                                       (Integrabillity.prolongation2AaBbC2
                                                                                                                                                          BasicTensors.delta_3
                                                                                                                                                          (Integrabillity.prolongation2AaBbC1
                                                                                                                                                             BasicTensors.delta_3
                                                                                                                                                             flatInter)
                                                                                                                                                            `cast`
                                                                                                                                                          (Tensor.Tensor
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             (Add0L (<1>_N))
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             (AddDef (<1>_N,
                                                                                                                                                                      <1>_N))
                                                                                                                                                             (AddDef (<1>_N,
                                                                                                                                                                      <1>_N))
                                                                                                                                                             <GHC.Real.Rational>_R)_R)
                                                                                                                                                         `cast`
                                                                                                                                                       (Tensor.Tensor
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                   <2>_N))
                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                   <2>_N))
                                                                                                                                                          <GHC.Real.Rational>_R)_R)
                                                                                                                                                      `cast`
                                                                                                                                                    (Tensor.Tensor
                                                                                                                                                       (Add0R (<1>_N))
                                                                                                                                                       (AddDef (<1>_N,
                                                                                                                                                                <1>_N))
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       (Add0L (<3>_N))
                                                                                                                                                       (Add0L (<3>_N))
                                                                                                                                                       <GHC.Real.Rational>_R)_R)
                                                                                   `cast`
                                                                                 (Tensor.Tensor
                                                                                    (AddDef (<1>_N,
                                                                                             <1>_N))
                                                                                    (AddDef (<1>_N,
                                                                                             <2>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<0>_N))
                                                                                    (Add0L (<3>_N))
                                                                                    (Add0L (<3>_N))
                                                                                    <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tensTrans} True True} Tensor.$wtensorTranspose
                                                                                                                                                         @ 2
                                                                                                                                                         @ 3
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 3
                                                                                                                                                         @ 3
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         Integrabillity.intCond7
                                                                                                                                                         Integrabillity.prolongation2AaBb1
                                                                                                                                                         ww1 of ww2 { Unit# ww3 ->
                 case {__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tensTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                          @ 2
                                                                                                                                                          @ 3
                                                                                                                                                          @ 0
                                                                                                                                                          @ 0
                                                                                                                                                          @ 0
                                                                                                                                                          @ 0
                                                                                                                                                          @ 3
                                                                                                                                                          @ 3
                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                          Integrabillity.densityEqnArea5
                                                                                                                                                          Integrabillity.areaMetricMetric2
                                                                                                                                                          ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                               @ 2
                                                                                                                               @ 3
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 3
                                                                                                                               @ 3
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                             @ (Index.Index
                                                                                                                                                                                  2
                                                                                                                                                                                  3
                                                                                                                                                                                  0
                                                                                                                                                                                  0
                                                                                                                                                                                  0
                                                                                                                                                                                  0
                                                                                                                                                                                  3
                                                                                                                                                                                  3)
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             (Tensor.aSymTensor3
                                                                                                                                                                                @ 2
                                                                                                                                                                                @ 3
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 3
                                                                                                                                                                                @ 3)
                                                                                                                                                                             Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                             ww1
                                                                                                                                                                             ww5) of ww6 { Tensor.Tensor ww7 ->
                 (# ww7 #) } } } }) -}
259e93637b9be593320d1f1c1248d832
  areaMetricMetric1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 0 1 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case Integrabillity.$wareaMetricMetric1 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
491a722b4072b971c4835e7cd675ab65
  areaMetricMetric1intCond ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wareaMetricMetric1intCond
                        w
                        w1
                        w2
                        w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
a1680db3ed4636f7527cba6e554f87d8
  areaMetricMetric1intCond1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric4,
                  Integrabillity.areaMetricMetric4)) -}
da55183407890fa8b38ec621a1d840f7
  areaMetricMetric1intCond2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric3,
                  Integrabillity.areaMetricMetric3)) -}
f19c7a8c3d1b1dc9612698a5e7861445
  areaMetricMetric1intCond_lvl19 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:Tensor.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
7d6a0fa1ff301f7e3f8294b9f6b75f98
  areaMetricMetric2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric4,
                  Integrabillity.areaMetricMetric3)) -}
e81e5af29ebb159733c0c36370a035ea
  areaMetricMetric3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
b70dfdf894cabcab67511fe9799208b2
  areaMetricMetric4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6236b80c9af655406799669a52e03ffc
  densityEqnArea1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case {__scc {main:Integrabillity.densityEqnArea1} True True} {__scc {main:Integrabillity.densityEqnArea1.intArea} True True} BasicTensors.interArea
                                                                                                                                                w
                                                                                                                                                w1 of ww { Tensor.Tensor ww1 ->
                 case ({__scc {main:Integrabillity.densityEqnArea1} False True} {__scc {main:Integrabillity.densityEqnArea1.tens} True False} Integrabillity.densityEqnArea4)
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.densityEqnArea1} False True} {__scc {main:Integrabillity.densityEqnArea1.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                     @ 1
                                                                                                                                                                                     @ 1
                                                                                                                                                                                     @ 0
                                                                                                                                                                                     @ 0
                                                                                                                                                                                     @ 0
                                                                                                                                                                                     @ 0
                                                                                                                                                                                     @ 1
                                                                                                                                                                                     @ 1
                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                     ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                   @ (Index.Index
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                        0
                                                                                                                                                                                                                                        1
                                                                                                                                                                                                                                        1)
                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                   (Tensor.aSymTensor3
                                                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                                                      @ 1)
                                                                                                                                                                                                                                   Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                   ww3
                                                                                                                                                                                                                                   ww1) } }) -}
f8e8c2d7d25b2d9d34941d8e5c8ae1b7
  densityEqnArea2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 2 2 0 0 0 0 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case Integrabillity.$wdensityEqnArea2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
68b082f9baa40d75014dc84d16e31d7f
  densityEqnArea4 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.densityEqnArea1} False True} {__scc {main:Integrabillity.densityEqnArea1.tens} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                                        case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                                        case Tensor.$wtensorProductWith
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                               ww1
                                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                                                                                                                                        Tensor.Tensor
                                                                                                                                          @ (1
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (1
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          ww5 } } }) -}
5e47aef96a257962887ad85df3697812
  densityEqnArea5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
6d486867e7a515e98edbb29a2472b87e
  densityEqnArea6 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.densityEqnArea2} False True} {__scc {main:Integrabillity.densityEqnArea2.block1} True True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                                         case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                                         case Tensor.$wtensorProductWith
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                ww1
                                                                                                                                                ww3 of ww4 { Unit# ww5 ->
                                                                                                                                         case Tensor.$wtensorProductWith
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                ww1
                                                                                                                                                ww5
                                                                                                                                                  `cast`
                                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                                   ((,,,,,,,)
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<1>_N))
                                                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                                                      (Index.Ind
                                                                                                                                                         (Add0L (<1>_N))
                                                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                                                   <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                                                                                                                                         Tensor.Tensor
                                                                                                                                           @ (1
                                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                                           @ (1
                                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                                           @ (0
                                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           ww8 } } } }) -}
766e2ccd9d65ecb911e5a37ab1e863f6
  densityEqnMetric1 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.densityEqnMetric1} True True} {__scc {main:Integrabillity.densityEqnMetric1.intMetric} True True} BasicTensors.interMetric
                                                                                                                                                      w
                                                                                                                                                      w1 of ww { Tensor.Tensor ww1 ->
                 case ({__scc {main:Integrabillity.densityEqnMetric1} False True} {__scc {main:Integrabillity.densityEqnMetric1.tens} True False} Integrabillity.densityEqnMetric4)
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.densityEqnMetric1} False True} {__scc {main:Integrabillity.densityEqnMetric1.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                         ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                            0
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                            1
                                                                                                                                                                                                                                            1)
                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                       (Tensor.aSymTensor3
                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                          @ 1
                                                                                                                                                                                                                                          @ 1)
                                                                                                                                                                                                                                       Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                       ww3
                                                                                                                                                                                                                                       ww1) } }) -}
a13082b2e75396116ce26c578016ccfd
  densityEqnMetric2 ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 2 2 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wdensityEqnMetric2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
0cbb949f4bd47892179df6f0fda3390a
  densityEqnMetric4 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.densityEqnMetric1} False True} {__scc {main:Integrabillity.densityEqnMetric1.tens} False True} case BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                                                                                                                                            case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                                            case Tensor.$wtensorProductWith
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 1
                                                                                                                                                   @ 1
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 1
                                                                                                                                                   @ 1
                                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                   ww1
                                                                                                                                                   ww3 of ww4 { Unit# ww5 ->
                                                                                                                                            Tensor.Tensor
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (1
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (1
                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                              @ (0
                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              ww5 } } }) -}
08d0acd30cf155d10dee231152d90bdc
  densityEqnMetric5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
023c41f4bc17fb0044698ac66c0daa8e
  densityEqnMetric6 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.densityEqnMetric2} False True} {__scc {main:Integrabillity.densityEqnMetric2.block1} True True} case BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                                                                                                                                             case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                                             case Tensor.$wtensorProductWith
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                    ww1
                                                                                                                                                    ww3 of ww4 { Unit# ww5 ->
                                                                                                                                             case Tensor.$wtensorProductWith
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 0
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    @ 1
                                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                    ww1
                                                                                                                                                    ww5
                                                                                                                                                      `cast`
                                                                                                                                                    (Data.Map.Internal.Map
                                                                                                                                                       ((,,,,,,,)
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             <Index.Uind_20>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             <Index.Lind_20>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             <Index.Uind_19>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                                             <Index.Lind_19>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0R (<1>_N))
                                                                                                                                                             <Index.Uind_9>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0R (<1>_N))
                                                                                                                                                             <Index.Lind_9>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<1>_N))
                                                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                                                          (Index.Ind
                                                                                                                                                             (Add0L (<1>_N))
                                                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                                                       <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                                                                                                                                             Tensor.Tensor
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 0)
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 0)
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 0)
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 0)
                                                                                                                                               @ (1
                                                                                                                                                  GHC.TypeNats.+ 1)
                                                                                                                                               @ (1
                                                                                                                                                  GHC.TypeNats.+ 1)
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 1)
                                                                                                                                               @ (0
                                                                                                                                                  GHC.TypeNats.+ 1)
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               ww8 } } } }) -}
a339b42ded40a339ca50266051309946
  flatMetricInter ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wflatMetricInter w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
44f4708726ce21ee2ba41779caa6f976
  flatMetricInterProlong ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 2 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wflatMetricInterProlong
                        w
                        w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
a260f6bf76e2442fbecf682d5995960c
  index2SparseAreaM ::
    Index.Index 0 1 0 0 1 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,1*U(U),A,A,1*U(U),1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 1 1 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseAreaM
                        ww2
                        ww5
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
05190ef6362ce4219476021bd7718e95
  index2SparseAreaMintCond ::
    Index.Index 1 1 0 0 2 1 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,1*U(U),1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 2 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseAreaMintCond
                        ww1
                        ww2
                        ww5
                        ww6 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
ad93f1c78161050a4adf81638e1e7d8a
  index2SparseBlock1Eta ::
    Index.Index 0 1 0 0 0 0 2 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),A,A,A,A,1*U(U),A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 2 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseBlock1Eta
                        ww2
                        ww7 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
20af5879f961087a6137f5a882b89ef2
  index2SparseCond1 ::
    Index.Index 1 1 0 0 2 1 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,1*U(U),1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 2 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseCond1
                        ww1
                        ww2
                        ww5
                        ww6 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
6ff348ac4f4970388dbfa53fc3838a78
  index2SparseCond1Zero ::
    Index.Index 0 1 0 0 1 0 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,1*U(U),A,A,1*U(U),A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 1 0 0 1 0 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseCond1Zero
                        ww2
                        ww5 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
88257fd6332c4e35a967b4778459972d
  index2SparseCond2 ::
    Index.Index 1 1 0 0 1 0 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,1*U(U),A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 1 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseCond2
                        ww1
                        ww2
                        ww5
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
a0f8139634ef31bc47f8dbb65c2cc3fe
  index2SparseCond3 ::
    Index.Index 1 1 0 0 1 0 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U),A,A,1*U(U),A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 1 0 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseCond3
                        ww1
                        ww2
                        ww5 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
2775b93c37d902faf40cd259a27c03d0
  index2SparseDens1 ::
    Index.Index 0 0 0 0 1 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,A,A,A,1*U(U),1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseDens1
                        ww5
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
3ebd2a938b9039cf88237e673e1cd35f
  index2SparseDens1Area ::
    Index.Index 1 1 0 0 0 0 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,A,A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseDens1Area
                        ww1
                        ww2
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
7ecf3d190082b004a01a635f1e9c7e41
  index2SparseDens2 ::
    Index.Index 0 0 0 0 2 2 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(A,A,A,A,1*U(U),1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 2 2 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseDens2
                        ww5
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
f6a76ffa3da475af28b7fd4d5246b9ec
  index2SparseDens2Area ::
    Index.Index 2 2 0 0 0 0 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,A,A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 2 2 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseDens2Area
                        ww1
                        ww2
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
7b93dd8fb8ee24afb659fab52a420a66
  index2SparseProjector ::
    Index.Index 1 0 0 0 1 0 0 6 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(1*U(U),A,A,A,1*U(U),A,A,U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 0 0 0 1 0 0 6) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseProjector
                        ww1
                        ww5
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
a88adcf5ec21035490922c8117563ab7
  index2SparseProjector1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
e9d551cfd54a7bb4468bbd3d272af9c2
  index2SparseProjector2 ::
    Index.Index 1 0 0 0 0 0 0 4 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(1*U(U),A,A,A,A,A,A,U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 0 0 0 0 0 0 4) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseProjector2
                        ww1
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
9e531cacb74faaa914a3d19d5bc5622e
  index2SparseintCond2_1 ::
    Index.Index 2 2 0 0 2 1 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),A,A,1*U(U),1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 2 2 0 0 2 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseintCond2_1
                        ww1
                        ww2
                        ww5
                        ww6 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
ba3452436838949473721436a0ddf16f
  index2SparseintCond2_1Symbol ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Index 2 3 0 0 2 1 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2,
     Strictness: <L,1*U><S,1*U(1*U(U),1*U(U),A,A,1*U(U),1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Index.Index 2 3 0 0 2 1 0 0) ->
                 case w1 of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseintCond2_1Symbol
                        w
                        ww1
                        ww2
                        ww5
                        ww6 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
24bd6cc6cee93c4c2a03b6805c7af45a
  index2SparseintCond2_1SymbolPure ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Index 2 3 0 0 1 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2,
     Strictness: <L,1*U><S,1*U(1*U(U),1*U(U),A,A,1*U(U),1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Index.Index 2 3 0 0 1 1 1 1) ->
                 case w1 of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseintCond2_1SymbolPure
                        w
                        ww1
                        ww2
                        ww5
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
62fbd4eb60e4fc52353084bab08db770
  index2SparseintCond2_1SymbolRed ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Index.Index 1 2 0 0 1 0 0 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2,
     Strictness: <L,1*U><S,1*U(1*U(U),1*U(U),A,A,1*U(U),A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Index.Index 1 2 0 0 1 0 0 0) ->
                 case w1 of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case Integrabillity.$windex2SparseintCond2_1SymbolRed
                        w
                        ww1
                        ww2
                        ww5 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
ae7c895fd60d898ccaa310ab8b70e1f6
  int1Test ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 0 1 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wint1Test w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
8090ba96bea45d6a0abe86d3aa167e56
  int1Test1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric3,
                  Integrabillity.areaMetricMetric4)) -}
74b7df1fe65ed4047522b482c22671eb
  int1Test2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wint1Test2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f14eff8162aa3577699a4de463aa3d68
  int1Test3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wint1Test3 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
2acd2433f3f7769332f6d2c23a6310c3
  int1Zero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 0 1 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wint1Zero w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
361b592c9bcbb34c04f9a3285f764945
  intCond1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond1 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
d2ccfd95adc04c251d4cc062b42e5fb8
  intCond1RelFac ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond1RelFac
                        w
                        w1
                        w2
                        w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
2d2f4d450f5b3f21dec79597a09ee930
  intCond1RelFac_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
8ebeea3088ca766eae9f977336805771
  intCond1Zero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,A><L,A><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond1Zero w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
d36aa25ac60d92948c11903fd5c1b6ab
  intCond1noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond1noFactor
                        w
                        w1
                        w2
                        w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f81656df064d3985846bae683b8ff6a4
  intCond2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 1 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wintCond2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
299d7ca68e645ec0703d81005b57aa28
  intCond2_1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond2_1 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
ba8f92bc7065002eefa88f6ada3645df
  intCond2_1Symbol ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond2_1Symbol w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
a830d6f05e09eac9f958fd297acf3a39
  intCond2_1SymbolPure ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond2_1SymbolPure
                        w
                        w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
cff8b24926808d25306c638aba8a3953
  intCond2_1SymbolRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond2_1SymbolRed
                        w
                        w1
                        w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
bb828e197ac983400f985a8f700933a3
  intCond2_1SymbolRedWrong ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCond2_1SymbolRedWrong
                        w
                        w1
                        w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f6713388252b32c3c2214e141db326ed
  intCond2_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
6bcbe22cbe49218f090f3486aea35fac
  intCond3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 1 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wintCond3 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
2411b60b7c86b3f3157513a376fe3cdb
  intCond4 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric4,
                  Integrabillity.densityEqnArea5)) -}
0f65d1f708cf2af28643fe8b91fd1af2
  intCond5 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.index2SparseProjector1,
                  Integrabillity.index2SparseProjector1)) -}
6e6282b12df773c750dc3ea8ca21d0c5
  intCond6 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.intCond2} False True} {__scc {main:Integrabillity.intCond2.int2} True True} case BasicTensors.delta_3 of ww { Tensor.Tensor ww1 ->
                                                                                                                         case Tensor.$wtensorProductWith
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                ww1
                                                                                                                                ww1 of ww4 { Unit# ww5 ->
                                                                                                                         case Tensor.$wtensorTranspose
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 2
                                                                                                                                @ 2
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                Integrabillity.intCond7
                                                                                                                                Integrabillity.areaMetricMetric2
                                                                                                                                ww5
                                                                                                                                  `cast`
                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                   ((,,,,,,,)
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                  <1>_N))
                                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                                      (Index.Ind
                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                  <1>_N))
                                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                                   <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                                                                                                                         case BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                                                                                                                         case Tensor.$wtensorProductWith
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ GHC.Real.Rational
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 2
                                                                                                                                @ 2
                                                                                                                                @ 1
                                                                                                                                @ 1
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                @ 0
                                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                ww3
                                                                                                                                ww8 of ww9 { Unit# ww10 ->
                                                                                                                         Tensor.Tensor
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 1)
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ (0
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ (2
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ (2
                                                                                                                              GHC.TypeNats.+ 0)
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           ww10 } } } } }) -}
50502e0eb0c4bc07789c81692ac3598b
  intCond7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
1bc77c04d0c279615b4c9e8f4ad6fcd5
  intCond8 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.densityEqnArea5,
                  Integrabillity.densityEqnArea5)) -}
23f7c559c8b7ca8de2d0746307527acb
  intCondComp ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCondComp w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
a80efd77dde0a0b534455a0e1ac1f1c3
  intCondCompNoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCondCompNoSym
                        w
                        w1
                        w2
                        w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
aab2fb8d415aef7df973bd63bc7aa802
  intCondCompZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCondCompZero w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
3cb230d56ef374cd9876ff115823a535
  intCondOrd2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCondOrd2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
93deecd626b6d5b92d8b1107c7d1c490
  intCondSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 1 0 0 2 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintCondSym w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
717a1898504cba99be9f55fc0c48d93c
  intRankDef1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 2 0 0 3 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintRankDef1 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
2e4dc5b787bacdcb77174e3979af45ad
  intRankDef2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintRankDef2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
c95cf5d25c8b2e3db37113a66438dabf
  intRankDef3 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 2 0 0 2 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintRankDef3 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
d572c2bfbc937f099892141d4d6406f7
  intRankDef4 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 2 2 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintRankDef4 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
c681307a7563c82587fff51a92d2e217
  intRankDef5 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 2 0 0 2 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wintRankDef5 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f44a91db0e801d5f086ecb59c014244f
  inter4Factor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case Integrabillity.$winter4Factor w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
8e89966c97c6a75e9cf822181e50f0a9
  inter4noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case Integrabillity.$winter4noFactor w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
e7ed41a61feba5bc27f10b6a062831be
  inter6Factor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 1 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$winter6Factor w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
c461fbc36b49560351e7d3ffa53167d9
  inter6noFactor ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 1 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$winter6noFactor
                        w
                        w1
                        w2
                        w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
74a123f8bd6f30c7165064b3f3e2aa18
  interProTest ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 1 0 0 2 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$winterProTest w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
618707d32ee9fc50a0849d9e87458cf8
  mkEqnSparseAreaM ::
    Tensor.Tensor 0 1 0 0 1 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 1 1 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseAreaM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseAreaM_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
96f6a24bd551beaa6bd3d0a940382d08
  mkEqnSparseAreaM_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 1 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
945ffe0cb280710effb12a86bea18dc7
  mkEqnSparseAreaMintCond ::
    Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseAreaMintCond} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                 Integrabillity.$sfromList
                                                                                   @ (GHC.Real.Ratio
                                                                                        GHC.Integer.Type.Integer)
                                                                                   (Integrabillity.mkEqnSparseAreaMintCond_go13
                                                                                      (GHC.Types.[]
                                                                                         @ ((GHC.Types.Int,
                                                                                             GHC.Types.Int),
                                                                                            GHC.Real.Rational))
                                                                                      map1) }) -}
1aae54d8b0ee8386f5ad1f1f5285d156
  mkEqnSparseAreaMintCond_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
ad3083e1b2f67902a938a3f7effcd5de
  mkEqnSparseBlock1Eta ::
    Tensor.Tensor 0 1 0 0 0 0 2 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 0 0 2 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseBlock1Eta} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseBlock1Eta_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
4548b31b784c572c2674d6380cf4a7fa
  mkEqnSparseBlock1Eta_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 2 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
68842a857cff1b3bd452723c4a9d7807
  mkEqnSparseCond1 ::
    Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseCond1} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseCond1_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
185a4f1a14c9a43c6ec099086f3a7211
  mkEqnSparseCond1Zero ::
    Tensor.Tensor 0 1 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseCond1Zero} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseCond1Zero_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
f095996098057a64d0bb6011badd8fa5
  mkEqnSparseCond1Zero_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
b03f3590bd9058ba043b97781830c702
  mkEqnSparseCond1_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
0880c01a944a49b7ead34ec071ce1c9e
  mkEqnSparseCond2 ::
    Tensor.Tensor 1 1 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 1 0 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseCond2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseCond2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
29fc5aadec9833c612ac9440bb8b4ad2
  mkEqnSparseCond2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
1c4e0d8e07c83b015632e09e09dac29c
  mkEqnSparseCond3 ::
    Tensor.Tensor 1 1 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseCond3} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseCond3_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
9e7d7b30ee5a66c0c6f9af8690904ae4
  mkEqnSparseCond3_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
fa41927d9d658a4e4e46f6b0247b0ecf
  mkEqnSparseDens1 ::
    Tensor.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseDens1} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseDens1_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
1a31da431f344c5630865423125fb5d0
  mkEqnSparseDens1Area ::
    Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseDens1Area} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseDens1Area_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
87759837d2236076c9919ad973e71fa3
  mkEqnSparseDens1Area_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
1513e0d14de3aa30650a8d97ce8636cf
  mkEqnSparseDens1_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
75423acaa7744443e94f18f17b6778ca
  mkEqnSparseDens2 ::
    Tensor.Tensor 0 0 0 0 2 2 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 0 0 0 2 2 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseDens2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Integrabillity.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Integrabillity.mkEqnSparseDens2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
f84ddd503f308f90a207b9a10509ebf9
  mkEqnSparseDens2Area ::
    Tensor.Tensor 2 2 0 0 0 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 0 0 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseDens2Area} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseDens2Area_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
97ebe4c2870dc09dc54dc1d74181a822
  mkEqnSparseDens2Area_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 0 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
ea6e3dde69766fe963abcd1d2a6a43a0
  mkEqnSparseDens2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
c51c89bc83e5967fb6fd3c8d35b6fb33
  mkEqnSparseProjector ::
    Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseProjector} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseProjector_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
ef11ca59464a66b910d66e16301f5612
  mkEqnSparseProjector2 ::
    Tensor.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseProjector2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                               Integrabillity.$sfromList
                                                                                 @ (GHC.Real.Ratio
                                                                                      GHC.Integer.Type.Integer)
                                                                                 (Integrabillity.mkEqnSparseProjector2_go13
                                                                                    (GHC.Types.[]
                                                                                       @ ((GHC.Types.Int,
                                                                                           GHC.Types.Int),
                                                                                          GHC.Real.Rational))
                                                                                    map1) }) -}
107e814662788e839f871fd3de79ac6f
  mkEqnSparseProjector2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
2d4e2a6af39fc59901ddbd6ea5e1a581
  mkEqnSparseProjector_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 0 0 0 1 0 0 6) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
466d6e7cf5f403adf521d110eda7e672
  mkEqnSparseflatMetricInter ::
    Tensor.Tensor 0 0 0 0 0 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 0 0 0 0 1 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseflatMetricInter} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                    Integrabillity.$sfromList
                                                                                      @ (GHC.Real.Ratio
                                                                                           GHC.Integer.Type.Integer)
                                                                                      (Integrabillity.mkEqnSparseflatMetricInter_go13
                                                                                         (GHC.Types.[]
                                                                                            @ ((GHC.Types.Int,
                                                                                                GHC.Types.Int),
                                                                                               GHC.Real.Rational))
                                                                                         map1) }) -}
6f141f277a3fe5e8f3044004f468f1da
  mkEqnSparseflatMetricInterProlong ::
    Tensor.Tensor 0 0 0 0 1 2 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 0 0 0 1 2 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseflatMetricInterProlong} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                           Integrabillity.$sfromList
                                                                                             @ (GHC.Real.Ratio
                                                                                                  GHC.Integer.Type.Integer)
                                                                                             (Integrabillity.mkEqnSparseflatMetricInterProlong_go13
                                                                                                (GHC.Types.[]
                                                                                                   @ ((GHC.Types.Int,
                                                                                                       GHC.Types.Int),
                                                                                                      GHC.Real.Rational))
                                                                                                map1) }) -}
7e07e3454e10e1213af6125bd3a0ac04
  mkEqnSparseflatMetricInterProlong_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 2 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
a0fe61a44573f45b974b6d28034bb011
  mkEqnSparseflatMetricInter_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
81127598158e6c92507ba7c63e3f74b0
  mkEqnSparseintCond2_1 ::
    Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCond2_1} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                               Integrabillity.$sfromList
                                                                                 @ (GHC.Real.Ratio
                                                                                      GHC.Integer.Type.Integer)
                                                                                 (Integrabillity.mkEqnSparseintCond2_1_go13
                                                                                    (GHC.Types.[]
                                                                                       @ ((GHC.Types.Int,
                                                                                           GHC.Types.Int),
                                                                                          GHC.Real.Rational))
                                                                                    map1) }) -}
bd1b50a2d06788c4eb6c8ce10bf57e90
  mkEqnSparseintCond2_1New ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Integrabillity.$wmkEqnSparseintCond2_1New w ww1 }) -}
ad079bdcf583e8caf6ca6a3b1b6831b1
  mkEqnSparseintCond2_1Symbol ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Tensor.Tensor 2 3 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 3 0 0 2 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Integrabillity.$wmkEqnSparseintCond2_1Symbol w ww1 }) -}
1364fe8145d994c40f6cd5f782b120e5
  mkEqnSparseintCond2_1SymbolPure ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Tensor.Tensor 2 3 0 0 1 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 3 0 0 1 1 1 1 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Integrabillity.$wmkEqnSparseintCond2_1SymbolPure w ww1 }) -}
0108623854456146fc3ddfc38c8d0c54
  mkEqnSparseintCond2_1SymbolRed ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (GHC.Types.Int, GHC.Types.Int) GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Integrabillity.$wmkEqnSparseintCond2_1SymbolRed w ww1 }) -}
b3c4940ac2c545e12b1856d8710361ec
  mkEqnSparseintCond2_1SymbolRedFull ::
    Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCond2_1SymbolRedFull} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                            Integrabillity.$sfromList
                                                                                              @ (GHC.Real.Ratio
                                                                                                   GHC.Integer.Type.Integer)
                                                                                              (Integrabillity.mkEqnSparseintCond2_1SymbolRedFull_go13
                                                                                                 (GHC.Types.[]
                                                                                                    @ ((GHC.Types.Int,
                                                                                                        GHC.Types.Int),
                                                                                                       GHC.Real.Rational))
                                                                                                 map1) }) -}
098a9e7d959e20459989a7b0427dd631
  mkEqnSparseintCond2_1SymbolRedFull_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
11a2a40173abac4636e97b8bd74701a6
  mkEqnSparseintCond2_1_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
08783490eba5b120d398e3766e4befe3
  mkEqnSparseintCondComp ::
    Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCondComp} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                Integrabillity.$sfromList
                                                                                  @ (GHC.Real.Ratio
                                                                                       GHC.Integer.Type.Integer)
                                                                                  (Integrabillity.mkEqnSparseintCondComp_go13
                                                                                     (GHC.Types.[]
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational))
                                                                                     map1) }) -}
c1943bd2f1104c3f6048815dff47b723
  mkEqnSparseintCondCompNew ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Integrabillity.$wmkEqnSparseintCondCompNew w ww1 }) -}
92553f6a9d236af28a8410f9749f1427
  mkEqnSparseintCondCompNoSym ::
    Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCondCompNoSym} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                     Integrabillity.$sfromList
                                                                                       @ (GHC.Real.Ratio
                                                                                            GHC.Integer.Type.Integer)
                                                                                       (Integrabillity.mkEqnSparseintCondCompNoSym_go13
                                                                                          (GHC.Types.[]
                                                                                             @ ((GHC.Types.Int,
                                                                                                 GHC.Types.Int),
                                                                                                GHC.Real.Rational))
                                                                                          map1) }) -}
bf33215623fa21ec703ab31710579320
  mkEqnSparseintCondCompNoSym_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
f10a4f152c0ba94ffa990d5116e9e9da
  mkEqnSparseintCondComp_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
4f3f4785d151054f477616c010985c54
  mkEqnSparseintCondOrd2 ::
    Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCondOrd2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                Integrabillity.$sfromList
                                                                                  @ (GHC.Real.Ratio
                                                                                       GHC.Integer.Type.Integer)
                                                                                  (Integrabillity.mkEqnSparseintCondOrd2_go13
                                                                                     (GHC.Types.[]
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational))
                                                                                     map1) }) -}
dca62e7626428776afdaf4722d3b34ee
  mkEqnSparseintCondOrd2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
7ba846976362bd90956d83d0c9019343
  mkEqnSparseintCondSym ::
    Tensor.Tensor 0 1 0 0 2 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 2 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintCondSym} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                               Integrabillity.$sfromList
                                                                                 @ (GHC.Real.Ratio
                                                                                      GHC.Integer.Type.Integer)
                                                                                 (Integrabillity.mkEqnSparseintCondSym_go13
                                                                                    (GHC.Types.[]
                                                                                       @ ((GHC.Types.Int,
                                                                                           GHC.Types.Int),
                                                                                          GHC.Real.Rational))
                                                                                    map1) }) -}
f0389416e323919271a2968d8a0445aa
  mkEqnSparseintCondSym_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 2 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
9a3904ff53564fb736d8be7697329fe6
  mkEqnSparseintRankDef1 ::
    Tensor.Tensor 0 2 0 0 3 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 2 0 0 3 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintRankDef1} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                Integrabillity.$sfromList
                                                                                  @ (GHC.Real.Ratio
                                                                                       GHC.Integer.Type.Integer)
                                                                                  (Integrabillity.mkEqnSparseintRankDef1_go13
                                                                                     (GHC.Types.[]
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational))
                                                                                     map1) }) -}
7fda0885298cb65e1595e0987142cdad
  mkEqnSparseintRankDef1_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 2 0 0 3 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
1036671cf025fc8587accf1d4bc1bb39
  mkEqnSparseintRankDef3 ::
    Tensor.Tensor 0 2 0 0 2 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 2 0 0 2 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintRankDef3} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                Integrabillity.$sfromList
                                                                                  @ (GHC.Real.Ratio
                                                                                       GHC.Integer.Type.Integer)
                                                                                  (Integrabillity.mkEqnSparseintRankDef3_go13
                                                                                     (GHC.Types.[]
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational))
                                                                                     map1) }) -}
1c93ac0ab842d0a975aa68e16bfe4f5e
  mkEqnSparseintRankDef3_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 2 0 0 2 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
344cb2c3f462821e92b9cf092280c3e2
  mkEqnSparseintRankDef4 ::
    Tensor.Tensor 0 0 0 0 2 2 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 0 0 0 2 2 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseintRankDef4} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                Integrabillity.$sfromList
                                                                                  @ (GHC.Real.Ratio
                                                                                       GHC.Integer.Type.Integer)
                                                                                  (Integrabillity.mkEqnSparseintRankDef4_go13
                                                                                     (GHC.Types.[]
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational))
                                                                                     map1) }) -}
9f0e3a58afea30edf82f75ffef9ca94a
  mkEqnSparseintRankDef4_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
5acb86dd55d36458d5f11c725466eba0
  mkEqnSparseinter6Mat ::
    Tensor.Tensor 1 1 0 0 1 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 1 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseinter6Mat} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                              Integrabillity.$sfromList
                                                                                @ (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                                (Integrabillity.mkEqnSparseinter6Mat_go13
                                                                                   (GHC.Types.[]
                                                                                      @ ((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational))
                                                                                   map1) }) -}
94b48736cebe324c7dd1f12122c5c856
  mkEqnSparseinter6Mat_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
4563834b0f47bd860afb36e534b18530
  mkEqnSparseinterMat ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseinterMat} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                             Integrabillity.$sfromList
                                                                               @ (GHC.Real.Ratio
                                                                                    GHC.Integer.Type.Integer)
                                                                               (Integrabillity.mkEqnSparseinterMat_go13
                                                                                  (GHC.Types.[]
                                                                                     @ ((GHC.Types.Int,
                                                                                         GHC.Types.Int),
                                                                                        GHC.Real.Rational))
                                                                                  map1) }) -}
a8ec39a406a9f8f0e08d1aa6eb220534
  mkEqnSparseinterMat_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
74f6c5a890ceb0cb8da28f7cb527239e
  mkEqnSparseprolongation1AI_ACK ::
    Tensor.Tensor 1 2 0 0 1 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 1 1 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseprolongation1AI_ACK} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                        Integrabillity.$sfromList
                                                                                          @ (GHC.Real.Ratio
                                                                                               GHC.Integer.Type.Integer)
                                                                                          (Integrabillity.mkEqnSparseprolongation1AI_ACK_go13
                                                                                             (GHC.Types.[]
                                                                                                @ ((GHC.Types.Int,
                                                                                                    GHC.Types.Int),
                                                                                                   GHC.Real.Rational))
                                                                                             map1) }) -}
b3599c6442e2167f3a30d75ddf6aaed7
  mkEqnSparseprolongation1AI_ACK_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
6edce5b40d5214d202563a444d51e273
  mkEqnSparseprolongation1AI_AI ::
    Tensor.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseprolongation1AI_AI} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                       Integrabillity.$sfromList
                                                                                         @ (GHC.Real.Ratio
                                                                                              GHC.Integer.Type.Integer)
                                                                                         (Integrabillity.mkEqnSparseprolongation1AI_AI_go13
                                                                                            (GHC.Types.[]
                                                                                               @ ((GHC.Types.Int,
                                                                                                   GHC.Types.Int),
                                                                                                  GHC.Real.Rational))
                                                                                            map1) }) -}
d3515d177405c27cb3d72d699b8345bb
  mkEqnSparseprolongation1AI_AI_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
b72966e39c61093d76e2b1477404b6b5
  mkEqnSparseprolongation2AaBb ::
    Tensor.Tensor 2 2 0 0 0 0 3 3 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 0 0 3 3 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseprolongation2AaBb} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                      Integrabillity.$sfromList
                                                                                        @ (GHC.Real.Ratio
                                                                                             GHC.Integer.Type.Integer)
                                                                                        (Integrabillity.mkEqnSparseprolongation2AaBb_go13
                                                                                           (GHC.Types.[]
                                                                                              @ ((GHC.Types.Int,
                                                                                                  GHC.Types.Int),
                                                                                                 GHC.Real.Rational))
                                                                                           map1) }) -}
0b4a6310ddbb660adb0b7b4903db757e
  mkEqnSparseprolongation2AaBbC ::
    Tensor.Tensor 2 3 0 0 0 0 3 3 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 0 0 3 3 GHC.Real.Rational) ->
                 {__scc {main:Integrabillity.mkEqnSparseprolongation2AaBbC} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                       Integrabillity.$sfromList
                                                                                         @ (GHC.Real.Ratio
                                                                                              GHC.Integer.Type.Integer)
                                                                                         (Integrabillity.mkEqnSparseprolongation2AaBbC_go13
                                                                                            (GHC.Types.[]
                                                                                               @ ((GHC.Types.Int,
                                                                                                   GHC.Types.Int),
                                                                                                  GHC.Real.Rational))
                                                                                            map1) }) -}
ef69a0c1fd0e6e4bed6dc1540a86b4f1
  mkEqnSparseprolongation2AaBbC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 3 3) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
323530d04de1c28f9c78e87bc7412923
  mkEqnSparseprolongation2AaBb_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 0 0 3 3) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
75ae45ebad8ade4ec16dd2066bca2a1c
  projectorMatrix ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Integrabillity.projectorMatrix1
                  `cast`
                (<Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20>_R
                 ->_R <Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9>_R
                 ->_R (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<4>_N, <2>_N))
                         <GHC.Real.Rational>_R)_R) -}
2965c79fc3b76501fba55e8e5ab2b0fa
  projectorMatrix1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (4 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wprojectorMatrix w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (4 GHC.TypeNats.+ 2)
                   @ GHC.Real.Rational
                   ww1 }) -}
a9339ac0ee53ec8848eb2a3ad8b35e68
  projectorMatrix2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Tensor.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, True)
                (\ (map1Area :: Data.Map.Internal.Map
                                  (Index.Linds_3 4) Index.Uind_20) ->
                 {__scc {main:Integrabillity.projectorMatrix2} True True} BasicTensors.interI_Area
                                                                            map1Area) -}
0c4f48d96b23ba0722c92a55bd32ce6a
  projectorMatrixMixed1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Integrabillity.projectorMatrixMixed4
                  `cast`
                (<Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20>_R
                 ->_R <Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9>_R
                 ->_R (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<4>_N, <2>_N))
                         <GHC.Real.Rational>_R)_R) -}
8cbe2b714375029a414d3d3badb5b08b
  projectorMatrixMixed2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Integrabillity.projectorMatrixMixed5
                  `cast`
                (<Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20>_R
                 ->_R <Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9>_R
                 ->_R (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<4>_N, <2>_N))
                         <GHC.Real.Rational>_R)_R) -}
657425aa655b2abceed3a34cc2b2641e
  projectorMatrixMixed4 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (4 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wprojectorMatrixMixed1
                        w
                        w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (4 GHC.TypeNats.+ 2)
                   @ GHC.Real.Rational
                   ww1 }) -}
d92c6a6ca34c82bcbbfac130e227f65c
  projectorMatrixMixed5 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (4 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wprojectorMatrixMixed2
                        w
                        w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (4 GHC.TypeNats.+ 2)
                   @ GHC.Real.Rational
                   ww1 }) -}
15e30b36c6afc0048df28341dc962f47
  projectorMatrixSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor 1 0 0 0 1 0 0 6 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Integrabillity.projectorMatrixSym1
                  `cast`
                (<Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20>_R
                 ->_R <Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9>_R
                 ->_R (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<4>_N, <2>_N))
                         <GHC.Real.Rational>_R)_R) -}
3b197f08cedd83b6db80e5fe521b1a13
  projectorMatrixSym1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (4 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case Integrabillity.$wprojectorMatrixSym w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (4 GHC.TypeNats.+ 2)
                   @ GHC.Real.Rational
                   ww1 }) -}
e3283a1dd417167b7027cb17fdc05583
  prolongation1AI_ACK ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>, Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 Integrabillity.$wprolongation1AI_ACK w w1) -}
27e17f3a1c2b66c36cc0fec128dd1ca7
  prolongation1AI_ACK1 ::
    Tensor.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_ACK} False True} {__scc {main:Integrabillity.prolongation1AI_ACK.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                  GHC.Real.$fOrdRatio_$s$fEqRatio) -}
3cf56bc19a629b9307793ca6c34e3763
  prolongation1AI_ACK2 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 1 1 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_ACK} False True} {__scc {main:Integrabillity.prolongation1AI_ACK.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                  GHC.Real.$fOrdRatio_$s$fEqRatio) -}
2dd36fb44ac6c035b37ef0d10c2abd2f
  prolongation1AI_ACK3 ::
    Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_ACK} False True} {__scc {main:Integrabillity.prolongation1AI_ACK.flatInter} False True} Tensor.tensorProductNumeric
                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                       @ 1
                                                                                                                                                       @ 1
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 1
                                                                                                                                                       @ 1
                                                                                                                                                       @ 0
                                                                                                                                                       @ 1
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       @ 0
                                                                                                                                                       GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                       GHC.Real.$fOrdRatio_$s$fEqRatio) -}
5fe2cb3f80ead70647d63b567714df67
  prolongation1AI_AI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Integrabillity.prolongation1AI_AI} True True} {__scc {main:Integrabillity.prolongation1AI_AI.int3} True True} BasicTensors.interEqn1_3
                                                                                                                                                   w
                                                                                                                                                   w1
                                                                                                                                                   w2
                                                                                                                                                   w3 of ww { Tensor.Tensor ww1 ->
                 case ({__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.tens} True False} Integrabillity.prolongation1AI_AI1)
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 {__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ 0
                                                                                                                                                                                           @ 0
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ 1
                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                           ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                         @ (Index.Index
                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                              0
                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                              1
                                                                                                                                                                                                                                              1)
                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                         (Tensor.aSymTensor3
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1)
                                                                                                                                                                                                                                         Integrabillity.areaMetricMetric1intCond_lvl19
                                                                                                                                                                                                                                         ww3
                                                                                                                                                                                                                                         ww1) } }) -}
7fcca72a4b8c674e58b1da849a11266e
  prolongation1AI_AI1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.block1} True True} Integrabillity.prolongation1AI_AI4
                                                                                                                                                 BasicTensors.delta_20
                                                                                                                                                 Integrabillity.prolongation1AI_AI2
                                                                                                                                                   `cast`
                                                                                                                                                 (Tensor.Tensor
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <GHC.Real.Rational>_R)_R) -}
3ea713e513b6f9c15578cd0c805439bc
  prolongation1AI_AI2 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.block1} False True} Integrabillity.prolongation1AI_AI3
                                                                                                                                                  BasicTensors.delta_9
                                                                                                                                                  BasicTensors.delta_3) -}
3233bc895c7b076641bb9186a470aaa7
  prolongation1AI_AI3 ::
    Tensor.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                  GHC.Real.$fOrdRatio_$s$fEqRatio) -}
24650b0393d4c5377e7f2237aaa279dc
  prolongation1AI_AI4 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation1AI_AI} False True} {__scc {main:Integrabillity.prolongation1AI_AI.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  @ 1
                                                                                                                                                  GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                  GHC.Real.$fOrdRatio_$s$fEqRatio) -}
31c0b6a71ac503ec7ea4831135352865
  prolongation2AaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 0 0 3 3 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wprolongation2AaBb w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 3
                   @ 3
                   @ GHC.Real.Rational
                   ww1 }) -}
a73c2131b243a9d21cd0467a240804a0
  prolongation2AaBb1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Integrabillity.areaMetricMetric3,
                  Integrabillity.densityEqnArea5)) -}
c15d8ed6d1cefb381562c1c222942441
  prolongation2AaBb10 ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
482df52bd0257cbe4582e96a8d730fa9
  prolongation2AaBb11 ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 0 0 2 2 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 2)
         (1 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 2
                                                                                                                                                @ 2
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
628f9cf7948826ab3ed70dc9f6fe01f6
  prolongation2AaBb12 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 0 0 3 3 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 3)
         (0 GHC.TypeNats.+ 3)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 3
                                                                                                                                                @ 3
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
29e05d573f4c56bde3466572022481b3
  prolongation2AaBb13 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 1 1 0 0 0 0 3 3 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 3)
         (0 GHC.TypeNats.+ 3)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 3
                                                                                                                                                @ 3
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
88315d83cf68a1bb62bcbd6e5eb8bf1e
  prolongation2AaBb2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
cc2ed3d0c9670048641f97c5c53ceb7d
  prolongation2AaBb3 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block2} False True} Integrabillity.prolongation2AaBb4
                                                                                                                                                BasicTensors.delta_20
                                                                                                                                                BasicTensors.delta_3) -}
a21b919072fe890e9751967fca2d2d75
  prolongation2AaBb4 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block2} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
eb6157e054e7b24c8883249d78049e96
  prolongation2AaBb5 ::
    Tensor.Tensor 1 1 0 0 0 0 2 2 GHC.Real.Rational
    -> Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 1)
         (2 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block2} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 2
                                                                                                                                                @ 2
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
379f5a8351fc4defe6884be752a93ca9
  prolongation2AaBb6 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 3)
      (0 GHC.TypeNats.+ 3)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} True True} Integrabillity.prolongation2AaBb13
                                                                                                                                               BasicTensors.delta_20
                                                                                                                                               Integrabillity.prolongation2AaBb7
                                                                                                                                                 `cast`
                                                                                                                                               (Tensor.Tensor
                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                                  (Add0L (<3>_N))
                                                                                                                                                  (Add0L (<3>_N))
                                                                                                                                                  <GHC.Real.Rational>_R)_R) -}
7c9fe16918c9d3816c167438f0f7a28c
  prolongation2AaBb7 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 3)
      (0 GHC.TypeNats.+ 3)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Integrabillity.prolongation2AaBb12
                                                                                                                                                BasicTensors.delta_20
                                                                                                                                                Integrabillity.prolongation2AaBb8
                                                                                                                                                  `cast`
                                                                                                                                                (Tensor.Tensor
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                            <2>_N))
                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                            <2>_N))
                                                                                                                                                   <GHC.Real.Rational>_R)_R) -}
d43c439c3d2a33ffa2ce77f9fc9e05cc
  prolongation2AaBb8 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 2)
      (1 GHC.TypeNats.+ 2)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Integrabillity.prolongation2AaBb11
                                                                                                                                                BasicTensors.delta_3
                                                                                                                                                Integrabillity.prolongation2AaBb9
                                                                                                                                                  `cast`
                                                                                                                                                (Tensor.Tensor
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                            <1>_N))
                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                            <1>_N))
                                                                                                                                                   <GHC.Real.Rational>_R)_R) -}
0e9332b4d9f0ab126773ff55f7be59d1
  prolongation2AaBb9 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBb} False True} {__scc {main:Integrabillity.prolongation2AaBb.block1} False True} Integrabillity.prolongation2AaBb10
                                                                                                                                                BasicTensors.delta_3
                                                                                                                                                BasicTensors.delta_3) -}
55abd40e4c32123ff7c7bca239b6a697
  prolongation2AaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 3 3 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Integrabillity.$wprolongation2AaBbC w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 3
                   @ 3
                   @ GHC.Real.Rational
                   ww1 }) -}
cca29c923d45727c74520de399ccaa1e
  prolongation2AaBbC1 ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
8e446fce94cb2fd439281c553ab7f4cd
  prolongation2AaBbC2 ::
    Tensor.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 2)
         (1 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 2
                                                                                                                                                @ 2
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
c4a0f69315379946fa357a0314e6b7f7
  prolongation2AaBbC3 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 3 3 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 3)
         (0 GHC.TypeNats.+ 3)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 3
                                                                                                                                                @ 3
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
c9b02afc45e29c63fb3905fd09c627f5
  prolongation2AaBbC4 ::
    Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor 1 2 0 0 0 0 3 3 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 2)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 3)
         (0 GHC.TypeNats.+ 3)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.tens} False True} Tensor.tensorProductNumeric
                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                @ 1
                                                                                                                                                @ 1
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 1
                                                                                                                                                @ 2
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 0
                                                                                                                                                @ 3
                                                                                                                                                @ 3
                                                                                                                                                GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                GHC.Real.$fOrdRatio_$s$fEqRatio) -}
2314fc1c1597667e2d7d1616575479ef
  prolongation2AaBbC5 ::
    Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Integrabillity.prolongation2AaBbC} False True} {__scc {main:Integrabillity.prolongation2AaBbC.flatInter} False True} Tensor.tensorProductNumeric
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 1
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                                                     GHC.Real.$fOrdRatio_$s$fEqRatio) -}
"SPEC/Integrabillity fromList @ (Int, Int) _" [orphan] forall @ a
                                                              ($dOrd :: GHC.Classes.Ord
                                                                          (GHC.Types.Int,
                                                                           GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Integrabillity.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

