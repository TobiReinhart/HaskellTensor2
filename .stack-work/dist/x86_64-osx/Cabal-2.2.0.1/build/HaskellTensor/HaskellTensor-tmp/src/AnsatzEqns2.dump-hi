
==================== FINAL INTERFACE ====================
2019-01-14 15:48:24.29945 UTC

interface main:AnsatzEqns2 [hpc] 8043
  interface hash: 4f04121968e1e14cbcc43de1839b0f37
  ABI hash: 9f97219dbed17ad16711488d0e78bb4c
  export-list hash: 4dc5760416efc558b113e18d014c3a72
  orphan hash: 4256a80d04b95fee6496f8d206ff03c3
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  AnsatzEqns2.ansatzAB
  AnsatzEqns2.ansatzABb
  AnsatzEqns2.ansatzAIB
  AnsatzEqns2.ansatzAIBJ
  AnsatzEqns2.ansatzAaBI
  AnsatzEqns2.ansatzAaBb
  AnsatzEqns2.intCond2NoSym
  AnsatzEqns2.intCondfirstOrder
  AnsatzEqns2.mkEqnSparseAnsatzAB
  AnsatzEqns2.mkEqnSparseAnsatzABb
  AnsatzEqns2.mkEqnSparseAnsatzAIB
  AnsatzEqns2.mkEqnSparseAnsatzAIBJ
  AnsatzEqns2.mkEqnSparseAnsatzAaBI
  AnsatzEqns2.mkEqnSparseAnsatzAaBb
  AnsatzEqns2.mkEqnSparseRemoveAIB
  AnsatzEqns2.mkEqnSparsefirstOrder
  AnsatzEqns2.mkEqnSparseintCond2NoSym
  AnsatzEqns2.removeAIB
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors 0df78451cdb64d61e6036444805588ff
  exports: e3eb46cbf5e0ff0a91078b17412e1317
  aSymI_2 81372182b9e998230d0d2faab3b7e62a
  delta_20 b77804eb482505214a8985e4180aefe4
  delta_3 746fafc3bda1c359b0397abeed82111a
  delta_9 d22b99ceb5d7fccaba80523aeb233ebd
  flatArea dafe102fa9e82f4531fea855a20ac749
  interArea 1e922b70f8b8767391aca79280ddd758
  interEqn1_2 8fa706813a6351d2c1ec951e136fd4a0
  interEqn1_3 232aed46d0b03c3f8506b4c8d8b26a53
  interI_2 c8752b46a2fc2f04c0a3069d6d1c6ce8
  interMetric b140de30bf770a3116b03bc7af40f1a6
  invEta 29cbd6497485ab1e1bb9ae455a681bd3
import  -/  EquivarianceEqns 944da51003f384ade1029a7d52cf5384
  exports: 84062590276b987b26bd45d594b7213f
import  -/  Index e389b597f52dbfefe3745bcba1949c62
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index a01a9190ec51cc115d3358a99c063fe2
  Lind_20 9976c80afe3129a8da6eeef509cd939d
  Lind_9 199ec47d455794929a9c39c4489984a9
  Linds_3 b7f25c6c6ec24e0defe93a5bf531b4b2
  Uind_20 b5e99ed389304ee9c82083925596c8cb
  Uind_9 8fce60bf392f1d712124e42ff35dcfc1
  Uinds_3 311b0a992b6841d7d23b3d8756aed0ef
  getValInd b1c032a982e0f73608bad6b7953c3ea2
import  -/  Ivar 52a8dc212ab2f8456a526e9d381a1784
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde 6cb99ff48b3771dcca3d3397050c4c62
  exports: cfda6ba989dea29b657cfa7f1b7972bc
import  -/  Tensor 70d6952dea62d47ab6f2d598c8b571ec
  exports: cc1f578937ee3122bbbb4f8cf3eb8582
  Tensor 9baff54d5c983efc9b4dd7dd14f4d579
  Tensor 6b5aa7fabc304949e9aed286ed95183b
  tensorAdd 3f2d80707436db7c861987a2763b8ae6
  tensorContractWith_20 0d2a4af00084d1d61ca64810a39ab9ae
  tensorContractWith_3 d4730f4187bd6ebe8b3dd0280edaf514
  tensorProductWith 1110039333b95adaab3b9466e9a23aae
  tensorSub 631c1c57b5264eed0ff22494ec87ff89
  tensorTranspose 317a8f2f993e8cc2a39a39388f3629fe
bcf45780236983f35bb7f600e5ef36f7
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
ee2248d8e8dd9de75316f397e4cc267e
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> AnsatzEqns2.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> AnsatzEqns2.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> AnsatzEqns2.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> AnsatzEqns2.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
71a388d7b411219cd851a8d887c5b18d
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
619b3c4d831b7fe390b7e5daf83d0061
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
373bd1746755f0f5a54dda7831e3cd92
  $stensorContractWith_12 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_13 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
7e118dc2c879dd6016e52309a71c3e44
  $stensorContractWith_13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
e6a6f45cdc77301bd05c4a6690a8160a
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
58a251bbf70eba0b719281d6d905c69d
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
396c6e1a4a54ed66bcdc86ebb9ed303f
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
0ba4c42a434d366410540b2e8de06fc3
  $stensorContractWith_6 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8b7bc482700ab6689f78beb8cadb5f64
  $stensorContractWith_7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
5579a2eeb6ae586128f326b310e6f6d7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AnsatzEqns2.$trModule3
                   AnsatzEqns2.$trModule1) -}
43817172e3a4dea61c8c44882cd3c786
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS AnsatzEqns2.$trModule2) -}
621cfae3d9a8bcf76f61ca636261902d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AnsatzEqns2"#) -}
61c397503880f4c2086924f913dd0e47
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS AnsatzEqns2.$trModule4) -}
b98c1ae838a14aa63083a999e9f54140
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0adad4acaa0bd3d25ff6fc2330b5dfd8
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
51df3aec2ccdbffec9a9bc3c81b076f5
  $wansatzAB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} True True} {__scc {main:AnsatzEqns2.ansatzAB.prod} True False} {__scc {main:AnsatzEqns2.ansatzAB.tens} True False} {__scc {main:AnsatzEqns2.ansatzAB.totalBlock1} True False} {__scc {main:AnsatzEqns2.ansatzAB.block1} True False} {__scc {main:AnsatzEqns2.ansatzAB.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                                                                     w
                                                                                                                                                                                                                                                                                                                                                     w1 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_20 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.block1} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.block2} True False} {__scc {main:AnsatzEqns2.ansatzAB.block2} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                   @ 2
                                                                                                                                                                                   @ 2
                                                                                                                                                                                   @ 0
                                                                                                                                                                                   @ 0
                                                                                                                                                                                   @ 0
                                                                                                                                                                                   @ 0
                                                                                                                                                                                   @ 1
                                                                                                                                                                                   @ 1
                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                   AnsatzEqns2.ansatzAB4
                                                                                                                                                                                   AnsatzEqns2.ansatzAB6
                                                                                                                                                                                   ww5
                                                                                                                                                                                     `cast`
                                                                                                                                                                                   (Data.Map.Internal.Map
                                                                                                                                                                                      ((,,,,,,,)
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                                                                     <1>_N))
                                                                                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (AddDef (<1>_N,
                                                                                                                                                                                                     <1>_N))
                                                                                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0L (<0>_N))
                                                                                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0R (<1>_N))
                                                                                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                                                                                         (Index.Ind
                                                                                                                                                                                            (Add0R (<1>_N))
                                                                                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                      <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                        @ (Index.Index
                                                                                                                                                                                                                             2
                                                                                                                                                                                                                             2
                                                                                                                                                                                                                             0
                                                                                                                                                                                                                             0
                                                                                                                                                                                                                             0
                                                                                                                                                                                                                             0
                                                                                                                                                                                                                             1
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                                        (Tensor.aSymTensor3
                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                           @ 1)
                                                                                                                                                                                                                        AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                        ww5
                                                                                                                                                                                                                          `cast`
                                                                                                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                                                                                                           ((,,,,,,,)
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                                                 <Index.Uind_20>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                                                 <Index.Lind_20>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                                                 <Index.Uind_19>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                                                 <Index.Lind_19>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                                                 <Index.Uind_9>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                                                 <Index.Lind_9>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                                                 <Index.Uind_3>_N)_N
                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                                                 <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                           <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                        ww9 of dt1 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.totalBlockTrans} True False} {__scc {main:AnsatzEqns2.ansatzAB.totalBlockTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                     AnsatzEqns2.ansatzAB5
                                                                                                                                                                                                     AnsatzEqns2.ansatzAB6
                                                                                                                                                                                                     dt1 of ww10 { Unit# ww11 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.tens} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                      2
                                                                                                                                                                                                                      2
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      1
                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                    @ 1)
                                                                                                                                                                                                                 AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                 dt1
                                                                                                                                                                                                                 ww11 of dt2 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.totalBlock2} True False} BasicTensors.invEta of ww12 { Tensor.Tensor ww13 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                             w2 of ww14 { Tensor.Tensor ww15 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww13
                                                                                                                                  ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  AnsatzEqns2.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  AnsatzEqns2.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  AnsatzEqns2.ansatzAB3
                                                                                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                  ww17
                                                                                                                                    `cast`
                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                     ((,,,,,,,)
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                     <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} {__scc {main:AnsatzEqns2.ansatzAB.prod} False True} Tensor.$wtensorProductWith
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                           dt2
                                                                                                                           ww19 of ww20 { Unit# ww21 ->
                 case {__scc {main:AnsatzEqns2.ansatzAB} False True} Tensor.$wtensorContractWith_3
                                                                       @ 1
                                                                       @ 1
                                                                       @ GHC.Real.Rational
                                                                       @ 2
                                                                       @ 2
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 0
                                                                       AnsatzEqns2.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       AnsatzEqns2.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       AnsatzEqns2.ansatzAB6
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww21
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Uind_3>_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Lind_3>_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 {__scc {main:AnsatzEqns2.ansatzAB} False True} Tensor.$wtensorContractWith_3
                                                                  @ 0
                                                                  @ 0
                                                                  @ GHC.Real.Rational
                                                                  @ 2
                                                                  @ 2
                                                                  @ 0
                                                                  @ 0
                                                                  @ 1
                                                                  @ 0
                                                                  AnsatzEqns2.$stensorContractWith_3
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  AnsatzEqns2.$stensorContractWith_3
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  AnsatzEqns2.ansatzAB1
                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                  ww23
                                                                    `cast`
                                                                  (Data.Map.Internal.Map
                                                                     ((,,,,,,,)
                                                                        <Index.Ind
                                                                           2 Index.Uind_20>_N
                                                                        <Index.Ind
                                                                           2 Index.Lind_20>_N
                                                                        <Index.Ind
                                                                           0 Index.Uind_19>_N
                                                                        <Index.Ind
                                                                           0 Index.Lind_19>_N
                                                                        <Index.Ind 1 Index.Uind_9>_N
                                                                        <Index.Ind 0 Index.Lind_9>_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Uind_3>_N)_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Lind_3>_N)_N)_N
                                                                     <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
ceb4c2c89de1bb389fb82a7af52927d5
  $wansatzABb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} True True} {__scc {main:AnsatzEqns2.ansatzABb.prod} True False} {__scc {main:AnsatzEqns2.ansatzABb.totalBlock1} True False} {__scc {main:AnsatzEqns2.ansatzABb.block1} True False} {__scc {main:AnsatzEqns2.ansatzABb.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                      w
                                                                                                                                                                                                                                                                                                      w1 of ww { Tensor.Tensor ww1 ->
                 case AnsatzEqns2.ansatzABb3
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.block1} False True} Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww1
                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.int2} True True} BasicTensors.interEqn1_2
                                                                                                                            w
                                                                                                                            w1 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.block2} False True} Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 2
                                                                                                                               @ 2
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww8
                                                                                                                               ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                          @ (Index.Index
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                                                                          (Tensor.aSymTensor3
                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                             @ 2)
                                                                                                                                                                                                                          AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                          ww5
                                                                                                                                                                                                                            `cast`
                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                             <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                          ww12
                                                                                                                                                                                                                            `cast`
                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<2>_N))
                                                                                                                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<2>_N))
                                                                                                                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                             <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.totalBlock2} True False} BasicTensors.invEta of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                               w2 of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 1
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                    ww14
                                                                                                                                    ww16 of ww17 { Unit# ww18 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                    @ 1
                                                                                                                                    @ 1
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 1
                                                                                                                                    @ 0
                                                                                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                    AnsatzEqns2.ansatzAB3
                                                                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                    ww18
                                                                                                                                      `cast`
                                                                                                                                    (Data.Map.Internal.Map
                                                                                                                                       ((,,,,,,,)
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Uind_20>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_20>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Uind_19>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_19>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<1>_N))
                                                                                                                                             <Index.Uind_9>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_9>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                           <1>_N)))
                                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                           <1>_N)))
                                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                                       <GHC.Real.Rational>_R)_R of ww19 { Unit# ww20 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.prod} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 2
                                                                                                                             @ 2
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 2
                                                                                                                             @ 2
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             dt1
                                                                                                                             ww20 of ww21 { Unit# ww22 ->
                 case {__scc {main:AnsatzEqns2.ansatzABb} False True} Tensor.$wtensorContractWith_3
                                                                        @ 2
                                                                        @ 2
                                                                        @ GHC.Real.Rational
                                                                        @ 2
                                                                        @ 2
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 0
                                                                        AnsatzEqns2.$stensorContractWith_6
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                        AnsatzEqns2.$stensorContractWith_6
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                        AnsatzEqns2.ansatzABb2
                                                                        GHC.Real.$fEnumRatio_$s$c+
                                                                        ww22
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N))
                                                                                 <Index.Uind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N))
                                                                                 <Index.Lind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Uind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Lind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<1>_N))
                                                                                 <Index.Uind_9>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Lind_9>_N)_N
                                                                              <Index.Ind
                                                                                 (2
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Uind_3>_N
                                                                              <Index.Ind
                                                                                 (2
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Lind_3>_N)_N
                                                                           <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 {__scc {main:AnsatzEqns2.ansatzABb} False True} Tensor.$wtensorContractWith_3
                                                                   @ 1
                                                                   @ 1
                                                                   @ GHC.Real.Rational
                                                                   @ 2
                                                                   @ 2
                                                                   @ 0
                                                                   @ 0
                                                                   @ 1
                                                                   @ 0
                                                                   AnsatzEqns2.$stensorContractWith_1
                                                                     `cast`
                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                   AnsatzEqns2.$stensorContractWith_1
                                                                     `cast`
                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                   AnsatzEqns2.ansatzABb1
                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                   ww24
                                                                     `cast`
                                                                   (Data.Map.Internal.Map
                                                                      ((,,,,,,,)
                                                                         <Index.Ind
                                                                            2 Index.Uind_20>_N
                                                                         <Index.Ind
                                                                            2 Index.Lind_20>_N
                                                                         <Index.Ind
                                                                            0 Index.Uind_19>_N
                                                                         <Index.Ind
                                                                            0 Index.Lind_19>_N
                                                                         <Index.Ind
                                                                            1 Index.Uind_9>_N
                                                                         <Index.Ind
                                                                            0 Index.Lind_9>_N
                                                                         (Index.Ind
                                                                            (Sym (AddDef (<1>_N,
                                                                                          <1>_N)))
                                                                            <Index.Uind_3>_N)_N
                                                                         (Index.Ind
                                                                            (Sym (AddDef (<1>_N,
                                                                                          <1>_N)))
                                                                            <Index.Lind_3>_N)_N)_N
                                                                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
23fe4248c11b5aaf986ef68156c8966d
  $wansatzAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} True True} {__scc {main:AnsatzEqns2.ansatzAIB.prod} True False} {__scc {main:AnsatzEqns2.ansatzAIB.totalBlock1} True False} {__scc {main:AnsatzEqns2.ansatzAIB.block1} True False} {__scc {main:AnsatzEqns2.ansatzAIB.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                      w
                                                                                                                                                                                                                                                                                                      w1 of ww { Tensor.Tensor ww1 ->
                 case AnsatzEqns2.ansatzAIB1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.block1} False True} Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww1
                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.int3} True True} BasicTensors.interEqn1_3
                                                                                                                            w
                                                                                                                            w1
                                                                                                                            w2
                                                                                                                            w3 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.block2} False True} Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww8
                                                                                                                               ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                          @ (Index.Index
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               2
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               0
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               1
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                                                                          (Tensor.aSymTensor3
                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 1)
                                                                                                                                                                                                                          AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                          ww5
                                                                                                                                                                                                                            `cast`
                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                             <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                          ww12
                                                                                                                                                                                                                            `cast`
                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                (Index.Ind
                                                                                                                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                             <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.totalBlock2} True False} BasicTensors.invEta of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                               w2 of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 1
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                    ww14
                                                                                                                                    ww16 of ww17 { Unit# ww18 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                    @ 1
                                                                                                                                    @ 1
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 1
                                                                                                                                    @ 0
                                                                                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                    AnsatzEqns2.ansatzAB3
                                                                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                    ww18
                                                                                                                                      `cast`
                                                                                                                                    (Data.Map.Internal.Map
                                                                                                                                       ((,,,,,,,)
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Uind_20>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_20>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Uind_19>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_19>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<1>_N))
                                                                                                                                             <Index.Uind_9>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<0>_N))
                                                                                                                                             <Index.Lind_9>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                           <1>_N)))
                                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                                          (Index.Ind
                                                                                                                                             (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                           <1>_N)))
                                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                                       <GHC.Real.Rational>_R)_R of ww19 { Unit# ww20 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.prod} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 2
                                                                                                                             @ 2
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             dt1
                                                                                                                             ww20 of ww21 { Unit# ww22 ->
                 case {__scc {main:AnsatzEqns2.ansatzAIB} False True} Tensor.$wtensorContractWith_3
                                                                        @ 1
                                                                        @ 1
                                                                        @ GHC.Real.Rational
                                                                        @ 2
                                                                        @ 2
                                                                        @ 0
                                                                        @ 0
                                                                        @ 2
                                                                        @ 1
                                                                        AnsatzEqns2.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        AnsatzEqns2.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        AnsatzEqns2.ansatzAB6
                                                                        GHC.Real.$fEnumRatio_$s$c+
                                                                        ww22
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N))
                                                                                 <Index.Uind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N))
                                                                                 <Index.Lind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Uind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Lind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (AddDef (<1>_N,
                                                                                          <1>_N))
                                                                                 <Index.Uind_9>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N))
                                                                                 <Index.Lind_9>_N)_N
                                                                              <Index.Ind
                                                                                 (1
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Uind_3>_N
                                                                              <Index.Ind
                                                                                 (1
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Lind_3>_N)_N
                                                                           <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 {__scc {main:AnsatzEqns2.ansatzAIB} False True} Tensor.$wtensorContractWith_3
                                                                   @ 0
                                                                   @ 0
                                                                   @ GHC.Real.Rational
                                                                   @ 2
                                                                   @ 2
                                                                   @ 0
                                                                   @ 0
                                                                   @ 2
                                                                   @ 1
                                                                   AnsatzEqns2.$stensorContractWith_3
                                                                     `cast`
                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                   AnsatzEqns2.$stensorContractWith_3
                                                                     `cast`
                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                   AnsatzEqns2.ansatzAB1
                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                   ww24
                                                                     `cast`
                                                                   (Data.Map.Internal.Map
                                                                      ((,,,,,,,)
                                                                         <Index.Ind
                                                                            2 Index.Uind_20>_N
                                                                         <Index.Ind
                                                                            2 Index.Lind_20>_N
                                                                         <Index.Ind
                                                                            0 Index.Uind_19>_N
                                                                         <Index.Ind
                                                                            0 Index.Lind_19>_N
                                                                         <Index.Ind
                                                                            2 Index.Uind_9>_N
                                                                         <Index.Ind
                                                                            1 Index.Lind_9>_N
                                                                         (Index.Ind
                                                                            (Sym (Add0L (<1>_N)))
                                                                            <Index.Uind_3>_N)_N
                                                                         (Index.Ind
                                                                            (Sym (Add0L (<1>_N)))
                                                                            <Index.Lind_3>_N)_N)_N
                                                                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
04a216fe4fd8e6f7fd7cf993712bd55f
  $wansatzAIBJ ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 3 2 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
4b189a8e13066edcc9722129042bc991
  $wansatzAaBI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 1 1) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} True True} {__scc {main:AnsatzEqns2.ansatzAaBI.prod} True False} {__scc {main:AnsatzEqns2.ansatzAaBI.totalBlock1} True False} {__scc {main:AnsatzEqns2.ansatzAaBI.block1} True False} {__scc {main:AnsatzEqns2.ansatzAaBI.int2} True True} BasicTensors.interEqn1_2
                                                                                                                                                                                                                                                                                                        w
                                                                                                                                                                                                                                                                                                        w1 of ww { Tensor.Tensor ww1 ->
                 case AnsatzEqns2.ansatzAaBI1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.block1} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.int3} True True} BasicTensors.interEqn1_3
                                                                                                                              w
                                                                                                                              w1
                                                                                                                              w2
                                                                                                                              w3 of ww9 { Tensor.Tensor ww10 ->
                 case BasicTensors.delta_3 of ww11 { Tensor.Tensor ww12 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww10
                                                                                                                                 ww12 of ww13 { Unit# ww14 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 2
                                                                                                                                 @ 2
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww8
                                                                                                                                 ww14
                                                                                                                                   `cast`
                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                    ((,,,,,,,)
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                   <1>_N))
                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                       (Index.Ind
                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                   <1>_N))
                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                    <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                            @ (Index.Index
                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                                                                            (Tensor.aSymTensor3
                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                               @ 2)
                                                                                                                                                                                                                            AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                            ww5
                                                                                                                                                                                                                              `cast`
                                                                                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                                                                                               ((,,,,,,,)
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                     <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                     <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                     <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                     <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<1>_N))
                                                                                                                                                                                                                                     <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<1>_N))
                                                                                                                                                                                                                                     <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0R (<2>_N))
                                                                                                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0R (<2>_N))
                                                                                                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                               <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                            ww16
                                                                                                                                                                                                                              `cast`
                                                                                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                                                                                               ((,,,,,,,)
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                     <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                     <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                     <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                     <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<1>_N))
                                                                                                                                                                                                                                     <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<1>_N))
                                                                                                                                                                                                                                     <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<2>_N))
                                                                                                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                     (Add0L (<2>_N))
                                                                                                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                               <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.totalBlock2} True False} BasicTensors.invEta of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                 w2 of ww19 { Tensor.Tensor ww20 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 2
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 2
                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                      ww18
                                                                                                                                      ww20 of ww21 { Unit# ww22 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      AnsatzEqns2.$stensorContractWith_1
                                                                                                                                        `cast`
                                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                      AnsatzEqns2.$stensorContractWith_1
                                                                                                                                        `cast`
                                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                      AnsatzEqns2.ansatzAB3
                                                                                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                      ww22
                                                                                                                                        `cast`
                                                                                                                                      (Data.Map.Internal.Map
                                                                                                                                         ((,,,,,,,)
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<1>_N))
                                                                                                                                               <Index.Uind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                             <1>_N)))
                                                                                                                                               <Index.Uind_3>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                             <1>_N)))
                                                                                                                                               <Index.Lind_3>_N)_N)_N
                                                                                                                                         <GHC.Real.Rational>_R)_R of ww23 { Unit# ww24 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.prod} False True} Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 2
                                                                                                                               @ 2
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 2
                                                                                                                               @ 2
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               dt1
                                                                                                                               ww24 of ww25 { Unit# ww26 ->
                 case {__scc {main:AnsatzEqns2.ansatzAaBI} False True} Tensor.$wtensorContractWith_3
                                                                         @ 2
                                                                         @ 2
                                                                         @ GHC.Real.Rational
                                                                         @ 2
                                                                         @ 2
                                                                         @ 0
                                                                         @ 0
                                                                         @ 2
                                                                         @ 1
                                                                         AnsatzEqns2.$stensorContractWith_6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                         AnsatzEqns2.$stensorContractWith_6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                         AnsatzEqns2.ansatzABb2
                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                         ww26
                                                                           `cast`
                                                                         (Data.Map.Internal.Map
                                                                            ((,,,,,,,)
                                                                               (Index.Ind
                                                                                  (Add0R (<2>_N))
                                                                                  <Index.Uind_20>_N)_N
                                                                               (Index.Ind
                                                                                  (Add0R (<2>_N))
                                                                                  <Index.Lind_20>_N)_N
                                                                               (Index.Ind
                                                                                  (Add0L (<0>_N))
                                                                                  <Index.Uind_19>_N)_N
                                                                               (Index.Ind
                                                                                  (Add0L (<0>_N))
                                                                                  <Index.Lind_19>_N)_N
                                                                               (Index.Ind
                                                                                  (AddDef (<1>_N,
                                                                                           <1>_N))
                                                                                  <Index.Uind_9>_N)_N
                                                                               (Index.Ind
                                                                                  (Add0R (<1>_N))
                                                                                  <Index.Lind_9>_N)_N
                                                                               <Index.Ind
                                                                                  (2
                                                                                   GHC.TypeNats.+ 1)
                                                                                  Index.Uind_3>_N
                                                                               <Index.Ind
                                                                                  (2
                                                                                   GHC.TypeNats.+ 1)
                                                                                  Index.Lind_3>_N)_N
                                                                            <GHC.Real.Rational>_R)_R of ww27 { Unit# ww28 ->
                 {__scc {main:AnsatzEqns2.ansatzAaBI} False True} Tensor.$wtensorContractWith_3
                                                                    @ 1
                                                                    @ 1
                                                                    @ GHC.Real.Rational
                                                                    @ 2
                                                                    @ 2
                                                                    @ 0
                                                                    @ 0
                                                                    @ 2
                                                                    @ 1
                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                    AnsatzEqns2.$stensorContractWith_1
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                    AnsatzEqns2.ansatzABb1
                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                    ww28
                                                                      `cast`
                                                                    (Data.Map.Internal.Map
                                                                       ((,,,,,,,)
                                                                          <Index.Ind
                                                                             2 Index.Uind_20>_N
                                                                          <Index.Ind
                                                                             2 Index.Lind_20>_N
                                                                          <Index.Ind
                                                                             0 Index.Uind_19>_N
                                                                          <Index.Ind
                                                                             0 Index.Lind_19>_N
                                                                          <Index.Ind
                                                                             2 Index.Uind_9>_N
                                                                          <Index.Ind
                                                                             1 Index.Lind_9>_N
                                                                          (Index.Ind
                                                                             (Sym (AddDef (<1>_N,
                                                                                           <1>_N)))
                                                                             <Index.Uind_3>_N)_N
                                                                          (Index.Ind
                                                                             (Sym (AddDef (<1>_N,
                                                                                           <1>_N)))
                                                                             <Index.Lind_3>_N)_N)_N
                                                                       <GHC.Real.Rational>_R)_R } } } } } } } } } } } } } } }) -}
f32063e0b91711a04fc0a63e230f2073
  $wansatzAaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 2 2) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
7f8aa1682004920f9db57a57b1f19952
  $wintCond2NoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
d1c0882cb869752305ec26907e962ed0
  $wintCondfirstOrder ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case ({__scc {main:AnsatzEqns2.intCondfirstOrder} True True} {__scc {main:AnsatzEqns2.intCondfirstOrder.total} True False} {__scc {main:AnsatzEqns2.intCondfirstOrder.block1} True False} AnsatzEqns2.intCondfirstOrder3)
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.intArea} True True} BasicTensors.interArea
                                                                                                                                               w
                                                                                                                                               w1 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.block1} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                     @ (Index.Index
                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                     (Tensor.aSymTensor3
                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                        @ 1)
                                                                                                                                                                                                                                     AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                                     ww1
                                                                                                                                                                                                                                     ww3 of dt1 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.block2} True False} {__scc {main:AnsatzEqns2.intCondfirstOrder.flatA} True True} BasicTensors.flatArea
                                                                                                                                                                                                            w1 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.block2} False True} Tensor.$wtensorProductWith
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                               ww3
                                                                                                                                               ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.block2} False True} Tensor.$wtensorContractWith_20
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               AnsatzEqns2.$stensorContractWith_3
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                               AnsatzEqns2.$stensorContractWith_1
                                                                                                                                                 `cast`
                                                                                                                                               (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                         <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                               AnsatzEqns2.ansatzAB6
                                                                                                                                               GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                               ww7
                                                                                                                                                 `cast`
                                                                                                                                               (Data.Map.Internal.Map
                                                                                                                                                  ((,,,,,,,)
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                        <Index.Uind_20>_N)_N
                                                                                                                                                     <Index.Ind
                                                                                                                                                        (1
                                                                                                                                                         GHC.TypeNats.+ 1)
                                                                                                                                                        Index.Lind_20>_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_19>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Uind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                                        <Index.Lind_9>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        <Index.Uind_3>_N)_N
                                                                                                                                                     (Index.Ind
                                                                                                                                                        (Add0R (<1>_N))
                                                                                                                                                        <Index.Lind_3>_N)_N)_N
                                                                                                                                                  <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.total} False True} Tensor.$wtensorProductWith
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ 1
                                                                                                                                              GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                              dt1
                                                                                                                                              ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.total} False True} Tensor.$wtensorContractWith_20
                                                                                                                                              @ 0
                                                                                                                                              @ 1
                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 0
                                                                                                                                              @ 2
                                                                                                                                              @ 2
                                                                                                                                              AnsatzEqns2.$stensorContractWith_3
                                                                                                                                                `cast`
                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                        <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                              AnsatzEqns2.$stensorContractWith_1
                                                                                                                                                `cast`
                                                                                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                              AnsatzEqns2.ansatzAB6
                                                                                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                              ww11
                                                                                                                                                `cast`
                                                                                                                                              (Data.Map.Internal.Map
                                                                                                                                                 ((,,,,,,,)
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                       <Index.Uind_20>_N)_N
                                                                                                                                                    <Index.Ind
                                                                                                                                                       (1
                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                       Index.Lind_20>_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       <Index.Uind_19>_N)_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       <Index.Lind_19>_N)_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       <Index.Uind_9>_N)_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (Add0L (<0>_N))
                                                                                                                                                       <Index.Lind_9>_N)_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (AddDef (<1>_N,
                                                                                                                                                                <1>_N))
                                                                                                                                                       <Index.Uind_3>_N)_N
                                                                                                                                                    (Index.Ind
                                                                                                                                                       (AddDef (<1>_N,
                                                                                                                                                                <1>_N))
                                                                                                                                                       <Index.Lind_3>_N)_N)_N
                                                                                                                                                 <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.totalTrans} True True} Tensor.$wtensorTranspose
                                                                                                                                                  @ 0
                                                                                                                                                  @ 1
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 0
                                                                                                                                                  @ 2
                                                                                                                                                  @ 2
                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                  AnsatzEqns2.intCondfirstOrder2
                                                                                                                                                  AnsatzEqns2.ansatzAB6
                                                                                                                                                  ww13 of ww14 { Unit# ww15 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.totalTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                   @ 0
                                                                                                                                                   @ 1
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 0
                                                                                                                                                   @ 2
                                                                                                                                                   @ 2
                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                   AnsatzEqns2.intCondfirstOrder1
                                                                                                                                                   AnsatzEqns2.ansatzAB6
                                                                                                                                                   ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True True} AnsatzEqns2.intCondfirstOrder_go8
                                                                                                                                                                                                                                                         ww17 of dt2 { DEFAULT ->
                 case {__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      1
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      0
                                                                                                                                                                                                                      2
                                                                                                                                                                                                                      2)
                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                    @ 2)
                                                                                                                                                                                                                 AnsatzEqns2.ansatzAB_lvl19
                                                                                                                                                                                                                 ww13
                                                                                                                                                                                                                 dt2 of dt3 { DEFAULT ->
                 (# dt3 #) } } } } } } } } } } } }) -}
3fd7bea5a06b44003da84544b544742a
  $wmkEqnSparseAnsatzAB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational) ->
                 {__scc {main:AnsatzEqns2.mkEqnSparseAnsatzAB} True True} letrec {
                                                                            go13 :: [((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      GHC.Real.Rational)]
                                                                                    -> Data.Map.Internal.Map
                                                                                         (Index.Index
                                                                                            2
                                                                                            2
                                                                                            0
                                                                                            0
                                                                                            1
                                                                                            0
                                                                                            0
                                                                                            0)
                                                                                         GHC.Real.Rational
                                                                                    -> [((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational)]
                                                                              {- Arity: 2,
                                                                                 Strictness: <L,1*U><S,1*U> -}
                                                                            = \ (z' :: [((GHC.Types.Int,
                                                                                          GHC.Types.Int),
                                                                                         GHC.Real.Rational)])
                                                                                (ds :: Data.Map.Internal.Map
                                                                                         (Index.Index
                                                                                            2
                                                                                            2
                                                                                            0
                                                                                            0
                                                                                            1
                                                                                            0
                                                                                            0
                                                                                            0)
                                                                                         GHC.Real.Rational) ->
                                                                              case ds of wild {
                                                                                Data.Map.Internal.Bin dt1 kx x l r
                                                                                -> case kx of wild1 { (,,,,,,,) x1 x2 ds1 ds2 x5 ds3 ds4 ds5 ->
                                                                                   go13
                                                                                     (GHC.Types.:
                                                                                        @ ((GHC.Types.Int,
                                                                                            GHC.Types.Int),
                                                                                           GHC.Real.Rational)
                                                                                        ({__scc {main:AnsatzEqns2.index2SparseAnsatzAB} True False} ({__scc {main:AnsatzEqns2.index2SparseAnsatzAB} False True} case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.e} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} x1 of wild2 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.e} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                              @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                                                                                                                              s of wild3 {
                                                                                                                                                                                                                  GHC.Base.Nothing
                                                                                                                                                                                                                  -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                     ret_ty GHC.Types.Int
                                                                                                                                                                                                                     of {}
                                                                                                                                                                                                                  GHC.Base.Just x4
                                                                                                                                                                                                                  -> case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.e} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                  @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                                  x4 of a# { DEFAULT ->
                                                                                                                                                                                                                     case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.f} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild2 of wild4 { Index.UnsafemkInd s1 ->
                                                                                                                                                                                                                     case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.f} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                   @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                                                                                   s1 of wild5 {
                                                                                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                                                                                          of {}
                                                                                                                                                                                                                       GHC.Base.Just x6
                                                                                                                                                                                                                       -> case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.f} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                       @ Index.Uind_20
                                                                                                                                                                                                                                                                                                                                       x6 of a#1 { DEFAULT ->
                                                                                                                                                                                                                          case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} x5 of wild6 { Index.UnsafemkInd s2 ->
                                                                                                                                                                                                                          case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_9
                                                                                                                                                                                                                                                                                                                                        0#
                                                                                                                                                                                                                                                                                                                                        s2 of wild7 {
                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                               ret_ty GHC.Types.Int
                                                                                                                                                                                                                               of {}
                                                                                                                                                                                                                            GHC.Base.Just x7
                                                                                                                                                                                                                            -> case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                            @ Index.Uind_9
                                                                                                                                                                                                                                                                                                                                            x7 of a#2 { DEFAULT ->
                                                                                                                                                                                                                               GHC.Types.I#
                                                                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                                                                             ({__scc {main:AnsatzEqns2.index2SparseAnsatzAB.e} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                                                                                             a#)
                                                                                                                                                                                                                                             1#)
                                                                                                                                                                                                                                          210#)
                                                                                                                                                                                                                                       (GHC.Prim.*#
                                                                                                                                                                                                                                          (GHC.Prim.-#
                                                                                                                                                                                                                                             ({__scc {main:AnsatzEqns2.index2SparseAnsatzAB.f} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                                                                                             a#1)
                                                                                                                                                                                                                                             1#)
                                                                                                                                                                                                                                          10#))
                                                                                                                                                                                                                                    ({__scc {main:AnsatzEqns2.index2SparseAnsatzAB.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                                                    a#2)) } } } } } } } } },
                                                                                                                                                     {__scc {main:AnsatzEqns2.index2SparseAnsatzAB} False True} let {
                                                                                                                                                                                                                  b :: GHC.Types.Int
                                                                                                                                                                                                                  = {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.b} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case x2 of wild2 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                                                                                   case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                    @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                                                                                                                                                                    s of wild3 {
                                                                                                                                                                                                                                                                                                                                                                     GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                                     -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                        ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                                        of {}
                                                                                                                                                                                                                                                                                                                                                                     GHC.Base.Just x4
                                                                                                                                                                                                                                                                                                                                                                     -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                        x4 of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                                        GHC.Types.I#
                                                                                                                                                                                                                                                                                                                                                                          (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                                                                                                                                                             a#) } } }
                                                                                                                                                                                                                } in
                                                                                                                                                                                                                let {
                                                                                                                                                                                                                  a :: GHC.Types.Int
                                                                                                                                                                                                                  = {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} case x2 of wild2 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                                                                                   case {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                    @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                                                                                                                                                                    s of wild3 {
                                                                                                                                                                                                                                                                                                                                                                     GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                                     -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                        ret_ty GHC.Types.Int
                                                                                                                                                                                                                                                                                                                                                                        of {}
                                                                                                                                                                                                                                                                                                                                                                     GHC.Base.Just x4
                                                                                                                                                                                                                                                                                                                                                                     -> case {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                        x4 of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                                        GHC.Types.I#
                                                                                                                                                                                                                                                                                                                                                                          (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                                                                                                                                                             a#) } } }
                                                                                                                                                                                                                } in
                                                                                                                                                                                                                case {__scc {main:AnsatzEqns2.index2SparseAnsatzAB.x} True True} AnsatzEqns2.$sfind1
                                                                                                                                                                                                                                                                                   @ GHC.Types.Int
                                                                                                                                                                                                                                                                                   (GHC.Types.:
                                                                                                                                                                                                                                                                                      @ GHC.Types.Int
                                                                                                                                                                                                                                                                                      (GHC.Classes.$fOrdInt_$cmin
                                                                                                                                                                                                                                                                                         a
                                                                                                                                                                                                                                                                                         b)
                                                                                                                                                                                                                                                                                      (GHC.Types.:
                                                                                                                                                                                                                                                                                         @ GHC.Types.Int
                                                                                                                                                                                                                                                                                         (GHC.Classes.$fOrdInt_$cmax
                                                                                                                                                                                                                                                                                            a
                                                                                                                                                                                                                                                                                            b)
                                                                                                                                                                                                                                                                                         (GHC.Types.[]
                                                                                                                                                                                                                                                                                            @ GHC.Types.Int)))
                                                                                                                                                                                                                                                                                   w of wild2 { GHC.Types.I# y ->
                                                                                                                                                                                                                GHC.Types.I#
                                                                                                                                                                                                                  (GHC.Prim.+#
                                                                                                                                                                                                                     316#
                                                                                                                                                                                                                     y) }),
                                                                                         x)
                                                                                        (go13 z' r))
                                                                                     l }
                                                                                Data.Map.Internal.Tip
                                                                                -> z' }
                                                                          } in
                                                                          AnsatzEqns2.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               ww)) -}
07e0ebccd2555f861f7368bb2f4933d1
  $wmkEqnSparseAnsatzABb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
ed2deaebeba6bc60246dc0f82a3bae06
  $wmkEqnSparseAnsatzAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
1747cae32c769c29407165cced286bc4
  $wmkEqnSparseAnsatzAIBJ ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 3 2 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
decb6dd123434f9d16b123f95d191abd
  $wmkEqnSparseAnsatzAaBI ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
3343925e259644f93e1a76515220ed63
  $wmkEqnSparseAnsatzAaBb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
d4d9c842bbf8a04997d684991db8bd0f
  $wmkEqnSparseRemoveAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
8ba98a802c30c5190eb2557e8471e2e9
  $wmkEqnSparseintCond2NoSym ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
9eb2d02dcae94080542e287f92efcc3b
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
0455d31ba48bb609927460d273f73a08
  ansatzAB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAB w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
5eb632e56e8c6d5707584866621ddb19
  ansatzAB1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB2)) -}
1f3d979861f824fa9d21bc64581da64f
  ansatzAB2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b9bced3381c56011e7fc5eb1790759a8
  ansatzAB3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB4, AnsatzEqns2.ansatzAB4)) -}
96460a941638d83aef3816fea7b24126
  ansatzAB4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
ea053074e1df8d0f9bca04c00fc4a67e
  ansatzAB5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
c0cb52b3f769530ed7a7183d2298ddc8
  ansatzAB6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB4)) -}
e075bcb2989a1d9be2dfe13a937ec501
  ansatzAB_lvl19 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:Tensor.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
6737fd638596f36dbe5aa9f968908a03
  ansatzABb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzABb w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
6890376ee41bafdcae0748bdf1558f5a
  ansatzABb1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB4, AnsatzEqns2.ansatzAB2)) -}
08c7f48a0db29860aaf6f073b1367178
  ansatzABb2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB5)) -}
52907ec16f416221500d9d4b8efdaf95
  ansatzABb3 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:AnsatzEqns2.ansatzABb} False True} {__scc {main:AnsatzEqns2.ansatzABb.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                        case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                        case Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww1
                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                                                                                                                        Tensor.Tensor
                                                                                                                          @ (1
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (1
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          ww5 } } }) -}
992e6c555d1f552d01b42492852c9862
  ansatzAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAIB w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
157f4251a0151957c19e992a8d99611c
  ansatzAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:AnsatzEqns2.ansatzAIB} False True} {__scc {main:AnsatzEqns2.ansatzAIB.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                        case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                        case Tensor.$wtensorProductWith
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ GHC.Real.Rational
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               @ 1
                                                                                                                               @ 1
                                                                                                                               @ 0
                                                                                                                               @ 0
                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                               ww1
                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                                                                                                                        Tensor.Tensor
                                                                                                                          @ (1
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (1
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ (0
                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          ww5 } } }) -}
67aab838b033a649332b09d2f4049d03
  ansatzAIBJ ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAIBJ w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 2
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
657e522af06098bcbc8c3630e88633db
  ansatzAaBI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAaBI w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
e1748dd3cf27ff22ef3b802edb514ba1
  ansatzAaBI1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:AnsatzEqns2.ansatzAaBI} False True} {__scc {main:AnsatzEqns2.ansatzAaBI.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                          case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                          case Tensor.$wtensorProductWith
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 @ 1
                                                                                                                                 @ 1
                                                                                                                                 @ 0
                                                                                                                                 @ 0
                                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                 ww1
                                                                                                                                 ww3 of ww4 { Unit# ww5 ->
                                                                                                                          Tensor.Tensor
                                                                                                                            @ (1
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ (1
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 1)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 1)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ (0
                                                                                                                               GHC.TypeNats.+ 0)
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            ww5 } } }) -}
ca6060ebf506dfd8242dea540071551c
  ansatzAaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAaBb w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
b7a90dd63efd5d308af564bcc4cba5da
  intCond2NoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wintCond2NoSym w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
adf7a07886a6f25d6106b37e6b2ea345
  intCondfirstOrder ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wintCondfirstOrder w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
4fed05a88db9bfb18bbe153bd74b82fe
  intCondfirstOrder1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
361365106390d6143579e99dbc4b419f
  intCondfirstOrder2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
2865534cd698257ae2559e778e0439bd
  intCondfirstOrder3 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:AnsatzEqns2.intCondfirstOrder} False True} {__scc {main:AnsatzEqns2.intCondfirstOrder.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                                        case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                                        case Tensor.$wtensorProductWith
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 0
                                                                                                                                               @ 1
                                                                                                                                               @ 1
                                                                                                                                               GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                               ww1
                                                                                                                                               ww3 of ww4 { Unit# ww5 ->
                                                                                                                                        Tensor.Tensor
                                                                                                                                          @ (1
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (1
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                          @ (0
                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                          ww5 } } }) -}
463acbc2a5d9d3fa7c918598ed488d05
  intCondfirstOrder_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
594695a33efc2f3c4cb15af38231ed1b
  mkEqnSparseAnsatzAB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAB w ww1 }) -}
35e90826ab9a7abee8644f0b88c7fbc3
  mkEqnSparseAnsatzABb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzABb w ww1 }) -}
aa95ab060474a16e35b4df230d727982
  mkEqnSparseAnsatzAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAIB w ww1 }) -}
7d5924794f2ac7a9cb9835b163328032
  mkEqnSparseAnsatzAIBJ ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAIBJ w ww1 }) -}
541f347691aab0ca89576f55f97a6cbb
  mkEqnSparseAnsatzAaBI ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAaBI w ww1 }) -}
8e74d5571ee6f08a66f157c7ad55bec5
  mkEqnSparseAnsatzAaBb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAaBb w ww1 }) -}
70bafecdefd258a354846bcd82f62615
  mkEqnSparseRemoveAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseRemoveAIB w ww1 }) -}
21262b982f1c132cb7e7ed23c728d826
  mkEqnSparsefirstOrder ::
    Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational) ->
                 {__scc {main:AnsatzEqns2.mkEqnSparsefirstOrder} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                            AnsatzEqns2.$sfromList
                                                                              @ (GHC.Real.Ratio
                                                                                   GHC.Integer.Type.Integer)
                                                                              (AnsatzEqns2.mkEqnSparsefirstOrder_go13
                                                                                 (GHC.Types.[]
                                                                                    @ ((GHC.Types.Int,
                                                                                        GHC.Types.Int),
                                                                                       GHC.Real.Rational))
                                                                                 map1) }) -}
53be33c2c6c403959fc43c7f72fdb0b1
  mkEqnSparsefirstOrder_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
6e8eb76b58c343eb5214a5d615cc0a13
  mkEqnSparseintCond2NoSym ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseintCond2NoSym w ww1 }) -}
2424d1fdbcffff71e3d06d4589c1509c
  removeAIB :: Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational
  {- Unfolding: InlineRule (0, True, True)
                AnsatzEqns2.removeAIB1
                  `cast`
                (Tensor.Tensor
                   (AddDef (<1>_N, <1>_N))
                   (AddDef (<1>_N, <1>_N))
                   (Add0L (<0>_N))
                   (Add0L (<0>_N))
                   (Add0L (<1>_N))
                   (Add0L (<1>_N))
                   (Add0L (<0>_N))
                   (Add0L (<0>_N))
                   <GHC.Real.Rational>_R)_R -}
d8181c1bc32cb96856d2cf81b0a3292f
  removeAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:AnsatzEqns2.removeAIB} True True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                case Tensor.$wtensorProductWith
                                                                       @ GHC.Real.Rational
                                                                       @ GHC.Real.Rational
                                                                       @ GHC.Real.Rational
                                                                       @ 1
                                                                       @ 1
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 1
                                                                       @ 0
                                                                       @ 0
                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                       ww1
                                                                       ww3 of ww4 { Unit# ww5 ->
                                                                case Tensor.$wtensorProductWith
                                                                       @ GHC.Real.Rational
                                                                       @ GHC.Real.Rational
                                                                       @ GHC.Real.Rational
                                                                       @ 1
                                                                       @ 1
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 1
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 1
                                                                       @ 0
                                                                       @ 0
                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                       ww1
                                                                       ww5
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<1>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<1>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<1>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_3>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_3>_N)_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                                                                Tensor.Tensor
                                                                  @ (1 GHC.TypeNats.+ 1)
                                                                  @ (1 GHC.TypeNats.+ 1)
                                                                  @ (0 GHC.TypeNats.+ 0)
                                                                  @ (0 GHC.TypeNats.+ 0)
                                                                  @ (0 GHC.TypeNats.+ 1)
                                                                  @ (0 GHC.TypeNats.+ 1)
                                                                  @ (0 GHC.TypeNats.+ 0)
                                                                  @ (0 GHC.TypeNats.+ 0)
                                                                  @ GHC.Real.Rational
                                                                  ww8 } } } }) -}
"SPEC/AnsatzEqns2 fromList @ (Int, Int) _" [orphan] forall @ a
                                                           ($dOrd :: GHC.Classes.Ord
                                                                       (GHC.Types.Int,
                                                                        GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = AnsatzEqns2.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

