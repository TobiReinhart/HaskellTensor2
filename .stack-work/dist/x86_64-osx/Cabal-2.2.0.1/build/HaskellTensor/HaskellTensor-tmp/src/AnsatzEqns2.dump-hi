
==================== FINAL INTERFACE ====================
2019-02-01 11:42:55.197367 UTC

interface main:AnsatzEqns2 8043
  interface hash: 8ff5952daf223ca9b9bd350a8204b771
  ABI hash: c184fb18ecf396a8d3ca05f48e020aba
  export-list hash: d19d3a0cdafa83117ca972888026a06f
  orphan hash: 36fa42a1d8c317177031e06d28503821
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  AnsatzEqns2.ansatzAB
  AnsatzEqns2.ansatzABb
  AnsatzEqns2.ansatzAIB
  AnsatzEqns2.ansatzAIBJ
  AnsatzEqns2.ansatzAaBI
  AnsatzEqns2.ansatzAaBb
  AnsatzEqns2.intCond2NoSym
  AnsatzEqns2.intCondfirstOrder
  AnsatzEqns2.mkEqnSparseAnsatzAB
  AnsatzEqns2.mkEqnSparseAnsatzABSolo
  AnsatzEqns2.mkEqnSparseAnsatzABb
  AnsatzEqns2.mkEqnSparseAnsatzAIB
  AnsatzEqns2.mkEqnSparseAnsatzAIBJ
  AnsatzEqns2.mkEqnSparseAnsatzAaBI
  AnsatzEqns2.mkEqnSparseAnsatzAaBb
  AnsatzEqns2.mkEqnSparseRemoveAIB
  AnsatzEqns2.mkEqnSparsefirstOrder
  AnsatzEqns2.mkEqnSparseintCond2NoSym
  AnsatzEqns2.removeAIB
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors d370033bab7dfa9fcc69ea504e0a958d
  exports: d7714270655295c06db8e25f1d3ae43c
  aSymI_2 b412cb5818260abbd80b30e15bb34ec6
  delta_20 25def28fd6a7db28a352ac0ec47e807b
  delta_3 20fe95723b0f42bf99216389c232614b
  delta_9 0a152dd63439e385bbf9fb92d11dcd7d
  flatArea a47cade0010bb221e3d8fdf99e51dae5
  interArea 3e55a2739fd7cf90177e2703d17359db
  interEqn1_2 336e6115b7f9e70f11318e244a91bb27
  interEqn1_3 98aafd70931bd3b29f3e0b9490a7e709
  interI_2 208ec3aa59eb880b784aca5ec4629314
  interMetric 8516fe9cbc20ae7cce26d7f29f76a4e6
  invEta 941c71f76301c1d3f9ad39087948b0c1
import  -/  EquivarianceEqns f59ee1afa8c9f10e79bfa6c25205f4a0
  exports: 753233c47284511068d96a6925317f46
import  -/  Index 846d6195a6d682ebc4b5552893fd0d45
  exports: 57bd4ebf86e1ac997dd2a9c3171f207b
  Index f1b2e2d342d299287fa67a4a38056bc6
  Index d1cd1067a874dee8fab194e163b456d3
  Lind_20 8ff213bd2e4ee9794357cd73b8656e72
  Lind_9 d899f69b9977ade0529b5015a71fa56c
  Linds_3 c2218f06873d6e75f70ab22fa89ca846
  Uind_20 da1c3284cea79be72eb1a0454a6da0ec
  Uind_9 bdc578619f32ac1d154acb21ac900fa3
  Uinds_3 8e007ccb52f8036461e378de4876a33c
  getValInd 2f343080b63386f163ac2db0992f586e
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde 01727937c27ae17d2b109d09ad686ca8
  exports: b2cd66be74d90ac4a27aea2ce34825a2
import  -/  Tensor c5dfa081ae5ad523bef39ca8def0f654
  exports: af2b4fe26a34e82b11fcad14a4c891cb
  Tensor 939d8f0d009a7bad571c4642c9cd98df
  Tensor 6ebce5ff137d1d5d966e303383d35759
  tensorAdd d99ca0e639c925dc556efc00daeae60d
  tensorContractWith_20 75e177f0052fa4c7f69a2260778740ed
  tensorContractWith_3 f04596f955f3e30f9459e535b650bdae
  tensorProductWith 05216200a08bb52e8b8e53703bbee9c1
  tensorSub 4712786dc2f094bb059ae94da1bab1e3
  tensorTranspose bf772467c4363e927c1ee5deaa31eb8b
bcf45780236983f35bb7f600e5ef36f7
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
ee2248d8e8dd9de75316f397e4cc267e
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> AnsatzEqns2.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> AnsatzEqns2.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> AnsatzEqns2.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> AnsatzEqns2.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
71a388d7b411219cd851a8d887c5b18d
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
ffd337e277c571b02cb716cbae26a0b8
  $smapKeysWith ::
    (a -> a -> a)
    -> (k1 -> (GHC.Types.Int, GHC.Types.Int))
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   @ k1
                   (c :: a -> a -> a)
                   (f :: k1 -> (GHC.Types.Int, GHC.Types.Int))
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 let {
                   f1 :: (GHC.Types.Int, GHC.Types.Int) -> a -> a -> a
                     {- Arity: 3, Strictness: <L,A><L,U><L,U>,
                        Unfolding: InlineRule (3, True, True)
                                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) (x1 :: a) (y :: a) ->
                                    c x1 y) -}
                   = \ (ds :: (GHC.Types.Int, GHC.Types.Int))
                       (x1 :: a)[OneShot]
                       (y :: a)[OneShot] ->
                     c x1 y
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map k1 a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, GHC.Types.Int), a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt1 kx x l r
                       -> go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, GHC.Types.Int), a)
                               (f kx, x)
                               (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 letrec {
                   go14 :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a)
                       (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                     case ds of wild {
                       [] -> z
                       : x1 xs
                       -> case x1 of wild1 { (,) k x2 ->
                          case k of ww { (,) ww1 ww2 ->
                          case AnsatzEqns2.$w$sgo1 @ a f1 ww1 ww2 x2 z of z' { DEFAULT ->
                          go14 z' xs } } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                   (go13 (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a)) eta)) -}
619b3c4d831b7fe390b7e5daf83d0061
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
373bd1746755f0f5a54dda7831e3cd92
  $stensorContractWith_12 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_13 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
7e118dc2c879dd6016e52309a71c3e44
  $stensorContractWith_13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
e6a6f45cdc77301bd05c4a6690a8160a
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
58a251bbf70eba0b719281d6d905c69d
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
396c6e1a4a54ed66bcdc86ebb9ed303f
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
0ba4c42a434d366410540b2e8de06fc3
  $stensorContractWith_6 :: GHC.Natural.Natural
  {- Unfolding: (case AnsatzEqns2.$stensorContractWith_7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8b7bc482700ab6689f78beb8cadb5f64
  $stensorContractWith_7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
5579a2eeb6ae586128f326b310e6f6d7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   AnsatzEqns2.$trModule3
                   AnsatzEqns2.$trModule1) -}
43817172e3a4dea61c8c44882cd3c786
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS AnsatzEqns2.$trModule2) -}
621cfae3d9a8bcf76f61ca636261902d
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AnsatzEqns2"#) -}
61c397503880f4c2086924f913dd0e47
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS AnsatzEqns2.$trModule4) -}
b98c1ae838a14aa63083a999e9f54140
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
0153fcbc7ca53cbb172f5478dac3693c
  $w$sgo1 ::
    ((GHC.Types.Int, GHC.Types.Int) -> a1 -> a1 -> a1)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5,
     Strictness: <L,1*C1(C1(C1(U)))><L,U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
0adad4acaa0bd3d25ff6fc2330b5dfd8
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
2435d4e43315539c3779a4b02a8c64ca
  $wansatzAB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case BasicTensors.delta_20 of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorTranspose
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        AnsatzEqns2.ansatzAB4
                        AnsatzEqns2.ansatzAB6
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 2 2 0 0 0 0 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 2 @ 2 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww9 of dt1 { DEFAULT ->
                 case Tensor.$wtensorTranspose
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        AnsatzEqns2.ansatzAB5
                        AnsatzEqns2.ansatzAB6
                        dt1 of ww10 { Unit# ww11 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 2 2 0 0 0 0 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 2 @ 2 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        dt1
                        ww11 of dt2 { DEFAULT ->
                 case BasicTensors.invEta of ww12 { Tensor.Tensor ww13 ->
                 case BasicTensors.$waSymI_2 w2 of ww14 { Unit# ww15 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww13
                        ww15 of ww16 { Unit# ww17 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB3
                        GHC.Real.$fEnumRatio_$s$c+
                        ww17
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        dt2
                        ww19 of ww20 { Unit# ww21 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB6
                        GHC.Real.$fEnumRatio_$s$c+
                        ww21
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<2>_N))
                              (Add0R (<2>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              <1 GHC.TypeNats.+ 1>_N
                              <1 GHC.TypeNats.+ 1>_N)_N
                           <GHC.Real.Rational>_R)_R of ww22 { Unit# ww23 ->
                 Tensor.$wtensorContractWith_3
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   AnsatzEqns2.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   AnsatzEqns2.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   AnsatzEqns2.ansatzAB1
                   GHC.Real.$fEnumRatio_$s$c+
                   ww23
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <2>_N
                         <2>_N
                         <0>_N
                         <0>_N
                         <1>_N
                         <0>_N
                         (Sym (Add0L (<1>_N)))
                         (Sym (Add0L (<1>_N))))_N
                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
938f8bb34e7806b1f8b4cd456e9e0707
  $wansatzABb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case AnsatzEqns2.ansatzABb3
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.delta_20 of ww8 { Tensor.Tensor ww9 ->
                 case BasicTensors.$winterEqn1_2 w w1 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww9
                        ww11 of ww12 { Unit# ww13 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 2 2 0 0 0 0 2 2)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 2 @ 2 @ 0 @ 0 @ 0 @ 0 @ 2 @ 2)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww13
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<2>_N))
                              (Add0L (<2>_N)))_N
                           <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case BasicTensors.invEta of ww14 { Tensor.Tensor ww15 ->
                 case BasicTensors.$waSymI_2 w2 of ww16 { Unit# ww17 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww15
                        ww17 of ww18 { Unit# ww19 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB3
                        GHC.Real.$fEnumRatio_$s$c+
                        ww19
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        dt1
                        ww21 of ww22 { Unit# ww23 ->
                 case Tensor.$wtensorContractWith_3
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        AnsatzEqns2.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        AnsatzEqns2.ansatzABb2
                        GHC.Real.$fEnumRatio_$s$c+
                        ww23
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<2>_N))
                              (Add0R (<2>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              <2 GHC.TypeNats.+ 1>_N
                              <2 GHC.TypeNats.+ 1>_N)_N
                           <GHC.Real.Rational>_R)_R of ww24 { Unit# ww25 ->
                 Tensor.$wtensorContractWith_3
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   AnsatzEqns2.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   AnsatzEqns2.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   AnsatzEqns2.ansatzABb1
                   GHC.Real.$fEnumRatio_$s$c+
                   ww25
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <2>_N
                         <2>_N
                         <0>_N
                         <0>_N
                         <1>_N
                         <0>_N
                         (Sym (AddDef (<1>_N, <1>_N)))
                         (Sym (AddDef (<1>_N, <1>_N))))_N
                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
25cc3a1ab22153c3d47708ddc1ed32f6
  $wansatzAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterArea w w1 of ww { Unit# ww2 ->
                 case AnsatzEqns2.ansatzAIB1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.delta_20 of ww8 { Tensor.Tensor ww9 ->
                 case BasicTensors.$winterEqn1_3 w w1 w2 w3 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww9
                        ww11 of ww12 { Unit# ww13 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 2 2 0 0 1 1 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 2 @ 2 @ 0 @ 0 @ 1 @ 1 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww13
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case BasicTensors.invEta of ww14 { Tensor.Tensor ww15 ->
                 case BasicTensors.$waSymI_2 w2 of ww16 { Unit# ww17 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww15
                        ww17 of ww18 { Unit# ww19 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB3
                        GHC.Real.$fEnumRatio_$s$c+
                        ww19
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        dt1
                        ww21 of ww22 { Unit# ww23 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB6
                        GHC.Real.$fEnumRatio_$s$c+
                        ww23
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<2>_N))
                              (Add0R (<2>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<1>_N))
                              <1 GHC.TypeNats.+ 1>_N
                              <1 GHC.TypeNats.+ 1>_N)_N
                           <GHC.Real.Rational>_R)_R of ww24 { Unit# ww25 ->
                 Tensor.$wtensorContractWith_3
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   AnsatzEqns2.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   AnsatzEqns2.$stensorContractWith_3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   AnsatzEqns2.ansatzAB1
                   GHC.Real.$fEnumRatio_$s$c+
                   ww25
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <2>_N
                         <2>_N
                         <0>_N
                         <0>_N
                         <2>_N
                         <1>_N
                         (Sym (Add0L (<1>_N)))
                         (Sym (Add0L (<1>_N))))_N
                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
0d931045a06f3d1eae197294711dfdfa
  $wansatzAIBJ ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 3 2 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
07c99969058c5928f2ee6ff7807ca999
  $wansatzAaBI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 1 1) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterEqn1_2 w w1 of ww { Unit# ww2 ->
                 case AnsatzEqns2.ansatzAIB1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.delta_20 of ww8 { Tensor.Tensor ww9 ->
                 case BasicTensors.$winterEqn1_3 w w1 w2 w3 of ww10 { Unit# ww11 ->
                 case BasicTensors.delta_3 of ww12 { Tensor.Tensor ww13 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww11
                        ww13 of ww14 { Unit# ww15 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 2
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww9
                        ww15
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<1>_N))
                              (Add0R (<1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww16 { Unit# ww17 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 2 2 0 0 1 1 2 2)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 2 @ 2 @ 0 @ 0 @ 1 @ 1 @ 2 @ 2)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0R (<2>_N))
                              (Add0R (<2>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww17
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<2>_N))
                              (Add0L (<2>_N)))_N
                           <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case BasicTensors.invEta of ww18 { Tensor.Tensor ww19 ->
                 case BasicTensors.$waSymI_2 w2 of ww20 { Unit# ww21 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww19
                        ww21 of ww22 { Unit# ww23 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB3
                        GHC.Real.$fEnumRatio_$s$c+
                        ww23
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww24 { Unit# ww25 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        dt1
                        ww25 of ww26 { Unit# ww27 ->
                 case Tensor.$wtensorContractWith_3
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        AnsatzEqns2.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        AnsatzEqns2.$stensorContractWith_6
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        AnsatzEqns2.ansatzABb2
                        GHC.Real.$fEnumRatio_$s$c+
                        ww27
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<2>_N))
                              (Add0R (<2>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<1>_N))
                              <2 GHC.TypeNats.+ 1>_N
                              <2 GHC.TypeNats.+ 1>_N)_N
                           <GHC.Real.Rational>_R)_R of ww28 { Unit# ww29 ->
                 Tensor.$wtensorContractWith_3
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   AnsatzEqns2.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   AnsatzEqns2.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   AnsatzEqns2.ansatzABb1
                   GHC.Real.$fEnumRatio_$s$c+
                   ww29
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <2>_N
                         <2>_N
                         <0>_N
                         <0>_N
                         <2>_N
                         <1>_N
                         (Sym (AddDef (<1>_N, <1>_N)))
                         (Sym (AddDef (<1>_N, <1>_N))))_N
                      <GHC.Real.Rational>_R)_R } } } } } } } } } } } } } } }) -}
35b3fd8fab342058323adaeb1395b35e
  $wansatzAaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 2 2) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
d0cf0f67efe232409a44d0b1063328a5
  $wintCond2NoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
38dc3f39eb9b9a07b2027cd3bc79dc96
  $wintCondfirstOrder ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20) ->
                 case AnsatzEqns2.ansatzABb3
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.$winterArea w w1 of ww2 { Unit# ww3 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 1 1 0 0 0 0 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww1
                        ww3 of dt1 { DEFAULT ->
                 case BasicTensors.$wflatArea w1 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww5 of ww6 { Unit# ww7 ->
                 case Tensor.$wtensorContractWith_20
                        @ 0
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        AnsatzEqns2.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB6
                        GHC.Real.$fEnumRatio_$s$c+
                        ww7
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                              <1 GHC.TypeNats.+ 1>_N
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        dt1
                        ww9 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorContractWith_20
                        @ 0
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        AnsatzEqns2.$stensorContractWith_3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        AnsatzEqns2.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        AnsatzEqns2.ansatzAB6
                        GHC.Real.$fEnumRatio_$s$c+
                        ww11
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                              <1 GHC.TypeNats.+ 1>_N
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case Tensor.$wtensorTranspose
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        AnsatzEqns2.intCondfirstOrder2
                        AnsatzEqns2.ansatzAB6
                        ww13 of ww14 { Unit# ww15 ->
                 case Tensor.$wtensorTranspose
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        AnsatzEqns2.intCondfirstOrder1
                        AnsatzEqns2.ansatzAB6
                        ww15 of ww16 { Unit# ww17 ->
                 case AnsatzEqns2.intCondfirstOrder_go8 ww17 of dt2 { DEFAULT ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 0 1 0 0 0 0 2 2)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 0 @ 1 @ 0 @ 0 @ 0 @ 0 @ 2 @ 2)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww13
                        dt2 of dt3 { DEFAULT ->
                 (# dt3 #) } } } } } } } } } } } }) -}
f720d8c41134c95ec4054d21d9da9a30
  $wmkEqnSparseAnsatzAB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational) ->
                 AnsatzEqns2.$smapKeysWith
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (Index.Index 2 2 0 0 1 0 0 0)
                   GHC.Real.$fEnumRatio_$s$c+
                   (\ (ds :: Index.Index 2 2 0 0 1 0 0 0) ->
                    case ds of wild { Index.Index dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 ->
                    (case Data.Sequence.Internal.$wlookup
                            @ Index.Uind_20
                            0#
                            dt1 of wild1 {
                       GHC.Base.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                       GHC.Base.Just x
                       -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                          case Data.Sequence.Internal.$wlookup
                                 @ Index.Uind_20
                                 1#
                                 dt1 of wild2 {
                            GHC.Base.Nothing
                            -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                            GHC.Base.Just x1
                            -> case GHC.Prim.dataToTag# @ Index.Uind_20 x1 of a#1 { DEFAULT ->
                               case Data.Sequence.Internal.$wlookup
                                      @ Index.Uind_9
                                      0#
                                      dt5 of wild3 {
                                 GHC.Base.Nothing
                                 -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                 GHC.Base.Just x2
                                 -> case GHC.Prim.dataToTag# @ Index.Uind_9 x2 of a#2 { DEFAULT ->
                                    GHC.Types.I#
                                      (GHC.Prim.+#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 210#)
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#) 10#))
                                         (GHC.Prim.+# 1# a#2)) } } } } } },
                     let {
                       b :: GHC.Types.Int
                       = case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_20
                                1#
                                dt2 of wild1 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x
                           -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.+# 1# a#) } }
                     } in
                     let {
                       a :: GHC.Types.Int
                       = case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_20
                                0#
                                dt2 of wild1 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x
                           -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.+# 1# a#) } }
                     } in
                     case AnsatzEqns2.$sfind1
                            @ GHC.Types.Int
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (GHC.Classes.$fOrdInt_$cmin a b)
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (GHC.Classes.$fOrdInt_$cmax a b)
                                  (GHC.Types.[] @ GHC.Types.Int)))
                            w of wild1 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# 316# y) }) })
                   ww) -}
18a71a56fda2988f9ab4bb6e7209744a
  $wmkEqnSparseAnsatzABSolo ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational) ->
                 AnsatzEqns2.$smapKeysWith
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (Index.Index 2 2 0 0 1 0 0 0)
                   GHC.Real.$fEnumRatio_$s$c+
                   (\ (ds :: Index.Index 2 2 0 0 1 0 0 0) ->
                    case ds of wild { Index.Index dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 ->
                    (case Data.Sequence.Internal.$wlookup
                            @ Index.Uind_20
                            0#
                            dt1 of wild1 {
                       GHC.Base.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                       GHC.Base.Just x
                       -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                          case Data.Sequence.Internal.$wlookup
                                 @ Index.Uind_20
                                 1#
                                 dt1 of wild2 {
                            GHC.Base.Nothing
                            -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                            GHC.Base.Just x1
                            -> case GHC.Prim.dataToTag# @ Index.Uind_20 x1 of a#1 { DEFAULT ->
                               case Data.Sequence.Internal.$wlookup
                                      @ Index.Uind_9
                                      0#
                                      dt5 of wild3 {
                                 GHC.Base.Nothing
                                 -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                 GHC.Base.Just x2
                                 -> case GHC.Prim.dataToTag# @ Index.Uind_9 x2 of a#2 { DEFAULT ->
                                    GHC.Types.I#
                                      (GHC.Prim.+#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 210#)
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#) 10#))
                                         (GHC.Prim.+# 1# a#2)) } } } } } },
                     let {
                       b :: GHC.Types.Int
                       = case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_20
                                1#
                                dt2 of wild1 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x
                           -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.+# 1# a#) } }
                     } in
                     let {
                       a :: GHC.Types.Int
                       = case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_20
                                0#
                                dt2 of wild1 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x
                           -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.+# 1# a#) } }
                     } in
                     case AnsatzEqns2.$sfind1
                            @ GHC.Types.Int
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (GHC.Classes.$fOrdInt_$cmin a b)
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (GHC.Classes.$fOrdInt_$cmax a b)
                                  (GHC.Types.[] @ GHC.Types.Int)))
                            w of wild1 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# 22# y) }) })
                   ww) -}
b9d72e49da2b066a4bcac8f6c2647a3c
  $wmkEqnSparseAnsatzABb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational) ->
                 AnsatzEqns2.$smapKeysWith
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (Index.Index 2 2 0 0 1 0 1 1)
                   GHC.Real.$fEnumRatio_$s$c+
                   (\ (ds :: Index.Index 2 2 0 0 1 0 1 1) ->
                    case ds of wild { Index.Index dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 ->
                    (case Data.Sequence.Internal.$wlookup
                            @ Index.Uind_20
                            0#
                            dt1 of wild1 {
                       GHC.Base.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                       GHC.Base.Just x
                       -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                          case Data.Sequence.Internal.$wlookup
                                 @ Index.Uind_20
                                 1#
                                 dt1 of wild2 {
                            GHC.Base.Nothing
                            -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                            GHC.Base.Just x1
                            -> case GHC.Prim.dataToTag# @ Index.Uind_20 x1 of a#1 { DEFAULT ->
                               case Data.Sequence.Internal.$wlookup
                                      @ Index.Uind_9
                                      0#
                                      dt5 of wild3 {
                                 GHC.Base.Nothing
                                 -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                 GHC.Base.Just x2
                                 -> case GHC.Prim.dataToTag# @ Index.Uind_9 x2 of a#2 { DEFAULT ->
                                    case Data.Sequence.Internal.$wlookup
                                           @ Index.Uind_3
                                           0#
                                           dt7 of wild4 {
                                      GHC.Base.Nothing
                                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                      GHC.Base.Just x3
                                      -> case x3 of wild5 {
                                           Index.U0_3
                                           -> GHC.Types.I#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.*#
                                                               (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                               210#)
                                                            4#)
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#)
                                                            40#))
                                                      (GHC.Prim.*#
                                                         (GHC.Prim.-# (GHC.Prim.+# 1# a#2) 1#)
                                                         4#))
                                                   1#)
                                           Index.U1_3
                                           -> GHC.Types.I#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.*#
                                                               (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                               210#)
                                                            4#)
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#)
                                                            40#))
                                                      (GHC.Prim.*#
                                                         (GHC.Prim.-# (GHC.Prim.+# 1# a#2) 1#)
                                                         4#))
                                                   2#)
                                           Index.U2_3
                                           -> GHC.Types.I#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.*#
                                                               (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                               210#)
                                                            4#)
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#)
                                                            40#))
                                                      (GHC.Prim.*#
                                                         (GHC.Prim.-# (GHC.Prim.+# 1# a#2) 1#)
                                                         4#))
                                                   3#)
                                           Index.U3_3
                                           -> GHC.Types.I#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.*#
                                                               (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                               210#)
                                                            4#)
                                                         (GHC.Prim.*#
                                                            (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#)
                                                            40#))
                                                      (GHC.Prim.*#
                                                         (GHC.Prim.-# (GHC.Prim.+# 1# a#2) 1#)
                                                         4#))
                                                   4#) } } } } } } } },
                     case AnsatzEqns2.$sfind1
                            @ GHC.Types.Int
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (case Data.Sequence.Internal.$wlookup
                                       @ Index.Lind_20
                                       0#
                                       dt2 of wild1 {
                                  GHC.Base.Nothing
                                  -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                  GHC.Base.Just x
                                  -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                                     GHC.Types.I# (GHC.Prim.+# 1# a#) } })
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (case Data.Sequence.Internal.$wlookup
                                          @ Index.Lind_20
                                          1#
                                          dt2 of wild1 {
                                     GHC.Base.Nothing
                                     -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                     GHC.Base.Just x
                                     -> case GHC.Prim.dataToTag#
                                               @ Index.Lind_20
                                               x of a# { DEFAULT ->
                                        case Data.Sequence.Internal.$wlookup
                                               @ Index.Lind_3
                                               0#
                                               dt8 of wild2 {
                                          GHC.Base.Nothing
                                          -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                          GHC.Base.Just x1
                                          -> case x1 of wild3 {
                                               Index.L0_3
                                               -> GHC.Types.I#
                                                    (GHC.Prim.+#
                                                       (GHC.Prim.+#
                                                          21#
                                                          (GHC.Prim.*#
                                                             (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                             4#))
                                                       1#)
                                               Index.L1_3
                                               -> GHC.Types.I#
                                                    (GHC.Prim.+#
                                                       (GHC.Prim.+#
                                                          21#
                                                          (GHC.Prim.*#
                                                             (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                             4#))
                                                       2#)
                                               Index.L2_3
                                               -> GHC.Types.I#
                                                    (GHC.Prim.+#
                                                       (GHC.Prim.+#
                                                          21#
                                                          (GHC.Prim.*#
                                                             (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                             4#))
                                                       3#)
                                               Index.L3_3
                                               -> GHC.Types.I#
                                                    (GHC.Prim.+#
                                                       (GHC.Prim.+#
                                                          21#
                                                          (GHC.Prim.*#
                                                             (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                             4#))
                                                       4#) } } } })
                                  (GHC.Types.[] @ GHC.Types.Int)))
                            w of wild1 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# 316# y) }) })
                   ww) -}
fecf8a464085247eb2e407faea58558a
  $wmkEqnSparseAnsatzAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational) ->
                 AnsatzEqns2.$smapKeysWith
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (Index.Index 2 2 0 0 2 1 0 0)
                   GHC.Real.$fEnumRatio_$s$c+
                   (\ (ds :: Index.Index 2 2 0 0 2 1 0 0) ->
                    case ds of wild { Index.Index dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 ->
                    (case Data.Sequence.Internal.$wlookup
                            @ Index.Uind_20
                            0#
                            dt1 of wild1 {
                       GHC.Base.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                       GHC.Base.Just x
                       -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                          case Data.Sequence.Internal.$wlookup
                                 @ Index.Uind_20
                                 1#
                                 dt1 of wild2 {
                            GHC.Base.Nothing
                            -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                            GHC.Base.Just x1
                            -> case GHC.Prim.dataToTag# @ Index.Uind_20 x1 of a#1 { DEFAULT ->
                               case Data.Sequence.Internal.$wlookup
                                      @ Index.Uind_9
                                      0#
                                      dt5 of wild3 {
                                 GHC.Base.Nothing
                                 -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                 GHC.Base.Just x2
                                 -> case GHC.Prim.dataToTag# @ Index.Uind_9 x2 of a#2 { DEFAULT ->
                                    case Data.Sequence.Internal.$wlookup
                                           @ Index.Uind_9
                                           1#
                                           dt5 of wild4 {
                                      GHC.Base.Nothing
                                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                      GHC.Base.Just x3
                                      -> case GHC.Prim.dataToTag#
                                                @ Index.Uind_9
                                                x3 of a#3 { DEFAULT ->
                                         GHC.Types.I#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.+#
                                                    (GHC.Prim.*#
                                                       (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                       2100#)
                                                    (GHC.Prim.*#
                                                       (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#)
                                                       100#))
                                                 (GHC.Prim.*#
                                                    (GHC.Prim.-# (GHC.Prim.+# 1# a#2) 1#)
                                                    10#))
                                              (GHC.Prim.+# 1# a#3)) } } } } } } } },
                     case AnsatzEqns2.$sfind1
                            @ GHC.Types.Int
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (case Data.Sequence.Internal.$wlookup
                                       @ Index.Lind_20
                                       0#
                                       dt2 of wild1 {
                                  GHC.Base.Nothing
                                  -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                  GHC.Base.Just x
                                  -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                                     GHC.Types.I# (GHC.Prim.+# 1# a#) } })
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (case Data.Sequence.Internal.$wlookup
                                          @ Index.Lind_20
                                          1#
                                          dt2 of wild1 {
                                     GHC.Base.Nothing
                                     -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                     GHC.Base.Just x
                                     -> case GHC.Prim.dataToTag#
                                               @ Index.Lind_20
                                               x of a# { DEFAULT ->
                                        case Data.Sequence.Internal.$wlookup
                                               @ Index.Lind_9
                                               0#
                                               dt6 of wild2 {
                                          GHC.Base.Nothing
                                          -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                          GHC.Base.Just x1
                                          -> case GHC.Prim.dataToTag#
                                                    @ Index.Lind_9
                                                    x1 of a#1 { DEFAULT ->
                                             GHC.Types.I#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.+#
                                                     105#
                                                     (GHC.Prim.*#
                                                        (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                        10#))
                                                  (GHC.Prim.+# 1# a#1)) } } } })
                                  (GHC.Types.[] @ GHC.Types.Int)))
                            w of wild1 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# 316# y) }) })
                   ww) -}
1a19ee8f1713806ff128f15aee62d5a7
  $wmkEqnSparseAnsatzAIBJ ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 3 2 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
d897bae0c2f662edf607e20747efc1e9
  $wmkEqnSparseAnsatzAaBI ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
15c841a554c9177ae374bb8515ee06ba
  $wmkEqnSparseAnsatzAaBb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
2954de06e78b1e9c2a0cabe7d57e1dab
  $wmkEqnSparseRemoveAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           [GHC.Types.Int] GHC.Types.Int)
                   (ww :: Data.Map.Internal.Map
                            (Index.Index 2 2 0 0 1 1 0 0) GHC.Real.Rational) ->
                 AnsatzEqns2.$smapKeysWith
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (Index.Index 2 2 0 0 1 1 0 0)
                   GHC.Real.$fEnumRatio_$s$c+
                   (\ (ds :: Index.Index 2 2 0 0 1 1 0 0) ->
                    case ds of wild { Index.Index dt1 dt2 dt3 dt4 dt5 dt6 dt7 dt8 ->
                    (case Data.Sequence.Internal.$wlookup
                            @ Index.Uind_20
                            0#
                            dt1 of wild1 {
                       GHC.Base.Nothing
                       -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                       GHC.Base.Just x
                       -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                          case Data.Sequence.Internal.$wlookup
                                 @ Index.Uind_20
                                 1#
                                 dt1 of wild2 {
                            GHC.Base.Nothing
                            -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                            GHC.Base.Just x1
                            -> case GHC.Prim.dataToTag# @ Index.Uind_20 x1 of a#1 { DEFAULT ->
                               case Data.Sequence.Internal.$wlookup
                                      @ Index.Uind_9
                                      0#
                                      dt5 of wild3 {
                                 GHC.Base.Nothing
                                 -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                 GHC.Base.Just x2
                                 -> case GHC.Prim.dataToTag# @ Index.Uind_9 x2 of a#2 { DEFAULT ->
                                    GHC.Types.I#
                                      (GHC.Prim.+#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 210#)
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#1) 1#) 10#))
                                         (GHC.Prim.+# 1# a#2)) } } } } } },
                     case AnsatzEqns2.$sfind1
                            @ GHC.Types.Int
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (case Data.Sequence.Internal.$wlookup
                                       @ Index.Lind_20
                                       0#
                                       dt2 of wild1 {
                                  GHC.Base.Nothing
                                  -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                  GHC.Base.Just x
                                  -> case GHC.Prim.dataToTag# @ Index.Lind_20 x of a# { DEFAULT ->
                                     GHC.Types.I# (GHC.Prim.+# 1# a#) } })
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (case Data.Sequence.Internal.$wlookup
                                          @ Index.Lind_20
                                          1#
                                          dt2 of wild1 {
                                     GHC.Base.Nothing
                                     -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                     GHC.Base.Just x
                                     -> case GHC.Prim.dataToTag#
                                               @ Index.Lind_20
                                               x of a# { DEFAULT ->
                                        case Data.Sequence.Internal.$wlookup
                                               @ Index.Lind_9
                                               0#
                                               dt6 of wild2 {
                                          GHC.Base.Nothing
                                          -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                                          GHC.Base.Just x1
                                          -> case GHC.Prim.dataToTag#
                                                    @ Index.Lind_9
                                                    x1 of a#1 { DEFAULT ->
                                             GHC.Types.I#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.+#
                                                     105#
                                                     (GHC.Prim.*#
                                                        (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#)
                                                        10#))
                                                  (GHC.Prim.+# 1# a#1)) } } } })
                                  (GHC.Types.[] @ GHC.Types.Int)))
                            w of wild1 { GHC.Types.I# y ->
                     GHC.Types.I# (GHC.Prim.+# 316# y) }) })
                   ww) -}
cbad6380a0f36c882916aa9d9406f9cd
  $wmkEqnSparseintCond2NoSym ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
9eb2d02dcae94080542e287f92efcc3b
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
45991e7e0bbceb74a94930b23e77dd3a
  ansatzAB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAB w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
5eb632e56e8c6d5707584866621ddb19
  ansatzAB1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB2)) -}
1f3d979861f824fa9d21bc64581da64f
  ansatzAB2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b9bced3381c56011e7fc5eb1790759a8
  ansatzAB3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB4, AnsatzEqns2.ansatzAB4)) -}
96460a941638d83aef3816fea7b24126
  ansatzAB4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
ea053074e1df8d0f9bca04c00fc4a67e
  ansatzAB5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
c0cb52b3f769530ed7a7183d2298ddc8
  ansatzAB6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB4)) -}
52ce54549eadbf41a94f94578e0f093f
  ansatzABb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzABb w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
6890376ee41bafdcae0748bdf1558f5a
  ansatzABb1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB4, AnsatzEqns2.ansatzAB2)) -}
08c7f48a0db29860aaf6f073b1367178
  ansatzABb2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((AnsatzEqns2.ansatzAB2, AnsatzEqns2.ansatzAB5)) -}
3260c64edd30a4aa2021f9bd2c760142
  ansatzABb3 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww5 } } }) -}
2475effd425bc3fa627871327f18a512
  ansatzAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAIB w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
769f223b7dd7e90cd69e1e86def3251f
  ansatzAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww5 } } }) -}
4670bb5388e4b76f6300be9945991a1f
  ansatzAIBJ ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAIBJ w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 2
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
df25aaa207235a68c6ead68e0eec79a0
  ansatzAaBI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAaBI w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
fbb62e16f7da503b32e1fac63b46b72e
  ansatzAaBb ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wansatzAaBb w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
2be12bc3d0fe18b2d8c7fe4c39f6e8f4
  intCond2NoSym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wintCond2NoSym w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
998f3943ecb3732b00042c6827b96b7b
  intCondfirstOrder ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case AnsatzEqns2.$wintCondfirstOrder w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
4fed05a88db9bfb18bbe153bd74b82fe
  intCondfirstOrder1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
361365106390d6143579e99dbc4b419f
  intCondfirstOrder2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
683e1163c317d731830dfe38d6817806
  intCondfirstOrder_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
d15e32ca531d4b358241ad9f0094dd9a
  mkEqnSparseAnsatzAB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAB w ww1 }) -}
04681e54d3d410f0468604abff4f8b47
  mkEqnSparseAnsatzABSolo ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzABSolo w ww1 }) -}
9898112bc0db0fea7df96a95b51e8b7a
  mkEqnSparseAnsatzABb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzABb w ww1 }) -}
fac61a3c51b622995027bb1cff844a4c
  mkEqnSparseAnsatzAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAIB w ww1 }) -}
10e39db1927f9bf2fe814bc1c21d968c
  mkEqnSparseAnsatzAIBJ ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 3 2 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAIBJ w ww1 }) -}
d0ee95213aed0a18739d630dd32f8471
  mkEqnSparseAnsatzAaBI ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 2 1 1 1 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAaBI w ww1 }) -}
1ac5bed6164bc7b17cf31df36c5a3059
  mkEqnSparseAnsatzAaBb ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzAaBb w ww1 }) -}
3f17a0049c59d637386ecec7e9716cf9
  mkEqnSparseRemoveAIB ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseRemoveAIB w ww1 }) -}
e6121af07ea8b807e6fa0790c5d32ac0
  mkEqnSparsefirstOrder ::
    Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 0 1 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 AnsatzEqns2.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (AnsatzEqns2.mkEqnSparsefirstOrder_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
07f8eed2ba356750bd45559bd22d2589
  mkEqnSparsefirstOrder_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
c4fb123d243c9f8ffce843a32d5a0791
  mkEqnSparseintCond2NoSym ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 AnsatzEqns2.$wmkEqnSparseintCond2NoSym w ww1 }) -}
d561c7b4743239af876c4485511b20e2
  removeAIB :: Tensor.Tensor 2 2 0 0 1 1 0 0 GHC.Real.Rational
  {- Unfolding: InlineRule (0, True, True)
                AnsatzEqns2.removeAIB1
                  `cast`
                (Tensor.Tensor
                   (AddDef (<1>_N, <1>_N))
                   (AddDef (<1>_N, <1>_N))
                   (Add0L (<0>_N))
                   (Add0L (<0>_N))
                   (Add0L (<1>_N))
                   (Add0L (<1>_N))
                   (Add0L (<0>_N))
                   (Add0L (<0>_N))
                   <GHC.Real.Rational>_R)_R -}
4579f1fd3613c80ede2ee211d3bcdc89
  removeAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<1>_N))
                              (Add0R (<1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 Tensor.Tensor
                   @ (1 GHC.TypeNats.+ 1)
                   @ (1 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww8 } } } }) -}
"SPEC/AnsatzEqns2 fromList @ (Int, Int) _" [orphan] forall @ a
                                                           ($dOrd :: GHC.Classes.Ord
                                                                       (GHC.Types.Int,
                                                                        GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = AnsatzEqns2.$sfromList @ a
"SPEC/AnsatzEqns2 mapKeysWith @ (Int, Int) _ _" [orphan] forall @ a
                                                                @ k1
                                                                ($dOrd :: GHC.Classes.Ord
                                                                            (GHC.Types.Int,
                                                                             GHC.Types.Int))
  Data.Map.Internal.mapKeysWith @ (GHC.Types.Int, GHC.Types.Int)
                                @ a
                                @ k1
                                $dOrd
  = AnsatzEqns2.$smapKeysWith @ a @ k1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

