
==================== FINAL INTERFACE ====================
2019-01-31 12:58:21.071736 UTC

interface main:Order2Int [hpc] 8043
  interface hash: 7cb8a010f710207e0f3264eb739bbb3e
  ABI hash: 3f1e008bde0197c43b2315225980a6f4
  export-list hash: 4f623a5f2457420a1860ede7998dab4e
  orphan hash: 2eddf06b8aee8c3a01cefc8b4fed0782
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Order2Int.ansatzAB2
  Order2Int.ansatzABb2
  Order2Int.ansatzAI2
  Order2Int.ansatzAIB2
  Order2Int.intAB1
  Order2Int.intAB2
  Order2Int.intAI
  Order2Int.intAIB
  Order2Int.intAIBsym
  Order2Int.intAIBsymRed
  Order2Int.intAIBsymZero
  Order2Int.mkEqnSparseAnsatzAB2
  Order2Int.mkEqnSparseAnsatzABb2
  Order2Int.mkEqnSparseAnsatzAI2
  Order2Int.mkEqnSparseAnsatzAIB2
  Order2Int.mkEqnSparseIntAB
  Order2Int.mkEqnSparseIntABTrian
  Order2Int.mkEqnSparseIntAI
  Order2Int.mkEqnSparseIntAIB
  Order2Int.mkEqnSparseIntAIBsym
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors 37af3f9a8fd59a713f944ac004973e4c
  exports: a936cd94aa71589de0ffe8aa62c98d1e
  aSymI_2 eeff560e74087b636ad919718b07ce3c
  delta_20 c71cb81705e6e5d5901bcbd1e22180d6
  delta_3 8cc1e4b8317d66d7eca659c350329b06
  delta_9 d5d21d803cfeb6cb976912320b26274f
  flatArea fbe15ed48c6fdb6adf67a8daa949019a
  interArea c20342d63b6344034b01aaa2ac26950f
  interEqn1_2 db36d6110c82f1d673fc4c0425276420
  interEqn1_3 57ab473d41cec6be447a5d9ae4521d74
  interI_2 153215576aaafca59336b29ab4fe62f8
  interMetric f1cf0ef1e6072ffb4b1cd47c2e48f159
  invEta 52347259ce29e9b051664d61ef567a63
import  -/  EquivarianceEqns 024c09c474101d82ccea2ae493ef0935
  exports: 753233c47284511068d96a6925317f46
import  -/  Index 71b3346044a1d0e00e59251850573a46
  exports: 91057ce0b804927200140466044aa77d
  Index 1f5ddc4679c562a7168aef180062eec5
  Lind_20 06537182db1996ed045a0cd1b89858a5
  Lind_9 7ecf2cdb519ad8d35de36386b0078158
  Linds_3 e889a76254b9568bcd306a682aa34a7e
  Uind_20 4bc2e2d710a65926fc1cbc6f81e36f73
  Uind_9 d3fbf44c59cbc2b93a3471d3308e9718
  Uinds_3 a3598cb2e3c7e8040d14aca7e8d357c5
  getValInd 5c90c661410f5cfc2f14176d2316e42c
import  -/  Ivar 40f81219a01d4a021d2869f9c4ec8065
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde ee46c0f08935aa69c73c37bcf3103bae
  exports: 5f26c9b1fc31234bc17b520659bce428
import  -/  Tensor a23a73880b2c27c94d4da0de54dee0ec
  exports: 652d5857d480c465fdf5ba71dcde1677
  Tensor 4b013267227da1ee7744d7e5a0036bd0
  Tensor ba59d8983dc93fba3a30d24b40148bfb
  tensorAdd ffa73e4d3d0d9f351f17926e90320c54
  tensorContractWith_20 a25204e5f61a8dd7bfafd0d945b634e9
  tensorContractWith_3 60512091e70a83c1aec3d9e0e69c4150
  tensorContractWith_9 17704f82cb10b47cfa0e901d1235c311
  tensorProductNew 548434962972d37edcccd79688b96ede
  tensorProductNumeric 3ceb169d18bc856c3b8ab815fcf92212
  tensorProductWith ba6be009bb6b7b464027f29968945a62
  tensorSub fa755c70900c56cb9228bd5f8e3cb8d5
  tensorTranspose 5419f653b93e8002279716673d331d33
9454ffcbe24511887d1761e752c76741
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
a24bbf27fe3d92f55e749e2e2c12dd8c
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Order2Int.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Order2Int.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Order2Int.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Order2Int.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
1774007689dafba0880e6f6eb35bb763
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
bfc896010999d4de105498c4609142f0
  $smapKeysWith ::
    (a -> a -> a)
    -> (k1 -> (GHC.Types.Int, GHC.Types.Int))
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   @ k1
                   (c :: a -> a -> a)
                   (f :: k1 -> (GHC.Types.Int, GHC.Types.Int))
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 let {
                   f1 :: (GHC.Types.Int, GHC.Types.Int) -> a -> a -> a
                     {- Arity: 3, Strictness: <L,A><L,U><L,U>,
                        Unfolding: InlineRule (3, True, True)
                                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) (x1 :: a) (y :: a) ->
                                    c x1 y) -}
                   = \ (ds :: (GHC.Types.Int, GHC.Types.Int))
                       (x1 :: a)[OneShot]
                       (y :: a)[OneShot] ->
                     c x1 y
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map k1 a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, GHC.Types.Int), a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt1 kx x l r
                       -> go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, GHC.Types.Int), a)
                               (f kx, x)
                               (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 letrec {
                   go14 :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a)
                       (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                     case ds of wild {
                       [] -> z
                       : x1 xs
                       -> case x1 of wild1 { (,) k x2 ->
                          case k of ww { (,) ww1 ww2 ->
                          case Order2Int.$w$sgo1 @ a f1 ww1 ww2 x2 z of z' { DEFAULT ->
                          go14 z' xs } } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                   (go13 (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a)) eta)) -}
a47c484069aa1d4c12b45621d4904a02
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
4df28fc68c0434571c1f14ab86838010
  $stensorContractWith_13 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_14 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
be81c448049a8fdef3e74fbc9d20c386
  $stensorContractWith_14 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
d06e516e3a3ca0d3f667f06f5eb2faf3
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
573eac4428a833dd84f1029600f0e374
  $stensorContractWith_4 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_5 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8a0b822e9285ac5611dbc4c9487e1fe0
  $stensorContractWith_5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c75294aa939b83556107f90ba45cab19
  $stensorContractWith_7 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_8 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
630f6c792a6c25b29650a692925cd407
  $stensorContractWith_8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
e902b28e4fb4e4840c3ff90d250402a5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Order2Int.$trModule3
                   Order2Int.$trModule1) -}
1adc3f2568a677c657f5829ec60dee5b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order2Int.$trModule2) -}
b20ca96df5bcc2d353b6c7577ef7b77e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Order2Int"#) -}
23165d15aa8490f6d48c2c12bd696a2d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order2Int.$trModule4) -}
0c2a9390e592b322bb4f268c38eaa719
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4e0892091f1d38623c72b62221b073d7
  $w$sgo1 ::
    ((GHC.Types.Int, GHC.Types.Int) -> a1 -> a1 -> a1)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5,
     Strictness: <L,1*C1(C1(C1(U)))><L,U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
d27a48422dfb99951a8d08bd955e7664
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
3e75f7aa3d3bb4de329f02f709b24062
  $wansatzAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Order2Int.ansatzAB2} True True} let {
                                                                     totalBlock2 :: Tensor.Tensor
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      0
                                                                                      1
                                                                                      1
                                                                                      GHC.Real.Rational
                                                                     = let {
                                                                         antiSym :: Tensor.Tensor
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      0
                                                                                      0
                                                                                      2
                                                                                      GHC.Real.Rational
                                                                         = {__scc {main:Order2Int.ansatzAB2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                  w2
                                                                       } in
                                                                       {__scc {main:Order2Int.ansatzAB2.totalBlock2} True True} case (Order2Int.ansatzAB10
                                                                                                                                        BasicTensors.invEta
                                                                                                                                        antiSym)
                                                                                                                                       `cast`
                                                                                                                                     (Tensor.Tensor
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                        (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                        <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                                                                                                                                case Tensor.$wtensorContractWith_3
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       Order2Int.$stensorContractWith_1
                                                                                                                                         `cast`
                                                                                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                       Order2Int.$stensorContractWith_1
                                                                                                                                         `cast`
                                                                                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                       Order2Int.ansatzAB9
                                                                                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                       ww1 of ww2 { Unit# ww3 ->
                                                                                                                                Tensor.Tensor
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  ww3 } }
                                                                   } in
                                                                   let {
                                                                     tens :: Tensor.Tensor
                                                                               2
                                                                               2
                                                                               0
                                                                               0
                                                                               0
                                                                               0
                                                                               1
                                                                               1
                                                                               GHC.Real.Rational
                                                                     = let {
                                                                         intArea :: Tensor.Tensor
                                                                                      1
                                                                                      1
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      1
                                                                                      GHC.Real.Rational
                                                                         = {__scc {main:Order2Int.ansatzAB2.intArea} True True} BasicTensors.interArea
                                                                                                                                  w
                                                                                                                                  w1
                                                                       } in
                                                                       case {__scc {main:Order2Int.ansatzAB2.block1} True True} Order2Int.ansatzAB8
                                                                                                                                  intArea
                                                                                                                                  BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                       {__scc {main:Order2Int.ansatzAB2.block2} True False} case {__scc {main:Order2Int.ansatzAB2.block2} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                        @ 2
                                                                                                                                                                                        @ 2
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                        Order2Int.ansatzAB7
                                                                                                                                                                                        Order2Int.ansatzAB6
                                                                                                                                                                                        ww1
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                                                                           ((,,,,,,,)
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                 <Index.Uind_20>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                 <Index.Lind_20>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Uind_19>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Lind_19>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Uind_9>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Lind_9>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                 <Index.Uind_3>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                 <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                           <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                                                                                                                            {__scc {main:Order2Int.ansatzAB2.totalBlock1} True False} case {__scc {main:Order2Int.ansatzAB2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                                  @ 2
                                                                                                                                                                                                                                                                                                  @ 2
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 1
                                                                                                                                                                                                                                                                                                  @ 1
                                                                                                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                  ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ 1)
                                                                                                                                                                                                                                                                                                                                                Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                                                                                                                                                ww1
                                                                                                                                                                                                                                                                                                                                                  `cast`
                                                                                                                                                                                                                                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                                                   ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                                                                                  <1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                                                                                  <1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                                                   <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                                                                                ww3) of ww5 { Tensor.Tensor ww6 ->
                                                                                                                                                                                      {__scc {main:Order2Int.ansatzAB2.totalBlockTrans} True False} case {__scc {main:Order2Int.ansatzAB2.totalBlockTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                         Order2Int.ansatzAB5
                                                                                                                                                                                                                                                                                                                         Order2Int.ansatzAB6
                                                                                                                                                                                                                                                                                                                         ww6 of ww7 { Unit# ww8 ->
                                                                                                                                                                                                                                                    {__scc {main:Order2Int.ansatzAB2.tens} True True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                   ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                                                                                    @ 1)
                                                                                                                                                                                                                                                                                                                                                                                                 Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                                                                                                                                                                                                 ww6
                                                                                                                                                                                                                                                                                                                                                                                                 ww8) } } } }
                                                                   } in
                                                                   ({__scc {main:Order2Int.ansatzAB2.prod} True True} Order2Int.ansatzAB4
                                                                                                                        tens
                                                                                                                        totalBlock2)
                                                                     `cast`
                                                                   (Tensor.Tensor
                                                                      (Add0R (<2>_N))
                                                                      (Add0R (<2>_N))
                                                                      (Add0L (<0>_N))
                                                                      (Add0L (<0>_N))
                                                                      (Add0L (<1>_N))
                                                                      (Add0L (<0>_N))
                                                                      <1 GHC.TypeNats.+ 1>_N
                                                                      <1 GHC.TypeNats.+ 1>_N
                                                                      <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.ansatzAB2} False True} Tensor.$wtensorContractWith_3
                                                                      @ 1
                                                                      @ 1
                                                                      @ GHC.Real.Rational
                                                                      @ 2
                                                                      @ 2
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      Order2Int.$stensorContractWith_1
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      Order2Int.$stensorContractWith_1
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      Order2Int.ansatzAB6
                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                      ww1 of ww2 { Unit# ww3 ->
                 {__scc {main:Order2Int.ansatzAB2} False True} Tensor.$wtensorContractWith_3
                                                                 @ 0
                                                                 @ 0
                                                                 @ GHC.Real.Rational
                                                                 @ 2
                                                                 @ 2
                                                                 @ 0
                                                                 @ 0
                                                                 @ 1
                                                                 @ 0
                                                                 Order2Int.$stensorContractWith_4
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 Order2Int.$stensorContractWith_4
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 Order2Int.ansatzAB1
                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                 ww3
                                                                   `cast`
                                                                 (Data.Map.Internal.Map
                                                                    ((,,,,,,,)
                                                                       <Index.Ind 2 Index.Uind_20>_N
                                                                       <Index.Ind 2 Index.Lind_20>_N
                                                                       <Index.Ind 0 Index.Uind_19>_N
                                                                       <Index.Ind 0 Index.Lind_19>_N
                                                                       <Index.Ind 1 Index.Uind_9>_N
                                                                       <Index.Ind 0 Index.Lind_9>_N
                                                                       (Index.Ind
                                                                          (Sym (Add0L (<1>_N)))
                                                                          <Index.Uind_3>_N)_N
                                                                       (Index.Ind
                                                                          (Sym (Add0L (<1>_N)))
                                                                          <Index.Lind_3>_N)_N)_N
                                                                    <GHC.Real.Rational>_R)_R } }) -}
b376531c605170e94f4f60838c5b3c3c
  $wansatzABb2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Order2Int.ansatzABb2} True True} {__scc {main:Order2Int.ansatzABb2.prod} True False} {__scc {main:Order2Int.ansatzABb2.totalBlock1} True False} {__scc {main:Order2Int.ansatzABb2.block1} True False} {__scc {main:Order2Int.ansatzABb2.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                                                                 w1 of ww { Tensor.Tensor ww1 ->
                 case Order2Int.ansatzABb4
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block1} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.int2} True True} BasicTensors.interEqn1_2
                                                                                                                          w
                                                                                                                          w1 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 2
                                                                                                                             @ 2
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww8
                                                                                                                             ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2)
                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2)
                                                                                                                                                                                                                           Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                           ww5
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                           ww12
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<2>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<2>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R) of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} True False} BasicTensors.invEta of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                             w2 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww16
                                                                                                                                  ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.ansatzAB9
                                                                                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                  ww20
                                                                                                                                    `cast`
                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                     ((,,,,,,,)
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                     <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                           ww14
                                                                                                                           ww22 of ww23 { Unit# ww24 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} Tensor.$wtensorContractWith_3
                                                                       @ 2
                                                                       @ 2
                                                                       @ GHC.Real.Rational
                                                                       @ 2
                                                                       @ 2
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 0
                                                                       Order2Int.$stensorContractWith_7
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                       Order2Int.$stensorContractWith_7
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                       Order2Int.ansatzABb3
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww24
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             <Index.Ind
                                                                                (2 GHC.TypeNats.+ 1)
                                                                                Index.Uind_3>_N
                                                                             <Index.Ind
                                                                                (2 GHC.TypeNats.+ 1)
                                                                                Index.Lind_3>_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww25 { Unit# ww26 ->
                 {__scc {main:Order2Int.ansatzABb2} False True} Tensor.$wtensorContractWith_3
                                                                  @ 1
                                                                  @ 1
                                                                  @ GHC.Real.Rational
                                                                  @ 2
                                                                  @ 2
                                                                  @ 0
                                                                  @ 0
                                                                  @ 1
                                                                  @ 0
                                                                  Order2Int.$stensorContractWith_1
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                  Order2Int.$stensorContractWith_1
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                  Order2Int.ansatzABb1
                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                  ww26
                                                                    `cast`
                                                                  (Data.Map.Internal.Map
                                                                     ((,,,,,,,)
                                                                        <Index.Ind
                                                                           2 Index.Uind_20>_N
                                                                        <Index.Ind
                                                                           2 Index.Lind_20>_N
                                                                        <Index.Ind
                                                                           0 Index.Uind_19>_N
                                                                        <Index.Ind
                                                                           0 Index.Lind_19>_N
                                                                        <Index.Ind 1 Index.Uind_9>_N
                                                                        <Index.Ind 0 Index.Lind_9>_N
                                                                        (Index.Ind
                                                                           (Sym (AddDef (<1>_N,
                                                                                         <1>_N)))
                                                                           <Index.Uind_3>_N)_N
                                                                        (Index.Ind
                                                                           (Sym (AddDef (<1>_N,
                                                                                         <1>_N)))
                                                                           <Index.Lind_3>_N)_N)_N
                                                                     <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
f9cdcbc7ee030002ed34419c66977a8e
  $wansatzAI2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.ansatzAI2} True True} {__scc {main:Order2Int.ansatzAI2.aSym} True False} BasicTensors.invEta of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} BasicTensors.aSymI_2
                                                                                                                         w2 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} Tensor.$wtensorProductWith
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                         ww1
                                                                                                                         ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} Tensor.$wtensorContractWith_3
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.ansatzAB9
                                                                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                                                                         ww5
                                                                                                                           `cast`
                                                                                                                         (Data.Map.Internal.Map
                                                                                                                            ((,,,,,,,)
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                <1>_N)))
                                                                                                                                  <Index.Uind_3>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                <1>_N)))
                                                                                                                                  <Index.Lind_3>_N)_N)_N
                                                                                                                            <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.block2} True False} {__scc {main:Order2Int.ansatzAI2.int3} True True} BasicTensors.interEqn1_3
                                                                                                                                                                             w
                                                                                                                                                                             w1
                                                                                                                                                                             w2
                                                                                                                                                                             w3 of ww9 { Tensor.Tensor ww10 ->
                 case ({__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} True False} Order2Int.ansatzAI1)
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww11 { Tensor.Tensor ww12 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.$wtensorProductWith
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                    ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                  @ (Index.Index
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       0
                                                                                                                                                                                                                       0
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                  (Tensor.aSymTensor3
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1)
                                                                                                                                                                                                                  Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                  ww12
                                                                                                                                                                                                                  ww10)
                                                                                                                                                                    ww8 of ww13 { Unit# ww14 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         @ 1
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.ansatzAB6
                                                                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                                                                         ww14
                                                                                                                           `cast`
                                                                                                                         (Data.Map.Internal.Map
                                                                                                                            ((,,,,,,,)
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                           <1>_N))
                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                               <Index.Ind
                                                                                                                                  (1
                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                  Index.Uind_3>_N
                                                                                                                               <Index.Ind
                                                                                                                                  (1
                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                  Index.Lind_3>_N)_N
                                                                                                                            <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ GHC.Real.Rational
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 2
                                                                                                                    @ 1
                                                                                                                    Order2Int.$stensorContractWith_4
                                                                                                                      `cast`
                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                    Order2Int.$stensorContractWith_4
                                                                                                                      `cast`
                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                    Order2Int.ansatzAB1
                                                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                                                    ww16
                                                                                                                      `cast`
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       ((,,,,,,,)
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Uind_20>_N
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Lind_20>_N
                                                                                                                          <Index.Ind
                                                                                                                             0
                                                                                                                             Index.Uind_19>_N
                                                                                                                          <Index.Ind
                                                                                                                             0
                                                                                                                             Index.Lind_19>_N
                                                                                                                          <Index.Ind
                                                                                                                             2
                                                                                                                             Index.Uind_9>_N
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Lind_9>_N
                                                                                                                          (Index.Ind
                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                          (Index.Ind
                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                       <GHC.Real.Rational>_R)_R } } } } } } } }) -}
0a125cc6a190eb10dc06c6da6dc1dba7
  $wansatzAIB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.ansatzAIB2} True True} {__scc {main:Order2Int.ansatzAIB2.prod} True False} {__scc {main:Order2Int.ansatzAIB2.totalBlock1} True False} {__scc {main:Order2Int.ansatzAIB2.block1} True False} {__scc {main:Order2Int.ansatzAIB2.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                                                                 w1 of ww { Tensor.Tensor ww1 ->
                 case Order2Int.ansatzAIB1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block1} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.int3} True True} BasicTensors.interEqn1_3
                                                                                                                          w
                                                                                                                          w1
                                                                                                                          w2
                                                                                                                          w3 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww8
                                                                                                                             ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1)
                                                                                                                                                                                                                           Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                           ww5
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                           ww12
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R) of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} True False} BasicTensors.invEta of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                             w2 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww16
                                                                                                                                  ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.ansatzAB9
                                                                                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                  ww20
                                                                                                                                    `cast`
                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                     ((,,,,,,,)
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                     <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                           ww14
                                                                                                                           ww22 of ww23 { Unit# ww24 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} Tensor.$wtensorContractWith_3
                                                                       @ 1
                                                                       @ 1
                                                                       @ GHC.Real.Rational
                                                                       @ 2
                                                                       @ 2
                                                                       @ 0
                                                                       @ 0
                                                                       @ 2
                                                                       @ 1
                                                                       Order2Int.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       Order2Int.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       Order2Int.ansatzAB6
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww24
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (AddDef (<1>_N,
                                                                                         <1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<1>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Uind_3>_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Lind_3>_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww25 { Unit# ww26 ->
                 {__scc {main:Order2Int.ansatzAIB2} False True} Tensor.$wtensorContractWith_3
                                                                  @ 0
                                                                  @ 0
                                                                  @ GHC.Real.Rational
                                                                  @ 2
                                                                  @ 2
                                                                  @ 0
                                                                  @ 0
                                                                  @ 2
                                                                  @ 1
                                                                  Order2Int.$stensorContractWith_4
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  Order2Int.$stensorContractWith_4
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  Order2Int.ansatzAB1
                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                  ww26
                                                                    `cast`
                                                                  (Data.Map.Internal.Map
                                                                     ((,,,,,,,)
                                                                        <Index.Ind
                                                                           2 Index.Uind_20>_N
                                                                        <Index.Ind
                                                                           2 Index.Lind_20>_N
                                                                        <Index.Ind
                                                                           0 Index.Uind_19>_N
                                                                        <Index.Ind
                                                                           0 Index.Lind_19>_N
                                                                        <Index.Ind 2 Index.Uind_9>_N
                                                                        <Index.Ind 1 Index.Lind_9>_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Uind_3>_N)_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Lind_3>_N)_N)_N
                                                                     <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
5fe3ad86ce768c7fa1ccc6c1c435b652
  $wintAB1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
03ad85ae6207e468c36433163d5e675e
  $wintAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
23f04247fd75d421c0b2aa3d54b74323
  $wintAI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.intAI} True True} {__scc {main:Order2Int.intAI.tens} True False} {__scc {main:Order2Int.intAI.block1} True False} {__scc {main:Order2Int.intAI.int3} True True} BasicTensors.interEqn1_3
                                                                                                                                                                                                               w
                                                                                                                                                                                                               w1
                                                                                                                                                                                                               w2
                                                                                                                                                                                                               w3 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} True False} BasicTensors.invEta of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} BasicTensors.interI_2
                                                                                                                w2 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} Tensor.$wtensorProductWith
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 2
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 1
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 2
                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                ww3
                                                                                                                ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} Tensor.$wtensorContractWith_3
                                                                                                                @ 1
                                                                                                                @ 1
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 1
                                                                                                                @ 0
                                                                                                                Order2Int.$stensorContractWith_1
                                                                                                                  `cast`
                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                Order2Int.$stensorContractWith_1
                                                                                                                  `cast`
                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                Order2Int.ansatzAB9
                                                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                                                ww7
                                                                                                                  `cast`
                                                                                                                (Data.Map.Internal.Map
                                                                                                                   ((,,,,,,,)
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<1>_N))
                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                       <1>_N)))
                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                       <1>_N)))
                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                   <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorProductWith
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                   ww1
                                                                                                                   ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorContractWith_3
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 2
                                                                                                                   @ 1
                                                                                                                   Order2Int.$stensorContractWith_1
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                   Order2Int.$stensorContractWith_1
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                   Order2Int.ansatzAB6
                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                   ww11
                                                                                                                     `cast`
                                                                                                                   (Data.Map.Internal.Map
                                                                                                                      ((,,,,,,,)
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0L (<0>_N))
                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0L (<0>_N))
                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (AddDef (<1>_N,
                                                                                                                                     <1>_N))
                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                         <Index.Ind
                                                                                                                            (1
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                            Index.Uind_3>_N
                                                                                                                         <Index.Ind
                                                                                                                            (1
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                            Index.Lind_3>_N)_N
                                                                                                                      <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorContractWith_3
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 2
                                                                                                                   @ 1
                                                                                                                   Order2Int.$stensorContractWith_4
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                   Order2Int.$stensorContractWith_4
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                   Order2Int.ansatzAB1
                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                   ww13
                                                                                                                     `cast`
                                                                                                                   (Data.Map.Internal.Map
                                                                                                                      ((,,,,,,,)
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Uind_20>_N
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Lind_20>_N
                                                                                                                         <Index.Ind
                                                                                                                            0
                                                                                                                            Index.Uind_19>_N
                                                                                                                         <Index.Ind
                                                                                                                            0
                                                                                                                            Index.Lind_19>_N
                                                                                                                         <Index.Ind
                                                                                                                            2
                                                                                                                            Index.Uind_9>_N
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Lind_9>_N
                                                                                                                         (Index.Ind
                                                                                                                            (Sym (Add0L (<1>_N)))
                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Sym (Add0L (<1>_N)))
                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                      <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorProductWith
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 2
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 2
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                 ww15
                                                                                                                 ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorContractWith_20
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 4
                                                                                                                 @ 2
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.ansatzAB6
                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                 ww17
                                                                                                                   `cast`
                                                                                                                 (Data.Map.Internal.Map
                                                                                                                    ((,,,,,,,)
                                                                                                                       <Index.Ind
                                                                                                                          (1
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                          Index.Uind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          (1
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                          Index.Lind_20>_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (AddDef (<2>_N,
                                                                                                                                   <2>_N))
                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (AddDef (<1>_N,
                                                                                                                                   <1>_N))
                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                    <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorContractWith_9
                                                                                                                 @ 3
                                                                                                                 @ 1
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 Order2Int.$stensorContractWith_13
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.ansatzAB6
                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                 ww19
                                                                                                                   `cast`
                                                                                                                 (Data.Map.Internal.Map
                                                                                                                    ((,,,,,,,)
                                                                                                                       <Index.Ind
                                                                                                                          1
                                                                                                                          Index.Uind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          1
                                                                                                                          Index.Lind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Uind_19>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Lind_19>_N
                                                                                                                       (Index.Ind
                                                                                                                          (Sym (AddDef (<3>_N,
                                                                                                                                        <1>_N)))
                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Sym (AddDef (<1>_N,
                                                                                                                                        <1>_N)))
                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Uind_3>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Lind_3>_N)_N
                                                                                                                    <GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tensTrans} True True} Tensor.$wtensorTranspose
                                                                                                                     @ 1
                                                                                                                     @ 1
                                                                                                                     @ 0
                                                                                                                     @ 0
                                                                                                                     @ 3
                                                                                                                     @ 1
                                                                                                                     @ 0
                                                                                                                     @ 0
                                                                                                                     @ GHC.Real.Rational
                                                                                                                     Order2Int.intAI1
                                                                                                                     Order2Int.ansatzABb3
                                                                                                                     ww21 of ww22 { Unit# ww23 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True False} Tensor.Tensor
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 3
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                                                                                            ({__scc {main:Tensor.fmap} False True} Order2Int.intAI_go8
                                                                                                                                                                                                                                                                                     ww23) of ww24 { Tensor.Tensor ww25 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                        @ 1
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 3
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                      @ (Index.Index
                                                                                                                                                                                                           1
                                                                                                                                                                                                           1
                                                                                                                                                                                                           0
                                                                                                                                                                                                           0
                                                                                                                                                                                                           3
                                                                                                                                                                                                           1
                                                                                                                                                                                                           0
                                                                                                                                                                                                           0)
                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                      (Tensor.aSymTensor3
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 3
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 0)
                                                                                                                                                                                                      Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                      ww21
                                                                                                                                                                                                      ww25) of ww26 { Tensor.Tensor ww27 ->
                 (# ww27 #) } } } } } } } } } } } } } }) -}
f6d22e7b2a586900c755a3ba2615dc6d
  $wintAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
1830f5ed55a15efbc1bd67486465dd8c
  $wintAIBsym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
36680aef565fa37d6ec885a9b0aecfdd
  $wintAIBsymRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
8cc7b33040a92619c049e4ae9e91321a
  $wintAIBsymZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
fb3c831a24d44f682709e420635e7988
  $wmkEqnSparseIntABTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
0139a760e4d0d6f7aec3bb768d71a3e2
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
0a62b7e009f04d9432cde2900f87e28c
  ansatzAB1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB3)) -}
ba7280966c34098dd302e5c215884683
  ansatzAB10 ::
    Tensor.Tensor 0 0 0 0 0 0 2 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 1 0 0 2 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.totalBlock2} False True} Tensor.tensorProductNumeric
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                           GHC.Real.$fOrdRatio_$s$fEqRatio) -}
84c799a1e8fab6a173cd42c384602af2
  ansatzAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAB2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
9dc224180822f845b5234c6a7bc96720
  ansatzAB2_lvl19 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:Tensor.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
b071c954c59e4f33816e30ba8165da45
  ansatzAB3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
4b0097f8c1f3b2a76dcac44a346570d0
  ansatzAB4 ::
    Tensor.Tensor 2 2 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 1 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (2 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.prod} False True} Tensor.tensorProductNumeric
                                                                                                                    @ GHC.Real.Rational
                                                                                                                    @ 2
                                                                                                                    @ 2
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                    GHC.Real.$fOrdRatio_$s$fEqRatio) -}
9a45ae595c49529a10ad49d4bfc5c894
  ansatzAB5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
6b910c541d78ffda0da8a4c021c9e6f2
  ansatzAB6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB7)) -}
0dfe83b0ae95b1e4ed0200a84e54ea79
  ansatzAB7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
e5bfb227f680ce282d40a28932df7e02
  ansatzAB8 ::
    Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.block1} False True} Tensor.tensorProductNumeric
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                      GHC.Real.$fOrdRatio_$s$fEqRatio) -}
dfcac6b615d9b1f97f5d3149c7991fd5
  ansatzAB9 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB7, Order2Int.ansatzAB7)) -}
2110d41abad4d0f41f88514bc1ada064
  ansatzABb1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB7, Order2Int.ansatzAB3)) -}
1efc3787bd9ddae0bf245a4fdcb96d24
  ansatzABb2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzABb2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
262aec93a9e3cf6d82ae5ad5f6f8d78f
  ansatzABb3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB5)) -}
1ddd5dcb300556dae29d2ca78a1e4735
  ansatzABb4 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                      case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                      case Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                                                                                                                      Tensor.Tensor
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ GHC.Real.Rational
                                                                                                                        ww5 } } }) -}
70884343448957c9f7cab792c8df18c8
  ansatzAI1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.block1} True True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                   case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                   case BasicTensors.delta_3 of ww4 { Tensor.Tensor ww5 ->
                                                                                                                   case Tensor.$wtensorProductWith
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                          ww3
                                                                                                                          ww5 of ww6 { Unit# ww7 ->
                                                                                                                   case Tensor.$wtensorProductWith
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                          ww1
                                                                                                                          ww7
                                                                                                                            `cast`
                                                                                                                          (Data.Map.Internal.Map
                                                                                                                             ((,,,,,,,)
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                             <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                                                                                                                   Tensor.Tensor
                                                                                                                     @ (1
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (1
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ GHC.Real.Rational
                                                                                                                     ww9 } } } } }) -}
310b812dff297cea632bb2694319d889
  ansatzAI2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAI2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
d1bb184196142b8040991459deb75278
  ansatzAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                      case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                      case Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                                                                                                                      Tensor.Tensor
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ GHC.Real.Rational
                                                                                                                        ww5 } } }) -}
6c5aea29a5db6afef655e2f285d13bf3
  ansatzAIB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAIB2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
878becb5172afbdc318a11d724598496
  intAB1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAB1 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
0fa59dd84bb4bf92377d3e3e6bbc0c98
  intAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAB2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
2853cdee7ddda6791bb6ae30c4335740
  intAI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAI w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
dcfd9b056e1e67833645cac5e6e9ae40
  intAI1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
0ab0c0b6319fed293473bc73daec3423
  intAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIB w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
bd5fd252e42e5f4bbd2b5200e2bc64e3
  intAIBsym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsym w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f79ca75a8ada01cbaf8e86fd28d241f3
  intAIBsymRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsymRed w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
1898ad0a4afaaa20916a40bf7d1e393b
  intAIBsymZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsymZero w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
fe0605f72e39b4205a766ccae129d5b4
  intAI_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
38cf128a8da05c999574f59e1390f4ec
  mkEqnSparseAnsatzAB2 ::
    Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAB2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseAnsatzAB2_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
e59e2a5a562cb57ea45c60c6477afbaa
  mkEqnSparseAnsatzAB2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
768d92f8f40de6cdfd49cdf3bfd18d0d
  mkEqnSparseAnsatzABb2 ::
    Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzABb2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Order2Int.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Order2Int.mkEqnSparseAnsatzABb2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
8259d73593eb7bcc039a0aab2840490d
  mkEqnSparseAnsatzABb2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
41230acda96382ced44a5951dc078f67
  mkEqnSparseAnsatzAI2 ::
    Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAI2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseAnsatzAI2_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
5f2b7c8c77c12518723c856b637832de
  mkEqnSparseAnsatzAI2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
f3549820cb5a83773de6fadd61ea06a6
  mkEqnSparseAnsatzAIB2 ::
    Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAIB2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Order2Int.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Order2Int.mkEqnSparseAnsatzAIB2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
15343bba5249a453e86b60bbb2d944dd
  mkEqnSparseAnsatzAIB2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
162d13bef0d84fd4b0e1a1f70ef10233
  mkEqnSparseIntAB ::
    Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAB} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                     Order2Int.$sfromList
                                                                       @ (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                       (Order2Int.mkEqnSparseIntAB_go13
                                                                          (GHC.Types.[]
                                                                             @ ((GHC.Types.Int,
                                                                                 GHC.Types.Int),
                                                                                GHC.Real.Rational))
                                                                          map1) }) -}
71ea1040c4c31c744200b2d72fbba805
  mkEqnSparseIntABTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order2Int.$wmkEqnSparseIntABTrian w ww1 }) -}
0d8d97de4eecaa8f8e176cba9765599e
  mkEqnSparseIntAB_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
eb4e596fa2b8e3efcd106af5aac8d4b5
  mkEqnSparseIntAI ::
    Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAI} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                     Order2Int.$sfromList
                                                                       @ (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                       (Order2Int.mkEqnSparseIntAI_go13
                                                                          (GHC.Types.[]
                                                                             @ ((GHC.Types.Int,
                                                                                 GHC.Types.Int),
                                                                                GHC.Real.Rational))
                                                                          map1) }) -}
4a805f0edfd7b37d1896388bd45b4057
  mkEqnSparseIntAIB ::
    Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAIB} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                      Order2Int.$sfromList
                                                                        @ (GHC.Real.Ratio
                                                                             GHC.Integer.Type.Integer)
                                                                        (Order2Int.mkEqnSparseIntAIB_go13
                                                                           (GHC.Types.[]
                                                                              @ ((GHC.Types.Int,
                                                                                  GHC.Types.Int),
                                                                                 GHC.Real.Rational))
                                                                           map1) }) -}
78b5d9b9a67b062d425e3513c8f4cd37
  mkEqnSparseIntAIB_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
d5fc0f539b2646bb15ef5543865a065c
  mkEqnSparseIntAIBsym ::
    Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAIBsym} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseIntAIBsym_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
473f0c7c713d11e63a6c038ec03aea10
  mkEqnSparseIntAIBsym_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
e234f3caeea70c25f8bec6cfcf8960d4
  mkEqnSparseIntAI_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/Order2Int fromList @ (Int, Int) _" [orphan] forall @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (GHC.Types.Int, GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Order2Int.$sfromList @ a
"SPEC/Order2Int mapKeysWith @ (Int, Int) _ _" [orphan] forall @ a
                                                              @ k1
                                                              ($dOrd :: GHC.Classes.Ord
                                                                          (GHC.Types.Int,
                                                                           GHC.Types.Int))
  Data.Map.Internal.mapKeysWith @ (GHC.Types.Int, GHC.Types.Int)
                                @ a
                                @ k1
                                $dOrd
  = Order2Int.$smapKeysWith @ a @ k1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

