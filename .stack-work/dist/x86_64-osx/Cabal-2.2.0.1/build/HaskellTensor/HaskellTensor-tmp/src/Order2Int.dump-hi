
==================== FINAL INTERFACE ====================
2019-01-30 13:11:53.710179 UTC

interface main:Order2Int [hpc] 8043
  interface hash: 52a222c0454f177a4341283b35722521
  ABI hash: 5dba99e4165f7c19d738ddc3862bb08c
  export-list hash: 4f623a5f2457420a1860ede7998dab4e
  orphan hash: 2eddf06b8aee8c3a01cefc8b4fed0782
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Order2Int.ansatzAB2
  Order2Int.ansatzABb2
  Order2Int.ansatzAI2
  Order2Int.ansatzAIB2
  Order2Int.intAB1
  Order2Int.intAB2
  Order2Int.intAI
  Order2Int.intAIB
  Order2Int.intAIBsym
  Order2Int.intAIBsymRed
  Order2Int.intAIBsymZero
  Order2Int.mkEqnSparseAnsatzAB2
  Order2Int.mkEqnSparseAnsatzABb2
  Order2Int.mkEqnSparseAnsatzAI2
  Order2Int.mkEqnSparseAnsatzAIB2
  Order2Int.mkEqnSparseIntAB
  Order2Int.mkEqnSparseIntABTrian
  Order2Int.mkEqnSparseIntAI
  Order2Int.mkEqnSparseIntAIB
  Order2Int.mkEqnSparseIntAIBsym
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors 10d18b2ce638ae10d6a88a26bebb82b9
  exports: 7c8d1234970990518faafb72d526964b
  aSymI_2 85ef27182fd5be5c32fb0eefff56334c
  delta_20 c0e4c26d2fb8c55c0d3ea155727595af
  delta_3 cc3f1185dcff4f25aea5e08989d6c16e
  delta_9 740447499625393bd14a76aab4e324d9
  flatArea 48543a7405251d520517921354f55ae2
  interArea 90f14268a72e96159f031ea9427cca4c
  interEqn1_2 abbb47cc9f47dba5309bcd162a9cc2fe
  interEqn1_3 4fd71460d3b8e42a3c0fcf0ab5e11aa3
  interI_2 c9274fd090dd1ff7e0c7a99988e8a81b
  interMetric 7db7d299686f087b3806b2e2350a2742
  invEta 3bf1d6bd9509f7bed3ec3eb59c246f11
import  -/  EquivarianceEqns dd96df3600b28dc762b4aebca6600b59
  exports: 753233c47284511068d96a6925317f46
import  -/  Index 916735ab1c970e74aca1c88789549127
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index 22167b41613659637ef6194e34bf67d1
  Lind_20 5cac02519d44dca311f6e8704af0dab2
  Lind_9 73aca7325a4de01fdae5b6543362ad8f
  Linds_3 c9b2d4e9731309292bed9f6cde6d0fbe
  Uind_20 15d31188056502dc8c3e5921dd9b7dea
  Uind_9 f9351646ec069dfd583f698aca259967
  Uinds_3 fbf4f6c082947ccf71014b6f1ec9eea9
  getValInd 3f51e2c032700e0fcd321ef49dd3c1af
import  -/  Ivar 40f81219a01d4a021d2869f9c4ec8065
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde ee46c0f08935aa69c73c37bcf3103bae
  exports: 5f26c9b1fc31234bc17b520659bce428
import  -/  Tensor 649e40ce171c799ca6fc6d5773952aeb
  exports: d17f89ed15067c3352c7cc8d833615c2
  Tensor 120523ca9bc20437192d5f7ced440d49
  Tensor 6b073edeec5c0fb2159f4bff97d6ec2b
  tensorAdd f770dcf57b02f906c49e668881f8cb3e
  tensorContractWith_20 bedafdf0bbadff9f9680929a3ff0ec35
  tensorContractWith_3 553870f1abeb22fca19ee1dd0833949e
  tensorContractWith_9 c3ca78c71aafdd77baeff0c8078ab4b6
  tensorProductNew 43926951cec707828ccafb7c3b75a2c9
  tensorProductNumeric acac16e21b94dd390f703f4e8bcdf84d
  tensorProductWith 88519887641d1c05cbb72a78550a017e
  tensorSub c614a56cefded5d05cb9230ce87953a9
  tensorTranspose b0a00ee1f17a26733ecbcaa1f813dc61
9454ffcbe24511887d1761e752c76741
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
a24bbf27fe3d92f55e749e2e2c12dd8c
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Order2Int.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Order2Int.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Order2Int.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Order2Int.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
1774007689dafba0880e6f6eb35bb763
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
bfc896010999d4de105498c4609142f0
  $smapKeysWith ::
    (a -> a -> a)
    -> (k1 -> (GHC.Types.Int, GHC.Types.Int))
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   @ k1
                   (c :: a -> a -> a)
                   (f :: k1 -> (GHC.Types.Int, GHC.Types.Int))
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 let {
                   f1 :: (GHC.Types.Int, GHC.Types.Int) -> a -> a -> a
                     {- Arity: 3, Strictness: <L,A><L,U><L,U>,
                        Unfolding: InlineRule (3, True, True)
                                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) (x1 :: a) (y :: a) ->
                                    c x1 y) -}
                   = \ (ds :: (GHC.Types.Int, GHC.Types.Int))
                       (x1 :: a)[OneShot]
                       (y :: a)[OneShot] ->
                     c x1 y
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map k1 a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, GHC.Types.Int), a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt1 kx x l r
                       -> go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, GHC.Types.Int), a)
                               (f kx, x)
                               (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 letrec {
                   go14 :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a)
                       (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                     case ds of wild {
                       [] -> z
                       : x1 xs
                       -> case x1 of wild1 { (,) k x2 ->
                          case k of ww { (,) ww1 ww2 ->
                          case Order2Int.$w$sgo1 @ a f1 ww1 ww2 x2 z of z' { DEFAULT ->
                          go14 z' xs } } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                   (go13 (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a)) eta)) -}
a47c484069aa1d4c12b45621d4904a02
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
4df28fc68c0434571c1f14ab86838010
  $stensorContractWith_13 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_14 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
be81c448049a8fdef3e74fbc9d20c386
  $stensorContractWith_14 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
d06e516e3a3ca0d3f667f06f5eb2faf3
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
573eac4428a833dd84f1029600f0e374
  $stensorContractWith_4 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_5 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8a0b822e9285ac5611dbc4c9487e1fe0
  $stensorContractWith_5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c75294aa939b83556107f90ba45cab19
  $stensorContractWith_7 :: GHC.Natural.Natural
  {- Unfolding: (case Order2Int.$stensorContractWith_8 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
630f6c792a6c25b29650a692925cd407
  $stensorContractWith_8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
e902b28e4fb4e4840c3ff90d250402a5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Order2Int.$trModule3
                   Order2Int.$trModule1) -}
1adc3f2568a677c657f5829ec60dee5b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order2Int.$trModule2) -}
b20ca96df5bcc2d353b6c7577ef7b77e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Order2Int"#) -}
23165d15aa8490f6d48c2c12bd696a2d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order2Int.$trModule4) -}
0c2a9390e592b322bb4f268c38eaa719
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4e0892091f1d38623c72b62221b073d7
  $w$sgo1 ::
    ((GHC.Types.Int, GHC.Types.Int) -> a1 -> a1 -> a1)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5,
     Strictness: <L,1*C1(C1(C1(U)))><L,U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
d27a48422dfb99951a8d08bd955e7664
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
ec16abf0057c773f5215d605c30e2faf
  $wansatzAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Order2Int.ansatzAB2} True True} let {
                                                                     totalBlock2 :: Tensor.Tensor
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      0
                                                                                      1
                                                                                      1
                                                                                      GHC.Real.Rational
                                                                     = let {
                                                                         antiSym :: Tensor.Tensor
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      0
                                                                                      0
                                                                                      2
                                                                                      GHC.Real.Rational
                                                                         = {__scc {main:Order2Int.ansatzAB2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                                  w2
                                                                       } in
                                                                       {__scc {main:Order2Int.ansatzAB2.totalBlock2} True True} case (Order2Int.ansatzAB10
                                                                                                                                        BasicTensors.invEta
                                                                                                                                        antiSym)
                                                                                                                                       `cast`
                                                                                                                                     (Tensor.Tensor
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0L (<1>_N))
                                                                                                                                        (Add0L (<0>_N))
                                                                                                                                        (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                        (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                      <1>_N)))
                                                                                                                                        <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                                                                                                                                case Tensor.$wtensorContractWith_3
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       Order2Int.$stensorContractWith_1
                                                                                                                                         `cast`
                                                                                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                       Order2Int.$stensorContractWith_1
                                                                                                                                         `cast`
                                                                                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                       Order2Int.ansatzAB9
                                                                                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                       ww1 of ww2 { Unit# ww3 ->
                                                                                                                                Tensor.Tensor
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  ww3 } }
                                                                   } in
                                                                   let {
                                                                     tens :: Tensor.Tensor
                                                                               2
                                                                               2
                                                                               0
                                                                               0
                                                                               0
                                                                               0
                                                                               1
                                                                               1
                                                                               GHC.Real.Rational
                                                                     = let {
                                                                         intArea :: Tensor.Tensor
                                                                                      1
                                                                                      1
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      1
                                                                                      GHC.Real.Rational
                                                                         = {__scc {main:Order2Int.ansatzAB2.intArea} True True} BasicTensors.interArea
                                                                                                                                  w
                                                                                                                                  w1
                                                                       } in
                                                                       case {__scc {main:Order2Int.ansatzAB2.block1} True True} Order2Int.ansatzAB8
                                                                                                                                  intArea
                                                                                                                                  BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                       {__scc {main:Order2Int.ansatzAB2.block2} True False} case {__scc {main:Order2Int.ansatzAB2.block2} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                        @ 2
                                                                                                                                                                                        @ 2
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                        Order2Int.ansatzAB7
                                                                                                                                                                                        Order2Int.ansatzAB6
                                                                                                                                                                                        ww1
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Data.Map.Internal.Map
                                                                                                                                                                                           ((,,,,,,,)
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                 <Index.Uind_20>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (AddDef (<1>_N,
                                                                                                                                                                                                          <1>_N))
                                                                                                                                                                                                 <Index.Lind_20>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Uind_19>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Lind_19>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Uind_9>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0L (<0>_N))
                                                                                                                                                                                                 <Index.Lind_9>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                 <Index.Uind_3>_N)_N
                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                 (Add0R (<1>_N))
                                                                                                                                                                                                 <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                           <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                                                                                                                            {__scc {main:Order2Int.ansatzAB2.totalBlock1} True False} case {__scc {main:Order2Int.ansatzAB2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                                  @ 2
                                                                                                                                                                                                                                                                                                  @ 2
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 0
                                                                                                                                                                                                                                                                                                  @ 1
                                                                                                                                                                                                                                                                                                  @ 1
                                                                                                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                  ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ 1)
                                                                                                                                                                                                                                                                                                                                                Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                                                                                                                                                ww1
                                                                                                                                                                                                                                                                                                                                                  `cast`
                                                                                                                                                                                                                                                                                                                                                (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                                                                                   ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                                                                                  <1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                                                                                  <1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                                                                      (Index.Ind
                                                                                                                                                                                                                                                                                                                                                         (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                                                                                   <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                                                                                ww3) of ww5 { Tensor.Tensor ww6 ->
                                                                                                                                                                                      {__scc {main:Order2Int.ansatzAB2.totalBlockTrans} True False} case {__scc {main:Order2Int.ansatzAB2.totalBlockTrans} False True} Tensor.$wtensorTranspose
                                                                                                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                         Order2Int.ansatzAB5
                                                                                                                                                                                                                                                                                                                         Order2Int.ansatzAB6
                                                                                                                                                                                                                                                                                                                         ww6 of ww7 { Unit# ww8 ->
                                                                                                                                                                                                                                                    {__scc {main:Order2Int.ansatzAB2.tens} True True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                   ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                                                                                                                                                                                    @ 1)
                                                                                                                                                                                                                                                                                                                                                                                                 Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                                                                                                                                                                                                 ww6
                                                                                                                                                                                                                                                                                                                                                                                                 ww8) } } } }
                                                                   } in
                                                                   ({__scc {main:Order2Int.ansatzAB2.prod} True True} Order2Int.ansatzAB4
                                                                                                                        tens
                                                                                                                        totalBlock2)
                                                                     `cast`
                                                                   (Tensor.Tensor
                                                                      (Add0R (<2>_N))
                                                                      (Add0R (<2>_N))
                                                                      (Add0L (<0>_N))
                                                                      (Add0L (<0>_N))
                                                                      (Add0L (<1>_N))
                                                                      (Add0L (<0>_N))
                                                                      <1 GHC.TypeNats.+ 1>_N
                                                                      <1 GHC.TypeNats.+ 1>_N
                                                                      <GHC.Real.Rational>_R)_R of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.ansatzAB2} False True} Tensor.$wtensorContractWith_3
                                                                      @ 1
                                                                      @ 1
                                                                      @ GHC.Real.Rational
                                                                      @ 2
                                                                      @ 2
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      Order2Int.$stensorContractWith_1
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      Order2Int.$stensorContractWith_1
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      Order2Int.ansatzAB6
                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                      ww1 of ww2 { Unit# ww3 ->
                 {__scc {main:Order2Int.ansatzAB2} False True} Tensor.$wtensorContractWith_3
                                                                 @ 0
                                                                 @ 0
                                                                 @ GHC.Real.Rational
                                                                 @ 2
                                                                 @ 2
                                                                 @ 0
                                                                 @ 0
                                                                 @ 1
                                                                 @ 0
                                                                 Order2Int.$stensorContractWith_4
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 Order2Int.$stensorContractWith_4
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 Order2Int.ansatzAB1
                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                 ww3
                                                                   `cast`
                                                                 (Data.Map.Internal.Map
                                                                    ((,,,,,,,)
                                                                       <Index.Ind 2 Index.Uind_20>_N
                                                                       <Index.Ind 2 Index.Lind_20>_N
                                                                       <Index.Ind 0 Index.Uind_19>_N
                                                                       <Index.Ind 0 Index.Lind_19>_N
                                                                       <Index.Ind 1 Index.Uind_9>_N
                                                                       <Index.Ind 0 Index.Lind_9>_N
                                                                       (Index.Ind
                                                                          (Sym (Add0L (<1>_N)))
                                                                          <Index.Uind_3>_N)_N
                                                                       (Index.Ind
                                                                          (Sym (Add0L (<1>_N)))
                                                                          <Index.Lind_3>_N)_N)_N
                                                                    <GHC.Real.Rational>_R)_R } }) -}
e55dda79575989c831b8ca18f99263c3
  $wansatzABb2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9) ->
                 case {__scc {main:Order2Int.ansatzABb2} True True} {__scc {main:Order2Int.ansatzABb2.prod} True False} {__scc {main:Order2Int.ansatzABb2.totalBlock1} True False} {__scc {main:Order2Int.ansatzABb2.block1} True False} {__scc {main:Order2Int.ansatzABb2.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                                                                 w1 of ww { Tensor.Tensor ww1 ->
                 case Order2Int.ansatzABb4
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block1} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.int2} True True} BasicTensors.interEqn1_2
                                                                                                                          w
                                                                                                                          w1 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 2
                                                                                                                             @ 2
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww8
                                                                                                                             ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2)
                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2)
                                                                                                                                                                                                                           Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                           ww5
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                           ww12
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<2>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<2>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R) of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} True False} BasicTensors.invEta of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                             w2 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww16
                                                                                                                                  ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.ansatzAB9
                                                                                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                  ww20
                                                                                                                                    `cast`
                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                     ((,,,,,,,)
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                     <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                           ww14
                                                                                                                           ww22 of ww23 { Unit# ww24 ->
                 case {__scc {main:Order2Int.ansatzABb2} False True} Tensor.$wtensorContractWith_3
                                                                       @ 2
                                                                       @ 2
                                                                       @ GHC.Real.Rational
                                                                       @ 2
                                                                       @ 2
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 0
                                                                       Order2Int.$stensorContractWith_7
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                       Order2Int.$stensorContractWith_7
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                       Order2Int.ansatzABb3
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww24
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             <Index.Ind
                                                                                (2 GHC.TypeNats.+ 1)
                                                                                Index.Uind_3>_N
                                                                             <Index.Ind
                                                                                (2 GHC.TypeNats.+ 1)
                                                                                Index.Lind_3>_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww25 { Unit# ww26 ->
                 {__scc {main:Order2Int.ansatzABb2} False True} Tensor.$wtensorContractWith_3
                                                                  @ 1
                                                                  @ 1
                                                                  @ GHC.Real.Rational
                                                                  @ 2
                                                                  @ 2
                                                                  @ 0
                                                                  @ 0
                                                                  @ 1
                                                                  @ 0
                                                                  Order2Int.$stensorContractWith_1
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                  Order2Int.$stensorContractWith_1
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                  Order2Int.ansatzABb1
                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                  ww26
                                                                    `cast`
                                                                  (Data.Map.Internal.Map
                                                                     ((,,,,,,,)
                                                                        <Index.Ind
                                                                           2 Index.Uind_20>_N
                                                                        <Index.Ind
                                                                           2 Index.Lind_20>_N
                                                                        <Index.Ind
                                                                           0 Index.Uind_19>_N
                                                                        <Index.Ind
                                                                           0 Index.Lind_19>_N
                                                                        <Index.Ind 1 Index.Uind_9>_N
                                                                        <Index.Ind 0 Index.Lind_9>_N
                                                                        (Index.Ind
                                                                           (Sym (AddDef (<1>_N,
                                                                                         <1>_N)))
                                                                           <Index.Uind_3>_N)_N
                                                                        (Index.Ind
                                                                           (Sym (AddDef (<1>_N,
                                                                                         <1>_N)))
                                                                           <Index.Lind_3>_N)_N)_N
                                                                     <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
d8fbd603eaaa7029071dea424ee2166a
  $wansatzAI2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.ansatzAI2} True True} {__scc {main:Order2Int.ansatzAI2.aSym} True False} BasicTensors.invEta of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} BasicTensors.aSymI_2
                                                                                                                         w2 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} Tensor.$wtensorProductWith
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                         ww1
                                                                                                                         ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.aSym} False True} Tensor.$wtensorContractWith_3
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.ansatzAB9
                                                                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                                                                         ww5
                                                                                                                           `cast`
                                                                                                                         (Data.Map.Internal.Map
                                                                                                                            ((,,,,,,,)
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<1>_N))
                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                <1>_N)))
                                                                                                                                  <Index.Uind_3>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                <1>_N)))
                                                                                                                                  <Index.Lind_3>_N)_N)_N
                                                                                                                            <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.block2} True False} {__scc {main:Order2Int.ansatzAI2.int3} True True} BasicTensors.interEqn1_3
                                                                                                                                                                             w
                                                                                                                                                                             w1
                                                                                                                                                                             w2
                                                                                                                                                                             w3 of ww9 { Tensor.Tensor ww10 ->
                 case ({__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} True False} Order2Int.ansatzAI1)
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww11 { Tensor.Tensor ww12 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.$wtensorProductWith
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 0
                                                                                                                                                                    @ 1
                                                                                                                                                                    @ 1
                                                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                                    ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                  @ (Index.Index
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       0
                                                                                                                                                                                                                       0
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                  (Tensor.aSymTensor3
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1)
                                                                                                                                                                                                                  Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                  ww12
                                                                                                                                                                                                                  ww10)
                                                                                                                                                                    ww8 of ww13 { Unit# ww14 ->
                 case {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ GHC.Real.Rational
                                                                                                                         @ 1
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 2
                                                                                                                         @ 1
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.$stensorContractWith_1
                                                                                                                           `cast`
                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                         Order2Int.ansatzAB6
                                                                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                                                                         ww14
                                                                                                                           `cast`
                                                                                                                         (Data.Map.Internal.Map
                                                                                                                            ((,,,,,,,)
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Uind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Lind_20>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Uind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0L (<0>_N))
                                                                                                                                  <Index.Lind_19>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (AddDef (<1>_N,
                                                                                                                                           <1>_N))
                                                                                                                                  <Index.Uind_9>_N)_N
                                                                                                                               (Index.Ind
                                                                                                                                  (Add0R (<1>_N))
                                                                                                                                  <Index.Lind_9>_N)_N
                                                                                                                               <Index.Ind
                                                                                                                                  (1
                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                  Index.Uind_3>_N
                                                                                                                               <Index.Ind
                                                                                                                                  (1
                                                                                                                                   GHC.TypeNats.+ 1)
                                                                                                                                  Index.Lind_3>_N)_N
                                                                                                                            <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 {__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.tens} False True} Tensor.$wtensorContractWith_3
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ GHC.Real.Rational
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 2
                                                                                                                    @ 1
                                                                                                                    Order2Int.$stensorContractWith_4
                                                                                                                      `cast`
                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                    Order2Int.$stensorContractWith_4
                                                                                                                      `cast`
                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                    Order2Int.ansatzAB1
                                                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                                                    ww16
                                                                                                                      `cast`
                                                                                                                    (Data.Map.Internal.Map
                                                                                                                       ((,,,,,,,)
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Uind_20>_N
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Lind_20>_N
                                                                                                                          <Index.Ind
                                                                                                                             0
                                                                                                                             Index.Uind_19>_N
                                                                                                                          <Index.Ind
                                                                                                                             0
                                                                                                                             Index.Lind_19>_N
                                                                                                                          <Index.Ind
                                                                                                                             2
                                                                                                                             Index.Uind_9>_N
                                                                                                                          <Index.Ind
                                                                                                                             1
                                                                                                                             Index.Lind_9>_N
                                                                                                                          (Index.Ind
                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                             <Index.Uind_3>_N)_N
                                                                                                                          (Index.Ind
                                                                                                                             (Sym (Add0L (<1>_N)))
                                                                                                                             <Index.Lind_3>_N)_N)_N
                                                                                                                       <GHC.Real.Rational>_R)_R } } } } } } } }) -}
9e7da17261051441bc2ce8eab0d10423
  $wansatzAIB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.ansatzAIB2} True True} {__scc {main:Order2Int.ansatzAIB2.prod} True False} {__scc {main:Order2Int.ansatzAIB2.totalBlock1} True False} {__scc {main:Order2Int.ansatzAIB2.block1} True False} {__scc {main:Order2Int.ansatzAIB2.intArea} True True} BasicTensors.interArea
                                                                                                                                                                                                                                                                                                 w
                                                                                                                                                                                                                                                                                                 w1 of ww { Tensor.Tensor ww1 ->
                 case Order2Int.ansatzAIB1
                        `cast`
                      (Tensor.Tensor
                         (Add0R (<1>_N))
                         (Add0R (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         <GHC.Real.Rational>_R)_R of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block1} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block2} True False} BasicTensors.delta_20 of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.int3} True True} BasicTensors.interEqn1_3
                                                                                                                          w
                                                                                                                          w1
                                                                                                                          w2
                                                                                                                          w3 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block2} False True} Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww8
                                                                                                                             ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock1} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 2
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ 1
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                2
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                           (Tensor.aSymTensor3
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 2
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                              @ 1)
                                                                                                                                                                                                                           Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                                           ww5
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                           ww12
                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                                                                                                             <1>_N))
                                                                                                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                 (Index.Ind
                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R) of ww13 { Tensor.Tensor ww14 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} True False} BasicTensors.invEta of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.antiSym} True True} BasicTensors.aSymI_2
                                                                                                                             w2 of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} False True} Tensor.$wtensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  ww16
                                                                                                                                  ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.totalBlock2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                  @ 1
                                                                                                                                  @ 1
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.$stensorContractWith_1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  Order2Int.ansatzAB9
                                                                                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                  ww20
                                                                                                                                    `cast`
                                                                                                                                  (Data.Map.Internal.Map
                                                                                                                                     ((,,,,,,,)
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_20>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Uind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_19>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<1>_N))
                                                                                                                                           <Index.Uind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           <Index.Lind_9>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Uind_3>_N)_N
                                                                                                                                        (Index.Ind
                                                                                                                                           (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                         <1>_N)))
                                                                                                                                           <Index.Lind_3>_N)_N)_N
                                                                                                                                     <GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.prod} False True} Tensor.$wtensorProductWith
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 2
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 1
                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                           ww14
                                                                                                                           ww22 of ww23 { Unit# ww24 ->
                 case {__scc {main:Order2Int.ansatzAIB2} False True} Tensor.$wtensorContractWith_3
                                                                       @ 1
                                                                       @ 1
                                                                       @ GHC.Real.Rational
                                                                       @ 2
                                                                       @ 2
                                                                       @ 0
                                                                       @ 0
                                                                       @ 2
                                                                       @ 1
                                                                       Order2Int.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       Order2Int.$stensorContractWith_1
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                       Order2Int.ansatzAB6
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww24
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Uind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<2>_N))
                                                                                <Index.Lind_20>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Uind_19>_N)_N
                                                                             (Index.Ind
                                                                                (Add0L (<0>_N))
                                                                                <Index.Lind_19>_N)_N
                                                                             (Index.Ind
                                                                                (AddDef (<1>_N,
                                                                                         <1>_N))
                                                                                <Index.Uind_9>_N)_N
                                                                             (Index.Ind
                                                                                (Add0R (<1>_N))
                                                                                <Index.Lind_9>_N)_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Uind_3>_N
                                                                             <Index.Ind
                                                                                (1 GHC.TypeNats.+ 1)
                                                                                Index.Lind_3>_N)_N
                                                                          <GHC.Real.Rational>_R)_R of ww25 { Unit# ww26 ->
                 {__scc {main:Order2Int.ansatzAIB2} False True} Tensor.$wtensorContractWith_3
                                                                  @ 0
                                                                  @ 0
                                                                  @ GHC.Real.Rational
                                                                  @ 2
                                                                  @ 2
                                                                  @ 0
                                                                  @ 0
                                                                  @ 2
                                                                  @ 1
                                                                  Order2Int.$stensorContractWith_4
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  Order2Int.$stensorContractWith_4
                                                                    `cast`
                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                  Order2Int.ansatzAB1
                                                                  GHC.Real.$fEnumRatio_$s$c+
                                                                  ww26
                                                                    `cast`
                                                                  (Data.Map.Internal.Map
                                                                     ((,,,,,,,)
                                                                        <Index.Ind
                                                                           2 Index.Uind_20>_N
                                                                        <Index.Ind
                                                                           2 Index.Lind_20>_N
                                                                        <Index.Ind
                                                                           0 Index.Uind_19>_N
                                                                        <Index.Ind
                                                                           0 Index.Lind_19>_N
                                                                        <Index.Ind 2 Index.Uind_9>_N
                                                                        <Index.Ind 1 Index.Lind_9>_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Uind_3>_N)_N
                                                                        (Index.Ind
                                                                           (Sym (Add0L (<1>_N)))
                                                                           <Index.Lind_3>_N)_N)_N
                                                                     <GHC.Real.Rational>_R)_R } } } } } } } } } } } } }) -}
4c1bee6f59879b288aca451019c323be
  $wintAB1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
523dcf6db9fa61c24bced188991b56c9
  $wintAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
470fdb06b44a62f70c38e905d848a5f8
  $wintAI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:Order2Int.intAI} True True} {__scc {main:Order2Int.intAI.tens} True False} {__scc {main:Order2Int.intAI.block1} True False} {__scc {main:Order2Int.intAI.int3} True True} BasicTensors.interEqn1_3
                                                                                                                                                                                                               w
                                                                                                                                                                                                               w1
                                                                                                                                                                                                               w2
                                                                                                                                                                                                               w3 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} True False} BasicTensors.invEta of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} BasicTensors.interI_2
                                                                                                                w2 of ww4 { Tensor.Tensor ww5 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} Tensor.$wtensorProductWith
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 2
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 1
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 2
                                                                                                                GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                ww3
                                                                                                                ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.sym} False True} Tensor.$wtensorContractWith_3
                                                                                                                @ 1
                                                                                                                @ 1
                                                                                                                @ GHC.Real.Rational
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 0
                                                                                                                @ 1
                                                                                                                @ 0
                                                                                                                Order2Int.$stensorContractWith_1
                                                                                                                  `cast`
                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                Order2Int.$stensorContractWith_1
                                                                                                                  `cast`
                                                                                                                (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                          <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                Order2Int.ansatzAB9
                                                                                                                GHC.Real.$fEnumRatio_$s$c+
                                                                                                                ww7
                                                                                                                  `cast`
                                                                                                                (Data.Map.Internal.Map
                                                                                                                   ((,,,,,,,)
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Uind_20>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_20>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Uind_19>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_19>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<1>_N))
                                                                                                                         <Index.Uind_9>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<0>_N))
                                                                                                                         <Index.Lind_9>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                       <1>_N)))
                                                                                                                         <Index.Uind_3>_N)_N
                                                                                                                      (Index.Ind
                                                                                                                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                       <1>_N)))
                                                                                                                         <Index.Lind_3>_N)_N)_N
                                                                                                                   <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorProductWith
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                   ww1
                                                                                                                   ww9 of ww10 { Unit# ww11 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorContractWith_3
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 2
                                                                                                                   @ 1
                                                                                                                   Order2Int.$stensorContractWith_1
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                   Order2Int.$stensorContractWith_1
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                   Order2Int.ansatzAB6
                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                   ww11
                                                                                                                     `cast`
                                                                                                                   (Data.Map.Internal.Map
                                                                                                                      ((,,,,,,,)
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Uind_20>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Lind_20>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0L (<0>_N))
                                                                                                                            <Index.Uind_19>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0L (<0>_N))
                                                                                                                            <Index.Lind_19>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (AddDef (<1>_N,
                                                                                                                                     <1>_N))
                                                                                                                            <Index.Uind_9>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Add0R (<1>_N))
                                                                                                                            <Index.Lind_9>_N)_N
                                                                                                                         <Index.Ind
                                                                                                                            (1
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                            Index.Uind_3>_N
                                                                                                                         <Index.Ind
                                                                                                                            (1
                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                            Index.Lind_3>_N)_N
                                                                                                                      <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.block1} False True} Tensor.$wtensorContractWith_3
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ GHC.Real.Rational
                                                                                                                   @ 1
                                                                                                                   @ 1
                                                                                                                   @ 0
                                                                                                                   @ 0
                                                                                                                   @ 2
                                                                                                                   @ 1
                                                                                                                   Order2Int.$stensorContractWith_4
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                   Order2Int.$stensorContractWith_4
                                                                                                                     `cast`
                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                   Order2Int.ansatzAB1
                                                                                                                   GHC.Real.$fEnumRatio_$s$c+
                                                                                                                   ww13
                                                                                                                     `cast`
                                                                                                                   (Data.Map.Internal.Map
                                                                                                                      ((,,,,,,,)
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Uind_20>_N
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Lind_20>_N
                                                                                                                         <Index.Ind
                                                                                                                            0
                                                                                                                            Index.Uind_19>_N
                                                                                                                         <Index.Ind
                                                                                                                            0
                                                                                                                            Index.Lind_19>_N
                                                                                                                         <Index.Ind
                                                                                                                            2
                                                                                                                            Index.Uind_9>_N
                                                                                                                         <Index.Ind
                                                                                                                            1
                                                                                                                            Index.Lind_9>_N
                                                                                                                         (Index.Ind
                                                                                                                            (Sym (Add0L (<1>_N)))
                                                                                                                            <Index.Uind_3>_N)_N
                                                                                                                         (Index.Ind
                                                                                                                            (Sym (Add0L (<1>_N)))
                                                                                                                            <Index.Lind_3>_N)_N)_N
                                                                                                                      <GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorProductWith
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 2
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 2
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                 ww15
                                                                                                                 ww15 of ww16 { Unit# ww17 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorContractWith_20
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 4
                                                                                                                 @ 2
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.ansatzAB6
                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                 ww17
                                                                                                                   `cast`
                                                                                                                 (Data.Map.Internal.Map
                                                                                                                    ((,,,,,,,)
                                                                                                                       <Index.Ind
                                                                                                                          (1
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                          Index.Uind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          (1
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                          Index.Lind_20>_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (AddDef (<2>_N,
                                                                                                                                   <2>_N))
                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (AddDef (<1>_N,
                                                                                                                                   <1>_N))
                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Add0L (<0>_N))
                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                    <GHC.Real.Rational>_R)_R of ww18 { Unit# ww19 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tens} False True} Tensor.$wtensorContractWith_9
                                                                                                                 @ 3
                                                                                                                 @ 1
                                                                                                                 @ GHC.Real.Rational
                                                                                                                 @ 1
                                                                                                                 @ 1
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 @ 0
                                                                                                                 Order2Int.$stensorContractWith_13
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                 Order2Int.$stensorContractWith_1
                                                                                                                   `cast`
                                                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                 Order2Int.ansatzAB6
                                                                                                                 GHC.Real.$fEnumRatio_$s$c+
                                                                                                                 ww19
                                                                                                                   `cast`
                                                                                                                 (Data.Map.Internal.Map
                                                                                                                    ((,,,,,,,)
                                                                                                                       <Index.Ind
                                                                                                                          1
                                                                                                                          Index.Uind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          1
                                                                                                                          Index.Lind_20>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Uind_19>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Lind_19>_N
                                                                                                                       (Index.Ind
                                                                                                                          (Sym (AddDef (<3>_N,
                                                                                                                                        <1>_N)))
                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                       (Index.Ind
                                                                                                                          (Sym (AddDef (<1>_N,
                                                                                                                                        <1>_N)))
                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Uind_3>_N
                                                                                                                       <Index.Ind
                                                                                                                          0
                                                                                                                          Index.Lind_3>_N)_N
                                                                                                                    <GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Order2Int.intAI.tensTrans} True True} Tensor.$wtensorTranspose
                                                                                                                     @ 1
                                                                                                                     @ 1
                                                                                                                     @ 0
                                                                                                                     @ 0
                                                                                                                     @ 3
                                                                                                                     @ 1
                                                                                                                     @ 0
                                                                                                                     @ 0
                                                                                                                     @ GHC.Real.Rational
                                                                                                                     Order2Int.intAI1
                                                                                                                     Order2Int.ansatzABb3
                                                                                                                     ww21 of ww22 { Unit# ww23 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True False} Tensor.Tensor
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 3
                                                                                                                                                                                                                                            @ 1
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ 0
                                                                                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                                                                                            ({__scc {main:Tensor.fmap} False True} Order2Int.intAI_go8
                                                                                                                                                                                                                                                                                     ww23) of ww24 { Tensor.Tensor ww25 ->
                 case {__scc {main:Order2Int.intAI} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} Tensor.Tensor
                                                                                                                                                        @ 1
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ 3
                                                                                                                                                        @ 1
                                                                                                                                                        @ 0
                                                                                                                                                        @ 0
                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                        ({__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                      @ (Index.Index
                                                                                                                                                                                                           1
                                                                                                                                                                                                           1
                                                                                                                                                                                                           0
                                                                                                                                                                                                           0
                                                                                                                                                                                                           3
                                                                                                                                                                                                           1
                                                                                                                                                                                                           0
                                                                                                                                                                                                           0)
                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                      (Tensor.aSymTensor3
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 3
                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                         @ 0)
                                                                                                                                                                                                      Order2Int.ansatzAB2_lvl19
                                                                                                                                                                                                      ww21
                                                                                                                                                                                                      ww25) of ww26 { Tensor.Tensor ww27 ->
                 (# ww27 #) } } } } } } } } } } } } } }) -}
6154778777e3d5c4a10dcd4bb0c653bc
  $wintAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
b7d4ec75ae6b1011dfd52be796e439c5
  $wintAIBsym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
4b1484d46b668427689b46c9e1af63ec
  $wintAIBsymRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
666421e2ac2fedff8e3bdf1b36fb6998
  $wintAIBsymZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
006dbd3bea339c1af943aff33703d750
  $wmkEqnSparseIntABTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
0139a760e4d0d6f7aec3bb768d71a3e2
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
0a62b7e009f04d9432cde2900f87e28c
  ansatzAB1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB3)) -}
e5e48af7f3ca58839bf5e0e48b1db7b7
  ansatzAB10 ::
    Tensor.Tensor 0 0 0 0 0 0 2 0 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 1 0 0 2 GHC.Real.Rational
    -> Tensor.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.totalBlock2} False True} Tensor.tensorProductNumeric
                                                                                                                           @ GHC.Real.Rational
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 1
                                                                                                                           @ 0
                                                                                                                           @ 0
                                                                                                                           @ 2
                                                                                                                           GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                           GHC.Real.$fOrdRatio_$s$fEqRatio) -}
82babcdd78fd39f7e666f315660d404a
  ansatzAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAB2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
d9223969fb805a2e4288f7213d304bf4
  ansatzAB2_lvl19 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:Tensor.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
b071c954c59e4f33816e30ba8165da45
  ansatzAB3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
84df5691b18877b8a63134a48f7a56b8
  ansatzAB4 ::
    Tensor.Tensor 2 2 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 0 0 0 0 1 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor
         (2 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.prod} False True} Tensor.tensorProductNumeric
                                                                                                                    @ GHC.Real.Rational
                                                                                                                    @ 2
                                                                                                                    @ 2
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 0
                                                                                                                    @ 1
                                                                                                                    @ 1
                                                                                                                    GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                    GHC.Real.$fOrdRatio_$s$fEqRatio) -}
9a45ae595c49529a10ad49d4bfc5c894
  ansatzAB5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
6b910c541d78ffda0da8a4c021c9e6f2
  ansatzAB6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB7)) -}
0dfe83b0ae95b1e4ed0200a84e54ea79
  ansatzAB7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
c0fd2d58f7ca6ada728d326523a6a519
  ansatzAB8 ::
    Tensor.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
    -> Tensor.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> Tensor.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAB2} False True} {__scc {main:Order2Int.ansatzAB2.block1} False True} Tensor.tensorProductNumeric
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                                                      GHC.Real.$fOrdRatio_$s$fEqRatio) -}
dfcac6b615d9b1f97f5d3149c7991fd5
  ansatzAB9 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB7, Order2Int.ansatzAB7)) -}
2110d41abad4d0f41f88514bc1ada064
  ansatzABb1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB7, Order2Int.ansatzAB3)) -}
c450cfd0e7ebc5a0c3c182d4d5f758d3
  ansatzABb2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzABb2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
262aec93a9e3cf6d82ae5ad5f6f8d78f
  ansatzABb3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Order2Int.ansatzAB3, Order2Int.ansatzAB5)) -}
df14549d1486612fb461b5100acb4be4
  ansatzABb4 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzABb2} False True} {__scc {main:Order2Int.ansatzABb2.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                      case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                      case Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                                                                                                                      Tensor.Tensor
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ GHC.Real.Rational
                                                                                                                        ww5 } } }) -}
e1807f9f26ba3f5f1fdf756df1535d46
  ansatzAI1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAI2} False True} {__scc {main:Order2Int.ansatzAI2.block1} True True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                   case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                   case BasicTensors.delta_3 of ww4 { Tensor.Tensor ww5 ->
                                                                                                                   case Tensor.$wtensorProductWith
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                          ww3
                                                                                                                          ww5 of ww6 { Unit# ww7 ->
                                                                                                                   case Tensor.$wtensorProductWith
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ GHC.Real.Rational
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          @ 1
                                                                                                                          GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                          ww1
                                                                                                                          ww7
                                                                                                                            `cast`
                                                                                                                          (Data.Map.Internal.Map
                                                                                                                             ((,,,,,,,)
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Uind_20>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Lind_20>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Uind_19>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                   <Index.Lind_19>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                   <Index.Uind_9>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                   <Index.Lind_9>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                   <Index.Uind_3>_N)_N
                                                                                                                                (Index.Ind
                                                                                                                                   (Add0L (<1>_N))
                                                                                                                                   <Index.Lind_3>_N)_N)_N
                                                                                                                             <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                                                                                                                   Tensor.Tensor
                                                                                                                     @ (1
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (1
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 0)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ (0
                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                     @ GHC.Real.Rational
                                                                                                                     ww9 } } } } }) -}
977336cf6b32feab98e8a99af58ccf46
  ansatzAI2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAI2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
0576d42cf49e07327b64bb2ae452c7ff
  ansatzAIB1 ::
    Tensor.Tensor
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:Order2Int.ansatzAIB2} False True} {__scc {main:Order2Int.ansatzAIB2.block1} False True} case BasicTensors.delta_20 of ww { Tensor.Tensor ww1 ->
                                                                                                                      case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                      case Tensor.$wtensorProductWith
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ GHC.Real.Rational
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             @ 1
                                                                                                                             @ 1
                                                                                                                             @ 0
                                                                                                                             @ 0
                                                                                                                             GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                             ww1
                                                                                                                             ww3 of ww4 { Unit# ww5 ->
                                                                                                                      Tensor.Tensor
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (1
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ (0
                                                                                                                           GHC.TypeNats.+ 0)
                                                                                                                        @ GHC.Real.Rational
                                                                                                                        ww5 } } }) -}
b0395299889fd81c058af67a93a97553
  ansatzAIB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wansatzAIB2 w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
a8cd8b07714afc008e85682335393814
  intAB1 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAB1 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
e69a1ba041b47e3b89c956cdf835bfd5
  intAB2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAB2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
55642fb815851d0b527977d07e141e19
  intAI ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAI w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
dcfd9b056e1e67833645cac5e6e9ae40
  intAI1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
cacac4f05c3001def8b5c3197510a2fb
  intAIB ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIB w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
7a55ba68904223dfdaca0e548041e9c4
  intAIBsym ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsym w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
0e4cdc75ffd36bafa0bae2839f81315d
  intAIBsymRed ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsymRed w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
c21a226aed8fe970226f8304fc7688ba
  intAIBsymZero ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order2Int.$wintAIBsymZero w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 3
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
3ed33884d4f8e0e8ce641f978749b5a6
  intAI_go8 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
3f191c8f0152163cdef459b993e6ddf5
  mkEqnSparseAnsatzAB2 ::
    Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAB2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseAnsatzAB2_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
e491697a7c3b5698ee835d90d7200404
  mkEqnSparseAnsatzAB2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
f3b5bbb1b851ec90b071f0835be0976c
  mkEqnSparseAnsatzABb2 ::
    Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 1 0 1 1 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzABb2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Order2Int.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Order2Int.mkEqnSparseAnsatzABb2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
f28e7351d2c0b7b990c814933570bbca
  mkEqnSparseAnsatzABb2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 1 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
15a0e66b5a89a444548e0eadcefd157b
  mkEqnSparseAnsatzAI2 ::
    Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAI2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseAnsatzAI2_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
e155dcaefedb99b501862788161d0141
  mkEqnSparseAnsatzAI2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
d27c2ac5ebacf9b0028751c559e5c493
  mkEqnSparseAnsatzAIB2 ::
    Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 2 0 0 2 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseAnsatzAIB2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Order2Int.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Order2Int.mkEqnSparseAnsatzAIB2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
8c3341327d50339399c5bcfc2a2278c0
  mkEqnSparseAnsatzAIB2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 2 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
4d35b270191f99d81c9c765573f6c150
  mkEqnSparseIntAB ::
    Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAB} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                     Order2Int.$sfromList
                                                                       @ (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                       (Order2Int.mkEqnSparseIntAB_go13
                                                                          (GHC.Types.[]
                                                                             @ ((GHC.Types.Int,
                                                                                 GHC.Types.Int),
                                                                                GHC.Real.Rational))
                                                                          map1) }) -}
f41e397d1f3c0526f5d2a435114a9c77
  mkEqnSparseIntABTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 1 2 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order2Int.$wmkEqnSparseIntABTrian w ww1 }) -}
a8a03741004af03864b7c31fa77a0b39
  mkEqnSparseIntAB_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
32c88823fee0c2351cfe9c73c47b2ad6
  mkEqnSparseIntAI ::
    Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 1 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAI} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                     Order2Int.$sfromList
                                                                       @ (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                       (Order2Int.mkEqnSparseIntAI_go13
                                                                          (GHC.Types.[]
                                                                             @ ((GHC.Types.Int,
                                                                                 GHC.Types.Int),
                                                                                GHC.Real.Rational))
                                                                          map1) }) -}
9f16bfda756c0cd33ae2349e06baeeda
  mkEqnSparseIntAIB ::
    Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAIB} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                      Order2Int.$sfromList
                                                                        @ (GHC.Real.Ratio
                                                                             GHC.Integer.Type.Integer)
                                                                        (Order2Int.mkEqnSparseIntAIB_go13
                                                                           (GHC.Types.[]
                                                                              @ ((GHC.Types.Int,
                                                                                  GHC.Types.Int),
                                                                                 GHC.Real.Rational))
                                                                           map1) }) -}
54f1535d1eeca9ae35fb32157ae84475
  mkEqnSparseIntAIB_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 1 1 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
6937088a03527cca58d73c5b0573275b
  mkEqnSparseIntAIBsym ::
    Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 1 2 0 0 3 1 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order2Int.mkEqnSparseIntAIBsym} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                         Order2Int.$sfromList
                                                                           @ (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                           (Order2Int.mkEqnSparseIntAIBsym_go13
                                                                              (GHC.Types.[]
                                                                                 @ ((GHC.Types.Int,
                                                                                     GHC.Types.Int),
                                                                                    GHC.Real.Rational))
                                                                              map1) }) -}
380b26684f5f66e7a70dc4ecd800404b
  mkEqnSparseIntAIBsym_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 2 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
93ec38c738a67ec9f34f2528f7dcf187
  mkEqnSparseIntAI_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 3 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/Order2Int fromList @ (Int, Int) _" [orphan] forall @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (GHC.Types.Int, GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Order2Int.$sfromList @ a
"SPEC/Order2Int mapKeysWith @ (Int, Int) _ _" [orphan] forall @ a
                                                              @ k1
                                                              ($dOrd :: GHC.Classes.Ord
                                                                          (GHC.Types.Int,
                                                                           GHC.Types.Int))
  Data.Map.Internal.mapKeysWith @ (GHC.Types.Int, GHC.Types.Int)
                                @ a
                                @ k1
                                $dOrd
  = Order2Int.$smapKeysWith @ a @ k1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

