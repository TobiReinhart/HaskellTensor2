
==================== FINAL INTERFACE ====================
2019-01-18 15:26:34.529743 UTC

interface main:Main 8043
  interface hash: b680051d236682c84519e429dba5c836
  ABI hash: 1a415deaf411c89db3fa7a5f0561237b
  export-list hash: 5635a6f82989ff54b4a9d6dbd235c099
  orphan hash: 54a99200041d711099c4be10028e5ca6
  flag hash: 26906880275f8331bc9f1651bb2d3f20
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Ansatz AnsatzEqns2 BasicTensors
                     EquivarianceEqns EquivarianceMetric Index Integrabillity Ivar
                     Order1Int Order2Int Order3Int Pde Perturbation Symmetrize Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.TypeNats 8f7c6aed0d8e1900cac5f62a9bc0fd0b
import  -/  base-4.11.1.0:Numeric.Natural da273ddb373e0510fde98e17e4aa338f
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO ce09fff7d191d14067bddc2efd9b53a4
import  -/  containers-0.5.11.0:Data.IntMap.Strict 79a3c61ca2c76eb71c4304029717e288
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Map.Strict 40ac55e8c7db7b7f0f7e3d9769233909
import  -/  containers-0.5.11.0:Data.Map.Strict.Internal 372117aaabc2f1ff2039eaf324fdb5c6
import  -/  containers-0.5.11.0:Data.Sequence 21c58838329d44e2dc13db7c04e3a8d8
import  -/  Ansatz e80d045561c506e0590aa431c0cd1e76
  exports: d003aa5bf1bb4010f41a5bd7e042ed4f
  getAllInds fdcfec767009d3cd2156df4fbc07fb58
  getAllIndsInverse e3e05f4bb277a21977b25f8b238155bf
  getAllIndsLabel 422ef2f66d3ba6211872917c2803609d
  getAllIndsLabelInverse b2c79ab5f32cfa90331a19303d6d35ec
import  -/  AnsatzEqns2 1070ee6f7096d5fb3235e2da02b6590a
  exports: bd8b11d3f00127ad64ee51525e015ce0
  ansatzAB fae7acd10a0487cab8723ed17b206572
  ansatzABb be060eb98cc35975fbff967d86cf45f1
  ansatzAIB e707c07833c661f78a365b5faaf5d037
  ansatzAIBJ 6c2c61cc2df8b5320781fb01bafdb09d
  ansatzAaBI 05cd312bc73ebd6101fdebf520f69f00
  ansatzAaBb 49935f6a038581eb36a0e82a123cd587
  intCond2NoSym 0eb3fa277fa541fffaddc2ae01415858
  intCondfirstOrder bfd28ca3e964fa0f0ab3748976381624
  mkEqnSparseAnsatzAB 6598c2882f9ffadf1e36cd3c43c6cbb5
  mkEqnSparseAnsatzABSolo 9377e34f1edc634e5a9f1d488cd31bee
  mkEqnSparseAnsatzABb 822c0def7863c4c6e2482d1fb7be4d20
  mkEqnSparseAnsatzAIB 41d82995a3e7da8b7c77cda62a667c07
  mkEqnSparseAnsatzAIBJ ee981ca062dc508ee375243833244240
  mkEqnSparseAnsatzAaBI 8d103f04f3917ac1ca589baa0a438e69
  mkEqnSparseAnsatzAaBb ccd57c1d8a8de43ef15367a6b093bc85
  mkEqnSparseRemoveAIB 93474823adc118c0c5fdc12423ed7eac
  mkEqnSparsefirstOrder 271aeaead60e3162686e5e627f3f919c
  mkEqnSparseintCond2NoSym 355e5b29017277fb61d7a6d33360b992
  removeAIB c79a79e5ff4f133fb6c4989d23b0bf08
import  -/  BasicTensors 459e760670e17113d11708f22d917aa1
  exports: b16000811d6d04867ef2d7f77be3b83b
  delta_9 e75aa262356472dc198559ec7f775732
  flatArea c50387668f8e570ba03b4875269be9e8
  flatAreaMap 45fc69ea838313a3be4b563d5cc8f021
  interI_3 9ebbcc686d6c1e79936e1e48d95b2145
  interJ_2 2f0595593070d5b724a7c4cfafd49d1c
  invEta 654a36e8807dd2df11817151dcb7615d
  invEtaAbs 8c61a1a1828dcde141516155f97f410e
  ivar3M 7fccb231ed4c1eb7a6c6b5ef86484e1d
  triangleMap2 e9d6524b1e8bf49505f134508bfb94ca
  triangleMap3 daa6a0056d907db7646fa3352c855f31
  triangleMapArea a91b35fbeac767f993b935761009c80c
import  -/  EquivarianceEqns 97e2971cea94f78bc7f1d6c830b407a4
  exports: e7c82201f15d6bde89e88afb140ca87d
  eqn1_1 7266898c421bab0e5fcf02e80fee66c3
  eqn1_1Flat 90008274854544991e51ea033d9729a8
  eqn1_2 b780bf0cf0a524ff01321c1bf815b8aa
  eqn1_3 7cf932876158292848f4e73c6f589e77
  eqn1_4 87196d66631068545cecea1ba08f4cd7
  eqn2_2 a6d554ea67216956391d155f4e2fbc9f
  eqn2_2Flat 637cd4e719c7ae1e1b7e860ff44411bf
  eqn2_3 443a7987077f34cf3355188b9175d5ec
  eqn3_3 423d57d576425a2a062a635668d63188
  eqn3_3Flat 2edb310d0e5056ffcd32d42b904a6e15
  mkEqn1Sparse 3e6aa2db07e386eb01b91074f468ad72
  mkEqn2Sparse 08de88a0a5dc3ef369cbded15ab694a8
  mkEqn3Sparse 6d6fd4a2dcad7a755130b17d3c658eab
  mkEqn4Sparse 9276dc81a3506154e7435e57f848e3f0
  mkEqn5Sparse f3c57ed8ae07262036a677030df95542
  mkEqn6Sparse 512b9a62f4b560b9b70c68e248b5d70b
  mkEqnConstSparse bac4327cf53946d31ed0521542939366
  mkEqnConstSparseFlat 5aab3ca1a14086ac683e435f1d1a69a5
  showEqnsFlat 398b31dc0bcc4d19993d91abe7d5058f
import  -/  EquivarianceMetric 5ef872ff20416f37b44c997b2e1cca27
  exports: 70c5689f919659ae1a2e8e7443db1155
  eqn1_1M cd1424fb18b39ffebacce1a2d6c60b21
  eqn1_2M c84419e84fc766484f3ef29ab20db6a8
  eqn1_3M a0315a83fea1a2c07cd3fb75d923c676
  eqn2_2M 7c0c7a102c749cc14a4be35fc1aa3b9a
  eqn2_3M 3eb6416e21bf927f51e0eb8496fa075f
  eqn3_3M 085dd8588301de439cbb4b61b92118de
  mkEqn1SparseM fc035248924c172327018ffbbd84e6bc
  mkEqn2SparseM 257e718cf22263b686c27bd9105bf364
  mkEqn3SparseM f23ae2e0a4cf2d133ddeb8664388eed0
  mkEqn4SparseM 1aa9d8fce788a8999bd7fb84646272c9
  mkEqn5SparseM aeed38c88758bf5a5f85a3f274b31d07
  mkEqn6SparseM 46f64c87982cefbe3780949e37795ab8
  mkEqn6SparseMPulled ed65c43fb34f564a5ce5327a206b3680
import  -/  Index 60260ed90a129e1e10b6c5fafcb2ded1
  exports: 02acfc58131cc32506762c89c9bc64b7
  Lind_20 8a3588434be3c9662430693d2d2e332f
  Lind_9 89b0e08dbee85927dc2463ead2b84188
  Linds_3 562700c5f35c258ae2adef3c77ddc1b1
  Uind_19 bb9e43f50d34b9bc0ad289f9375995d1
  Uind_20 f2c1b76a3e7f0dd431510d7cb9f659a1
  Uind_9 ab8f3576b9e9258982a5d77295330a40
  Uinds_3 63ef11ca566ba01817ced09e779f86a0
  mkInd c1470ba25733eac9d3cf9089c612a176
import  -/  Integrabillity b98997e6d0cbb188f9d4afd8231fc205
  exports: b3d864313b2a08bb056385f669d33af1
  areaMetricMetric1 7b6455ed4debced7e37a08686087f8cc
  areaMetricMetric1intCond 32f9d1b0b3c2b0f33550aa45a1aefc37
  densityEqnArea1 9c6c0e74d92eff800c5a675a36b26fee
  densityEqnArea2 2d82a87b37fccb3388787d45de953879
  densityEqnMetric1 5fac2236410880058533f6e3de086ed1
  densityEqnMetric2 25e2128d31918ad3518d12763933371d
  flatMetricInter 42963c5237a6d7ef7b2327680943d2b9
  flatMetricInterProlong 26fa5f989bfe23fc8a4601141497b420
  int1Test ddc5a6760e0dbee5dbbf2c15fddf2798
  int1Test2 b90c888c62389fb2ed007bb2c273d218
  int1Test3 0544861b6ebe2ab1d82e5f6e9354bfc7
  int1Zero 22c8fb9bdd42362fd0e5384eb79fea15
  intCond1 8dea49b3099aa67da9e62024b8ecc630
  intCond1RelFac 1c6f496338fbcb2dd3696e73733335fd
  intCond1Zero 928a4f32b3d2e491d0313a1e7342095c
  intCond1noFactor 306d28b2f664b171529d18b3dbd45e76
  intCond2 a1d5da34a90d2e854c8cf66c19eabc3f
  intCond2_1 58eaaad365fd8f9e07934608ffb5d017
  intCond2_1Symbol 7a3016a2ca5a8a1e579ab2e012a21b71
  intCond2_1SymbolPure 41350bb07e004022719d970bf97176cd
  intCond2_1SymbolRed acbae621ae09c04ee3a7309b92ec0f97
  intCond2_1SymbolRedWrong 3f9f28241654d12c36c161cf7100da00
  intCond3 b0435e3eaf184b12a0cc25b1d4daf071
  intCondComp 8d035470cd7473a460b0b83f5ad85435
  intCondCompNoSym 408a4816a48b2955931b6e9852cb7164
  intCondCompZero 284bc6ed1561e43264725e2c3d1cec0f
  intCondOrd2 02aedc5c07028225bb6e889d81704813
  intCondSym 10ce178cf59fee31effdf188bcfc41f0
  intRankDef1 7f90a9c310d018da3f1552aeb38c0182
  intRankDef2 26a3a7c53343d7e6b3ebb85502ff8c5e
  intRankDef3 95314079179b1cc40a799672276c8b22
  intRankDef5 0609e71593927cd556ea8a57b16835c5
  inter4Factor 4c09ba0bfb3011f68557947024fdf05e
  inter4noFactor cee7574c498f364a5f0ec7b1107706ef
  inter6Factor 67f4c44e2eab9a0e3786b30848bf148c
  inter6noFactor e2cb093262ba44f80cc280c1e5284475
  mkEqnSparseAreaM 5041494bad28de566d92935b50c4989c
  mkEqnSparseAreaMintCond 210e601dab688a318fe9a0b3f462a9ac
  mkEqnSparseBlock1Eta 019efd5345d6ab0a082984a3e7194546
  mkEqnSparseCond1 ab666ffee812c459f6a106e3e7380c2b
  mkEqnSparseCond1Zero 71e478ea2f5ccc170cf6448826f3d6ed
  mkEqnSparseCond2 d72b0cb9e804c0c542f317e32f51cdf3
  mkEqnSparseCond3 cdc51e6d9413378bcdf24b432bb3c889
  mkEqnSparseDens1 61503779c1b5af1162adc0df17083f07
  mkEqnSparseDens1Area a001c8e2d760f59e24966e02df8bc1ee
  mkEqnSparseDens2 b22f68ff85cbe8bd0379368e45a3208f
  mkEqnSparseDens2Area 39fb541183794525263ba5d5b5d6fe66
  mkEqnSparseProjector ccc838a26218d76ca6d17298e35750d3
  mkEqnSparseProjector2 873e3757adb9d000a5eb6f8333b6e896
  mkEqnSparseflatMetricInter 0daec6f27360600c463fd5a2a0e674fe
  mkEqnSparseflatMetricInterProlong c57afc2159bbddaacb25f4a5c54ea394
  mkEqnSparseintCond2_1 dd0c0248ea34424c15c9cac99f8855c6
  mkEqnSparseintCond2_1New 27e56c3a2f7aa127333f18da7d893059
  mkEqnSparseintCond2_1Symbol 43df950d4b7597094058d7f79f7838a0
  mkEqnSparseintCond2_1SymbolPure 1dbd24a84f2fc06a6819fc14bc904ad0
  mkEqnSparseintCond2_1SymbolRed 3f6f9588c689c80fe0fe183c9c929a66
  mkEqnSparseintCond2_1SymbolRedFull 281f2f1a23f81fc3a57ef0a426b88c71
  mkEqnSparseintCondComp 2e01fc02cd5ba94c54e28aa850a34b36
  mkEqnSparseintCondCompNew a766670756ae9623ed540d225a413d7b
  mkEqnSparseintCondCompNoSym b458a723af974662084d00b9ef116144
  mkEqnSparseintCondOrd2 766e39425e8c3f3450df07ae4f4107d2
  mkEqnSparseintCondSym 20226e398c98fb5e4857b2fb94012e11
  mkEqnSparseintRankDef1 a8b3f7a8ec033e71250891aa413e8586
  mkEqnSparseintRankDef3 87e3a82eed0f3d2f36e137235941eca5
  mkEqnSparseinter6Mat 8a7d119014f02154c340f4d6315c0437
  mkEqnSparseinterMat 754fecf5e4d6e1d876ceb0b36cbde407
  mkEqnSparseprolongation1AI_ACK 9b7e96300143de75debd37b495bbf272
  mkEqnSparseprolongation1AI_AI a0357637a7234d25937dbb77c09c9bab
  mkEqnSparseprolongation2AaBb b13f65b4358eb4d0ea6b3172342e515a
  mkEqnSparseprolongation2AaBbC b29bd36f8f2e4fe6c67ebc88157f9e47
  projectorMatrix 20d718300423ff766bb99023f42eb7ec
  projectorMatrix2 f9b15f38e08f1953318eb026d185fc7d
  prolongation1AI_ACK 1eb8ba96199271c39d6644da4dd1660c
  prolongation1AI_AI 77d3019d03cb80b5b93a9ae923b884be
  prolongation2AaBb 0719e916356bc57dede3fd9b8cb04cbd
  prolongation2AaBbC 0ae612ae5b811505b7437e098e4a5f4b
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
  Ivar 6fb5b1c62e6ccfd9020c45c8471a027a
  addIvar d292753012f6d0425a83cacf61d3f780
  sMultIvar 9041089729d8e9da4cfe3d58c70439ce
import  -/  Order1Int db05f68d23e7026f8a2041beadd5e492
  exports: e2076df8d899dd7f49f2ce06a4107b13
  ansatzA 106dd969794509eae81c17b511ceecf5
  ansatzAI3 b9d0b91a1bbbd043d13462c6fafb9011
  ansatzAa 56fb9adc8fd80396680f19aec7aeefe3
  int1A 63323c9890fd694fc26a94ff328f4311
  mkEqnSparseAnsatzA aed115b7e408499309b9c1ce749dcf48
  mkEqnSparseAnsatzAI c19ec3720a6592e4a1c90f97040219b0
  mkEqnSparseAnsatzAa 348b8b8af32f855abe89cc48e32ce226
  mkEqnSparseint1A de2f0c14d7f0d02d1da28327b9777625
import  -/  Order2Int 79ffcb31d81223f333553ff0359978fa
  exports: 30a63d6248e77b9e95e0f4abf6813891
  ansatzAB2 cc81561c8818080eac258f7ee4f87523
  ansatzABb2 55db6d6a23b597c1b0be28672d95e5da
  ansatzAI2 6663af9fe69604d30a66e7d95148f9dc
  ansatzAIB2 568825756bdacba0ccc63c8400800664
  intAB1 cda43af8568da92bcc2ba3321cbaff81
  intAB2 c7857a414c8d4d1947b73ffbe5c4e849
  intAI c573195d27805d083fe306c93a3c4ea6
  intAIB 760ce6026eea92cb3512f8211d59c16a
  intAIBsym c88d3abcb2f00b79aa425b6c377479f5
  intAIBsymRed bbbb06344b76edd48c432747887f7ff0
  intAIBsymZero afcae71b4fa7fff2245b85870f4400bb
  mkEqnSparseAnsatzAB2 0b99fc6ed58bcf059316fed52fce22ec
  mkEqnSparseAnsatzABb2 5f8c9431891361fa4b70e03efb546365
  mkEqnSparseAnsatzAI2 2f91267d5ac92f9b4a15dffea11401fc
  mkEqnSparseAnsatzAIB2 6ca993394f6b771255b7a22753d03ba6
  mkEqnSparseIntAB 4b0b879eb75f639b8c22b60bd5aa4356
  mkEqnSparseIntABTrian 64838ec247e65240c80ba11cf53b3060
  mkEqnSparseIntAI 89d1585523c20f08729e9933eae095bf
  mkEqnSparseIntAIB a44742ab597d1a9cbc82c001bfa073f8
  mkEqnSparseIntAIBsym 21675cd0adc4f95a8fb8df3d67cc5307
import  -/  Order3Int ca7a7ac719f0b99780c712fedbd6df4f
  exports: 09607af139c7bdc3ef8500e3d1b464d7
  ansatzABC2 3b32102ced10fd4ad365476a695df784
  ansatzAIBC 170242b748e9f08e738bbe46225aa973
  ansatzAIBbC 6bbf389670720c6967764ec6fe591b4a
  ansatzAaBC d4b5827e6102d71e0bb36c4b1f59ce0b
  ansatzAaBbC dc43fb5b5833a510113fb6cc57e44dd6
  intABC f2310b763e9b8ac9a265c840dfd49a30
  intAIBC 415ce0c037b76ee99e6fd17b4a40dabb
  intAaBbC2 d05624d639fd6e24e05e3bc2035f0dce
  mkEqnSparseAnsatzABC2 bdba7efda9a3c61d214b601ad8ee3637
  mkEqnSparseAnsatzAIBC cfca11c853fbed26276d231caec0f3b2
  mkEqnSparseAnsatzAIBbC 34fe30911c549912ae92fd20fd617bfb
  mkEqnSparseAnsatzAaBC 27170017bdc996b38e399b3d01661f94
  mkEqnSparseAnsatzAaBbC 2b61de9d8b3ce683f9a77375d8801bb4
  mkEqnSparseIntABC2 9b0a7160d1ca42ac3319e8d77d79d12f
  mkEqnSparseintAIBC ad69dbf5d306a0cd96b944f42f4dd7d6
  mkEqnSparseintAaBbC df0e7ac98dce11362554da9051a5f216
import  -/  Pde 01727937c27ae17d2b109d09ad686ca8
  exports: b2cd66be74d90ac4a27aea2ce34825a2
  combinePdes 23c55130ad10a088f7d25a2a5aa48a54
  combinePdesIvar 7742e64466acb1199b6329af06e9b46f
  evalPdeRand f3974d1091c7c239243d972cfe3e9e0f
  mkAllMultInds 3e531cb074fd39791bcea39b2595cd89
  mkPdefromTens 864db75ba0d863ca2945736fd5bff7be
  print2MaplePde 2c6e9a9f849fe249f636eeeaeb5bba80
  prolongPdeAll 20f7158b4dd6faf85a9fa44fc46b7bb7
  prolongPdeAllBlock1 e19caaf3aff30c882d9ba374e4833ad3
  triangleMap c56bb2c7de30fa89ffb58bbc7e221a17
import  -/  Perturbation 0c5594cb695f7286ac07f1e3a60cf237
  exports: 94e25b3c86d4e670faac492ecf8a0eda
  getRepIndsPert c28f45fc3f3a3071be08ebe4be72fe39
  mkPertAns f7899695a9b4f8d4b2b36c3a4b720c46
  mkPertAnsEpsilon 16e753e3368c057da5e76ad244215205
  symAnsSetPert 2dc22dcb1b0de462f8027f9a29873628
  symAnsSetPertEpsilon 2ddee4395ae4c54bf95671edcc134e99
import  -/  Symmetrize a6ed2605ac858eebc9579a2a0ea3bf31
  exports: c79a0ef965b8f406eb0b9e72ceb58ef0
  getRepInds f922b78b9c7032ff96f8cb74395ef2ce
  mkAns 06d0925877023ff7f5a7034b2c348be4
  symAnsSet 3e28567e813dc1dfde267efbdbdbad70
import  -/  Tensor 176e25c77f5f937264699042a39a34a2
  exports: 9a68ab01e29b77db9280f7aa573b73ab
  Tensor de2cb2f95a4c3ff6ea3ffdde0ef67deb
  evalTensorVals 0507cf8ef5ddf6a3d1fa8a94ad34a9da
  tensorContractWith_3 529107206dcaa10693fc48c26137b94b
  tensorContractWith_9 cc576f2038f8bd555f142bcde424c5f8
  tensorProductWith 6e1300f3b6ea8f7dd056901f69230be2
import  -/  tf-random-0.5:System.Random.TF 8abc0839ff798088d7b0fe5da790c9f8
import  -/  tf-random-0.5:System.Random.TF.Gen edab7920943edb50441b167dda441e39
import  -/  tf-random-0.5:System.Random.TF.Init 28db424486cba3a1801495a4cd020295
import  -/  tf-random-0.5:System.Random.TF.Instances 38b1c99a14c0f48d6db9f4a900310278
759c1de5a2f0b46f04556923ce7d2ab4
  $s$fEqInd :: GHC.Classes.Eq (Index.Ind n Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_3)
                  (\ (ds :: Index.Ind n Index.Uind_3)
                     (ds1 :: Index.Ind n Index.Uind_3) ->
                   case ds of wild { Index.UnsafemkInd a1 ->
                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fEqSeq_$c==
                     @ Index.Uind_3
                     Index.$fEqUind_3
                     a1
                     b1 } })
                  (Main.$s$fEqInd_$s$fEqInd_$c/= @ n) -}
966913581c3294dcc73365b4450e0b94
  $s$fEqInd1 :: GHC.Classes.Eq (Index.Ind n Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_3)
                  (\ (ds :: Index.Ind n Index.Lind_3)
                     (ds1 :: Index.Ind n Index.Lind_3) ->
                   case ds of wild { Index.UnsafemkInd a1 ->
                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fEqSeq_$c==
                     @ Index.Lind_3
                     Index.$fEqLind_3
                     a1
                     b1 } })
                  (Main.$s$fEqInd_$s$fEqInd_$c/=1 @ n) -}
df1cbbd80851edc2f9216b0cd9f8d850
  $s$fEqInd_$s$fEqInd_$c/= ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_3)
                   (y :: Index.Ind n Index.Uind_3) ->
                 case x of wild { Index.UnsafemkInd a1 ->
                 case y of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fEqSeq_$c==
                        @ Index.Uind_3
                        Index.$fEqUind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
755894b120163e1bd21c5fbc6e35ab02
  $s$fEqInd_$s$fEqInd_$c/=1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_3)
                   (y :: Index.Ind n Index.Lind_3) ->
                 case x of wild { Index.UnsafemkInd a1 ->
                 case y of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fEqSeq_$c==
                        @ Index.Lind_3
                        Index.$fEqLind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
990a15f86d84f30bccf37026ccdbd6e9
  $s$fEqSeq ::
    GHC.Classes.Eq (Data.Sequence.Internal.Seq Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Sequence.Internal.Seq Index.Uind_3)
                  (Data.Sequence.Internal.$fEqSeq_$c==
                     @ Index.Uind_3
                     Index.$fEqUind_3)
                  Main.$s$fEqSeq_$s$fEqSeq_$c/= -}
65c4a8fdd0fb51de1fe44ec02d104e21
  $s$fEqSeq1 ::
    GHC.Classes.Eq (Data.Sequence.Internal.Seq Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Sequence.Internal.Seq Index.Lind_3)
                  (Data.Sequence.Internal.$fEqSeq_$c==
                     @ Index.Lind_3
                     Index.$fEqLind_3)
                  Main.$s$fEqSeq_$s$fEqSeq_$c/=1 -}
a26df6b7f47a65286241dedc1d6d45e4
  $s$fEqSeq_$s$fEqSeq_$c/= ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                 case Data.Sequence.Internal.$fEqSeq_$c==
                        @ Index.Uind_3
                        Index.$fEqUind_3
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d92ed8225fa2bec073094fb1d9ff370d
  $s$fEqSeq_$s$fEqSeq_$c/=1 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Lind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 case Data.Sequence.Internal.$fEqSeq_$c==
                        @ Index.Lind_3
                        Index.$fEqLind_3
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5f654ec29bae49586783c4054e0fca64
  $s$fOrdInd :: GHC.Classes.Ord (Index.Ind n Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_3)
                  (Main.$s$fEqInd @ n)
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$ccompare
                     @ Index.Uind_3
                     Index.$fOrdUind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Uind_3
                     Index.$fOrdUind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   case b of wild { Index.UnsafemkInd a2 ->
                   case a1 of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          a2
                          b1 of wild2 {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   case b of wild { Index.UnsafemkInd a2 ->
                   case a1 of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Uind_3
                     Index.$fOrdUind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          a2
                          b1 of wild2 {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Uind_3)
                     (y :: Index.Ind n Index.Uind_3) ->
                   case y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          a1
                          b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Uind_3)
                     (y :: Index.Ind n Index.Uind_3) ->
                   case y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          a1
                          b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
cb595ca779cbc4d85a7d2e56bb00ab69
  $s$fOrdInd1 :: GHC.Classes.Ord (Index.Ind n Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_3)
                  (Main.$s$fEqInd1 @ n)
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$ccompare
                     @ Index.Lind_3
                     Index.$fOrdLind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Lind_3
                     Index.$fOrdLind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   case b of wild { Index.UnsafemkInd a2 ->
                   case a1 of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          a2
                          b1 of wild2 {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   case b of wild { Index.UnsafemkInd a2 ->
                   case a1 of wild1 { Index.UnsafemkInd b1 ->
                   Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Lind_3
                     Index.$fOrdLind_3
                     a2
                     b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   case a1 of wild { Index.UnsafemkInd a2 ->
                   case b of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          a2
                          b1 of wild2 {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Lind_3)
                     (y :: Index.Ind n Index.Lind_3) ->
                   case y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          a1
                          b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Lind_3)
                     (y :: Index.Ind n Index.Lind_3) ->
                   case y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          a1
                          b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
9aae71e6b0316f0e00c906779052ab70
  $s$fOrdInd_$c< ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Uind_3)
                   (b :: Index.Ind n Index.Uind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$c<
                   @ Index.Uind_3
                   Index.$fOrdUind_3
                   a2
                   b1 } }) -}
e3619b3f4cbe579c9bfa674745d22474
  $s$fOrdInd_$c<1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Lind_3)
                   (b :: Index.Ind n Index.Lind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$c<
                   @ Index.Lind_3
                   Index.$fOrdLind_3
                   a2
                   b1 } }) -}
a4a67ca63d1ee58542edbd4261fdc029
  $s$fOrdInd_$c<= ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Uind_3)
                   (b :: Index.Ind n Index.Uind_3) ->
                 case b of wild { Index.UnsafemkInd a2 ->
                 case a1 of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        a2
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
0896197ec387c7efdb65c07c5401e9a9
  $s$fOrdInd_$c<=1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Lind_3)
                   (b :: Index.Ind n Index.Lind_3) ->
                 case b of wild { Index.UnsafemkInd a2 ->
                 case a1 of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        a2
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
ad550bf913b001bf6329fd651f65e3ef
  $s$fOrdInd_$c> ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Uind_3)
                   (b :: Index.Ind n Index.Uind_3) ->
                 case b of wild { Index.UnsafemkInd a2 ->
                 case a1 of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$c<
                   @ Index.Uind_3
                   Index.$fOrdUind_3
                   a2
                   b1 } }) -}
8d6265440110fda05957b2605878c5e1
  $s$fOrdInd_$c>1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Lind_3)
                   (b :: Index.Ind n Index.Lind_3) ->
                 case b of wild { Index.UnsafemkInd a2 ->
                 case a1 of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$c<
                   @ Index.Lind_3
                   Index.$fOrdLind_3
                   a2
                   b1 } }) -}
5dda3af6c1da81a99fa7744f02ef1a05
  $s$fOrdInd_$c>= ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Uind_3)
                   (b :: Index.Ind n Index.Uind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        a2
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
4b34ff5e1487fb6e591e2e0d89c99d7d
  $s$fOrdInd_$c>=1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Lind_3)
                   (b :: Index.Ind n Index.Lind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        a2
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
4d213b19112dc8e6980cd8d34c065c29
  $s$fOrdInd_$ccompare ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Uind_3)
                   (b :: Index.Ind n Index.Uind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$ccompare
                   @ Index.Uind_3
                   Index.$fOrdUind_3
                   a2
                   b1 } }) -}
4563f490a184c0d44f994a74a9def5e6
  $s$fOrdInd_$ccompare1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (a1 :: Index.Ind n Index.Lind_3)
                   (b :: Index.Ind n Index.Lind_3) ->
                 case a1 of wild { Index.UnsafemkInd a2 ->
                 case b of wild1 { Index.UnsafemkInd b1 ->
                 Data.Sequence.Internal.$fOrdSeq_$ccompare
                   @ Index.Lind_3
                   Index.$fOrdLind_3
                   a2
                   b1 } }) -}
51fe1d4efd33817af1b3f070a86d30eb
  $s$fOrdInd_$cmax ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> Index.Ind n Index.Uind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_3)
                   (y :: Index.Ind n Index.Uind_3) ->
                 case y of wild { Index.UnsafemkInd a1 ->
                 case x of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> wild GHC.Types.True -> wild1 } } }) -}
6e58e00ef28dd5767505410063510d30
  $s$fOrdInd_$cmax1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> Index.Ind n Index.Lind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_3)
                   (y :: Index.Ind n Index.Lind_3) ->
                 case y of wild { Index.UnsafemkInd a1 ->
                 case x of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> wild GHC.Types.True -> wild1 } } }) -}
436df17ce799da3f108e77f680a9dc5d
  $s$fOrdInd_$cmin ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> Index.Ind n Index.Uind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_3)
                   (y :: Index.Ind n Index.Uind_3) ->
                 case y of wild { Index.UnsafemkInd a1 ->
                 case x of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
64ec8319772d0d4ca98cde75ab4b593a
  $s$fOrdInd_$cmin1 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> Index.Ind n Index.Lind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_3)
                   (y :: Index.Ind n Index.Lind_3) ->
                 case y of wild { Index.UnsafemkInd a1 ->
                 case x of wild1 { Index.UnsafemkInd b1 ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        a1
                        b1 of wild2 {
                   GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
f6468afa3266b585b68e57f94ae08caa
  $s$fOrdSeq ::
    GHC.Classes.Ord (Data.Sequence.Internal.Seq Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Sequence.Internal.Seq Index.Uind_3)
                  Main.$s$fEqSeq
                  (Data.Sequence.Internal.$fOrdSeq_$ccompare
                     @ Index.Uind_3
                     Index.$fOrdUind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Uind_3
                     Index.$fOrdUind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c<=
                     @ Index.Uind_3
                     Index.$fOrdUind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c>
                     @ Index.Uind_3
                     Index.$fOrdUind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c>=
                     @ Index.Uind_3
                     Index.$fOrdUind_3)
                  (\ (x :: Data.Sequence.Internal.Seq Index.Uind_3)
                     (y :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<=
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          x
                          y of wild {
                     GHC.Types.False -> x GHC.Types.True -> y })
                  (\ (x :: Data.Sequence.Internal.Seq Index.Uind_3)
                     (y :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<=
                          @ Index.Uind_3
                          Index.$fOrdUind_3
                          x
                          y of wild {
                     GHC.Types.False -> y GHC.Types.True -> x }) -}
4ee755ba959b50133b55cb91b901444a
  $s$fOrdSeq1 ::
    GHC.Classes.Ord (Data.Sequence.Internal.Seq Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Sequence.Internal.Seq Index.Lind_3)
                  Main.$s$fEqSeq1
                  (Data.Sequence.Internal.$fOrdSeq_$ccompare
                     @ Index.Lind_3
                     Index.$fOrdLind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c<
                     @ Index.Lind_3
                     Index.$fOrdLind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c<=
                     @ Index.Lind_3
                     Index.$fOrdLind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c>
                     @ Index.Lind_3
                     Index.$fOrdLind_3)
                  (Data.Sequence.Internal.$fOrdSeq_$c>=
                     @ Index.Lind_3
                     Index.$fOrdLind_3)
                  (\ (x :: Data.Sequence.Internal.Seq Index.Lind_3)
                     (y :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<=
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          x
                          y of wild {
                     GHC.Types.False -> x GHC.Types.True -> y })
                  (\ (x :: Data.Sequence.Internal.Seq Index.Lind_3)
                     (y :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                   case Data.Sequence.Internal.$fOrdSeq_$c<=
                          @ Index.Lind_3
                          Index.$fOrdLind_3
                          x
                          y of wild {
                     GHC.Types.False -> y GHC.Types.True -> x }) -}
ebf3e8657610096185ed369e45f88b5b
  $s$fOrdSeq_$cmax ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Uind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<=
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        x
                        y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
f147f3b72e9202f0d046ccbad72a3c78
  $s$fOrdSeq_$cmax1 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Lind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<=
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        x
                        y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
f2edbcc3b938c555e74ebe69edcf2f41
  $s$fOrdSeq_$cmin ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Uind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<=
                        @ Index.Uind_3
                        Index.$fOrdUind_3
                        x
                        y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
ddb2649e8ebe960d2dc14286b6cc0a23
  $s$fOrdSeq_$cmin1 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Sequence.Internal.Seq Index.Lind_3)
                   (y :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 case Data.Sequence.Internal.$fOrdSeq_$c<=
                        @ Index.Lind_3
                        Index.$fOrdLind_3
                        x
                        y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
6f1d474e546b4a0199ac49624596e059
  $sfromList10 ::
    [(Data.Sequence.Internal.Seq Index.Lind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Lind_3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a
                   (ds :: [(Data.Sequence.Internal.Seq Index.Lind_3, a)]) ->
                 case ds of wild {
                   []
                   -> Data.Map.Internal.Tip
                        @ (Data.Sequence.Internal.Seq Index.Lind_3)
                        @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx
                                  `cast`
                                (Data.Sequence.Internal.N:Seq[0]
                                     <Index.Lind_3>_R) of nt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ (Data.Sequence.Internal.Seq Index.Lind_3)
                             @ a
                             1#
                             nt `cast` (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R))
                             x1
                             (Data.Map.Internal.Tip
                                @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                @ a)
                             (Data.Map.Internal.Tip
                                @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Data.Sequence.Internal.$fOrdSeq_$c>=
                                  @ Index.Lind_3
                                  Index.$fOrdLind_3
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                case kx
                                       `cast`
                                     (Data.Sequence.Internal.N:Seq[0]
                                          <Index.Lind_3>_R) of nt { DEFAULT ->
                                Main.$wpoly_go4
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                     @ a
                                     1#
                                     nt
                                       `cast`
                                     (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R))
                                     x0
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                        @ a))
                                  wild2 } }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                case kx
                                       `cast`
                                     (Data.Sequence.Internal.N:Seq[0]
                                          <Index.Lind_3>_R) of nt { DEFAULT ->
                                Main.$sfromList11
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                     @ a
                                     1#
                                     nt
                                       `cast`
                                     (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R))
                                     x0
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Lind_3)
                                        @ a))
                                  wild2 } } } } } } }) -}
72c338eee4a3716e56ccf7c332a3c19b
  $sfromList11 ::
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq Index.Lind_3) a
    -> [(Data.Sequence.Internal.Seq Index.Lind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Lind_3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
0cd579000ee07ae96bda0dc22a40b50b
  $sfromList2 ::
    [(Index.Ind 4 Index.Uind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Ind 4 Index.Uind_3, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.UnsafemkInd ipv ->
                           Data.Map.Internal.Bin
                             @ (Index.Ind 4 Index.Uind_3)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a)
                             (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { Index.UnsafemkInd a2 ->
                           case ky of wild5 { Index.UnsafemkInd b1 ->
                           case Data.Sequence.Internal.$fOrdSeq_$c<
                                  @ Index.Uind_3
                                  Index.$fOrdUind_3
                                  a2
                                  b1 of wild6 {
                             GHC.Types.False
                             -> Main.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 4 Index.Uind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a))
                                  wild2
                             GHC.Types.True
                             -> Main.$wpoly_go1
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 4 Index.Uind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Uind_3) @ a))
                                  wild2 } } } } } } }) -}
8d5f0dd86be4f39ffbdbc55648d3ad7c
  $sfromList3 ::
    Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
    -> [(Index.Ind 4 Index.Uind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
25a2f3624416e8ac4f78e1e1d66a87a1
  $sfromList4 ::
    [(Index.Ind 2 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Ind 2 Index.Lind_3, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.UnsafemkInd ipv ->
                           Data.Map.Internal.Bin
                             @ (Index.Ind 2 Index.Lind_3)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a)
                             (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { Index.UnsafemkInd a2 ->
                           case ky of wild5 { Index.UnsafemkInd b1 ->
                           case Data.Sequence.Internal.$fOrdSeq_$c<
                                  @ Index.Lind_3
                                  Index.$fOrdLind_3
                                  a2
                                  b1 of wild6 {
                             GHC.Types.False
                             -> Main.$sfromList5
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 2 Index.Lind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a))
                                  wild2
                             GHC.Types.True
                             -> Main.$wpoly_go2
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 2 Index.Lind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 2 Index.Lind_3) @ a))
                                  wild2 } } } } } } }) -}
5750e8d85bb8a84b7b11a2d59e0fe1bc
  $sfromList5 ::
    Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
    -> [(Index.Ind 2 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
98df1d1be358ca99f02783599b6a94c5
  $sfromList6 ::
    [(Index.Ind 4 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Ind 4 Index.Lind_3, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.UnsafemkInd ipv ->
                           Data.Map.Internal.Bin
                             @ (Index.Ind 4 Index.Lind_3)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a)
                             (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { Index.UnsafemkInd a2 ->
                           case ky of wild5 { Index.UnsafemkInd b1 ->
                           case Data.Sequence.Internal.$fOrdSeq_$c<
                                  @ Index.Lind_3
                                  Index.$fOrdLind_3
                                  a2
                                  b1 of wild6 {
                             GHC.Types.False
                             -> Main.$sfromList7
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 4 Index.Lind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a))
                                  wild2
                             GHC.Types.True
                             -> Main.$wpoly_go3
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Ind 4 Index.Lind_3)
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Ind 4 Index.Lind_3) @ a))
                                  wild2 } } } } } } }) -}
65319440b56dd6c00de71e48b08d0952
  $sfromList7 ::
    Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
    -> [(Index.Ind 4 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
76e4352f5b10d682a5b1702e9c2bb04a
  $sfromList8 ::
    [(Data.Sequence.Internal.Seq Index.Uind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Uind_3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a
                   (ds :: [(Data.Sequence.Internal.Seq Index.Uind_3, a)]) ->
                 case ds of wild {
                   []
                   -> Data.Map.Internal.Tip
                        @ (Data.Sequence.Internal.Seq Index.Uind_3)
                        @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx
                                  `cast`
                                (Data.Sequence.Internal.N:Seq[0]
                                     <Index.Uind_3>_R) of nt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ (Data.Sequence.Internal.Seq Index.Uind_3)
                             @ a
                             1#
                             nt `cast` (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Uind_3>_R))
                             x1
                             (Data.Map.Internal.Tip
                                @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                @ a)
                             (Data.Map.Internal.Tip
                                @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Data.Sequence.Internal.$fOrdSeq_$c>=
                                  @ Index.Uind_3
                                  Index.$fOrdUind_3
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                case kx
                                       `cast`
                                     (Data.Sequence.Internal.N:Seq[0]
                                          <Index.Uind_3>_R) of nt { DEFAULT ->
                                Main.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                     @ a
                                     1#
                                     nt
                                       `cast`
                                     (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Uind_3>_R))
                                     x0
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                        @ a))
                                  wild2 } }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                case kx
                                       `cast`
                                     (Data.Sequence.Internal.N:Seq[0]
                                          <Index.Uind_3>_R) of nt { DEFAULT ->
                                Main.$sfromList9
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                     @ a
                                     1#
                                     nt
                                       `cast`
                                     (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Uind_3>_R))
                                     x0
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                        @ a)
                                     (Data.Map.Internal.Tip
                                        @ (Data.Sequence.Internal.Seq Index.Uind_3)
                                        @ a))
                                  wild2 } } } } } } }) -}
f55407554e96341f9d67add77b008465
  $sfromList9 ::
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq Index.Uind_3) a
    -> [(Data.Sequence.Internal.Seq Index.Uind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Uind_3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
5f1c2a5a93e44c080e5d92c8437bafb6
  $sinsert_go8 ::
    GHC.Classes.Ord k1 =>
    k1
    -> a1 -> Data.Map.Internal.Map k1 a1 -> Data.Map.Internal.Map k1 a1
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U><S,1*U> -}
1a1842077cea3b2d79c2d0cbfd0d71d1
  $smapKeys1 ::
    (k1 -> Index.Ind 4 Index.Uind_3)
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
  {- Arity: 2, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ k1
                   @ a
                   (f :: k1 -> Index.Ind 4 Index.Uind_3)
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 letrec {
                   go13 :: [(Index.Ind 4 Index.Uind_3, a)]
                           -> Data.Map.Internal.Map k1 a -> [(Index.Ind 4 Index.Uind_3, a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [(Index.Ind 4 Index.Uind_3, a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> go13
                            (GHC.Types.: @ (Index.Ind 4 Index.Uind_3, a) (f kx, x) (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 Main.$sfromList2
                   @ a
                   (go13 (GHC.Types.[] @ (Index.Ind 4 Index.Uind_3, a)) eta)) -}
cb70a4bfe7746d9720d5fc30880104ad
  $smapKeys2 ::
    (k1 -> Index.Ind 2 Index.Lind_3)
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
  {- Arity: 2, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ k1
                   @ a
                   (f :: k1 -> Index.Ind 2 Index.Lind_3)
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 letrec {
                   go13 :: [(Index.Ind 2 Index.Lind_3, a)]
                           -> Data.Map.Internal.Map k1 a -> [(Index.Ind 2 Index.Lind_3, a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [(Index.Ind 2 Index.Lind_3, a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> go13
                            (GHC.Types.: @ (Index.Ind 2 Index.Lind_3, a) (f kx, x) (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 Main.$sfromList4
                   @ a
                   (go13 (GHC.Types.[] @ (Index.Ind 2 Index.Lind_3, a)) eta)) -}
595187c00c558442f9a202ab48f7e091
  $smapKeys3 ::
    (k1 -> Index.Ind 4 Index.Lind_3)
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
  {- Arity: 2, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ k1
                   @ a
                   (f :: k1 -> Index.Ind 4 Index.Lind_3)
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 letrec {
                   go13 :: [(Index.Ind 4 Index.Lind_3, a)]
                           -> Data.Map.Internal.Map k1 a -> [(Index.Ind 4 Index.Lind_3, a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [(Index.Ind 4 Index.Lind_3, a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> go13
                            (GHC.Types.: @ (Index.Ind 4 Index.Lind_3, a) (f kx, x) (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 Main.$sfromList6
                   @ a
                   (go13 (GHC.Types.[] @ (Index.Ind 4 Index.Lind_3, a)) eta)) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
344885967fe9e004cfa760a46812d7c6
  $wpoly_go1 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
    -> [(Index.Ind 4 Index.Uind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Uind_3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
7432e184bf7cd97d69fcd1aff0b61c19
  $wpoly_go2 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
    -> [(Index.Ind 2 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 2 Index.Lind_3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
4407b393249cb1229258fdd3c7e2e871
  $wpoly_go3 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
    -> [(Index.Ind 4 Index.Lind_3, a)]
    -> Data.Map.Internal.Map (Index.Ind 4 Index.Lind_3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
7cac206639cdfb8748bf82d57e01333b
  $wpoly_go4 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Lind_3) a
    -> [(Data.Sequence.Internal.Seq Index.Lind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Lind_3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
0c470b15671b8aef13ad7828a0573e8a
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Uind_3) a
    -> [(Data.Sequence.Internal.Seq Index.Uind_3, a)]
    -> Data.Map.Internal.Map
         (Data.Sequence.Internal.Seq Index.Uind_3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
fde9eec4d5f925ac3089223c706a0f07
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d2b428de24a56a77eceb1041fd6e5881
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Random.TF.Init.theTFGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.TF.Gen.TFGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.TF.Gen.TFGen
                        @ (System.Random.TF.Gen.TFGen, System.Random.TF.Gen.TFGen)
                        @ System.Random.TF.Gen.TFGen
                        r#
                        System.Random.TF.Gen.tfGenSplit
                        s of ds1 { (#,#) ipv ipv1 ->
                 case System.IO.appendFile2
                        @ ()
                        Main.main20
                        GHC.IO.IOMode.WriteMode
                        Main.main13
                          `cast`
                        (<GHC.IO.Handle.Types.Handle>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.appendFile2
                   @ ()
                   Main.main11
                   GHC.IO.IOMode.WriteMode
                   Main.main2
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   ipv2 } } }) -}
b57c54cc4b152cbd97149ac0bac0d732
  main10 ::
    Data.Sequence.Internal.Seq Index.Lind_3 -> Index.Ind 4 Index.Lind_3
  {- Unfolding: (Index.mkInd @ 4 @ Index.Lind_3 Main.main7) -}
7216bdfb2b63954e29a0afa9d49bf137
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main12) -}
4e32fc793e713644d00369c7dc350249
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/TobiasReinhart/Desktop/HaskellTensor/HaskellTensor2Data/Ansatz/intABFac_18_1_19.txt"#) -}
40344aea0e7713aad02da96519632b77
  main13 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2 hdl Main.main14 GHC.Types.False) -}
bbfdf8a134f362b6d1b1a65870c6f4d4
  main14 :: GHC.Base.String
  {- Unfolding: (EquivarianceEqns.showEqnsFlat Main.main15) -}
1de11b1365cfbb43d3fc68c39003c4b0
  main15 ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Unfolding: (case AnsatzEqns2.$wansatzAB
                        Main.main_map1Area
                        Main.main_map2Area
                        Main.main_map1Metric of ww { Unit# ww1 ->
                 AnsatzEqns2.$wmkEqnSparseAnsatzABSolo Main.main_trian1New ww1 }) -}
4d60a21399ed8109431a416c0200645b
  main16 :: [Index.Uind_9]
  {- Unfolding: (case GHC.Prim.dataToTag#
                        @ Index.Uind_9
                        (Index.$w$ctoEnum7 0#) of a# { DEFAULT ->
                 case GHC.Prim.># a# 9# of lwild {
                   DEFAULT -> Index.$fEnumUind_9_go a#
                   1# -> GHC.Types.[] @ Index.Uind_9 } }) -}
39723c67432c1f31cf6a91d8426b7efc
  main17 ::
    Data.Sequence.Internal.Seq Index.Lind_3 -> Index.Ind 2 Index.Lind_3
  {- Unfolding: (Index.mkInd @ 2 @ Index.Lind_3 Main.main18) -}
df718471e769fefbabc7e6cbac5be747
  main18 :: GHC.TypeNats.KnownNat 2
  {- Unfolding: (case Main.main19 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT
                        -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        1#
                        -> (GHC.Natural.NatS# (GHC.Prim.int2Word# i#))
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT
                             -> (GHC.Natural.NatJ# dt)
                                  `cast`
                                (Sym (GHC.TypeNats.N:SNat[0]
                                          <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                             0#
                             -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                                  `cast`
                                (Sym (GHC.TypeNats.N:SNat[0]
                                          <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           (GHC.Natural.NatS# wild2)
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) } }
                   GHC.Integer.Type.Jn# ipv
                   -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                        `cast`
                      (Sym (GHC.TypeNats.N:SNat[0]
                                <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) }) -}
98e0cfa6a19774b49f85e2adba4e0f21
  main19 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
2003d80590fb0504fa68e4e94710aa29
  main2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2 hdl Main.main3 GHC.Types.False) -}
bff44d409e2b38c04eb0ae0f3ab314d5
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main21) -}
ccd74299dfe26664b9085801fea008ad
  main21 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/TobiasReinhart/Desktop/HaskellTensor/HaskellTensor2Data/Ansatz/ansatzABFac_18_1_19.txt"#) -}
a52b2e640e8c256a8f589a1741060c7a
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e8461caba64ebb7543a8f5279ea69b41
  main3 :: GHC.Base.String
  {- Unfolding: (EquivarianceEqns.showEqnsFlat Main.main4) -}
cf4e91bca05c1e2c13895221435b5931
  main4 ::
    Data.Map.Internal.Map
      (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Unfolding: (case Order2Int.$wintAB1
                        Main.main_map1Area
                        Main.main_map2Area of ww { Unit# ww1 ->
                 Order2Int.$wmkEqnSparseIntABTrian Main.main_trian1New ww1 }) -}
920966d41aba3d292f3502b19b7606d3
  main5 :: [Index.Lind_20]
  {- Unfolding: (case GHC.Prim.dataToTag#
                        @ Index.Lind_20
                        (Index.$w$ctoEnum1 0#) of a# { DEFAULT ->
                 case GHC.Prim.># a# 20# of lwild {
                   DEFAULT -> Index.$fEnumLind_20_go a#
                   1# -> GHC.Types.[] @ Index.Lind_20 } }) -}
51bc09a142c034d12a9e97b288f36d29
  main6 ::
    Data.Sequence.Internal.Seq Index.Uind_3 -> Index.Ind 4 Index.Uind_3
  {- Unfolding: (Index.mkInd @ 4 @ Index.Uind_3 Main.main7) -}
3f9376d3fae531b4efccf4097c333f41
  main7 :: GHC.TypeNats.KnownNat 4
  {- Unfolding: (case Main.main8 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT
                        -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                        1#
                        -> (GHC.Natural.NatS# (GHC.Prim.int2Word# i#))
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT
                             -> (GHC.Natural.NatJ# dt)
                                  `cast`
                                (Sym (GHC.TypeNats.N:SNat[0]
                                          <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                             0#
                             -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                                  `cast`
                                (Sym (GHC.TypeNats.N:SNat[0]
                                          <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N) }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           (GHC.Natural.NatS# wild2)
                             `cast`
                           (Sym (GHC.TypeNats.N:SNat[0]
                                     <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N) } }
                   GHC.Integer.Type.Jn# ipv
                   -> (GHC.Natural.underflowError @ GHC.Natural.Natural)
                        `cast`
                      (Sym (GHC.TypeNats.N:SNat[0]
                                <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N) }) -}
ae21529bc98eacd65e18707a45379be5
  main8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
faf9118fb9e9a4a02a49b347c50553a9
  main9 :: [Index.Uind_20]
  {- Unfolding: (case GHC.Prim.dataToTag#
                        @ Index.Uind_20
                        (Index.$w$ctoEnum5 0#) of a# { DEFAULT ->
                 case GHC.Prim.># a# 20# of lwild {
                   DEFAULT -> Index.$fEnumUind_20_go a#
                   1# -> GHC.Types.[] @ Index.Uind_20 } }) -}
a0a8e08cf962a11f2145ee1e9b1810a0
  main_map1Area ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
  {- Unfolding: (Main.$smapKeys3
                   @ (Data.Sequence.Internal.Seq Index.Lind_3)
                   @ Index.Uind_20
                   Main.main10
                   (Main.$sfromList10
                      @ Index.Uind_20
                      (GHC.List.zip
                         @ (Data.Sequence.Internal.Seq Index.Lind_3)
                         @ Index.Uind_20
                         (BasicTensors.$wareaDofList
                            @ Index.Lind_3
                            Index.$fEnumLind_3
                            Index.$fOrdLind_3)
                         Main.main9))) -}
1ab43fe32d8251f6bc552754bfdb542d
  main_map1Metric ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
  {- Unfolding: (Main.$smapKeys2
                   @ (Data.Sequence.Internal.Seq Index.Lind_3)
                   @ Index.Uind_9
                   Main.main17
                   (Main.$sfromList10
                      @ Index.Uind_9
                      (GHC.List.zip
                         @ (Data.Sequence.Internal.Seq Index.Lind_3)
                         @ Index.Uind_9
                         (BasicTensors.$wsymIndList
                            @ Index.Lind_3
                            Index.$fEnumLind_3
                            2#
                            BasicTensors.flatArea3)
                         Main.main16))) -}
07f4fe1070667ee5e5ccb9f3ad44d58b
  main_map2Area ::
    Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
  {- Unfolding: (Main.$smapKeys1
                   @ (Data.Sequence.Internal.Seq Index.Uind_3)
                   @ Index.Lind_20
                   Main.main6
                   (Main.$sfromList8
                      @ Index.Lind_20
                      (GHC.List.zip
                         @ (Data.Sequence.Internal.Seq Index.Uind_3)
                         @ Index.Lind_20
                         (BasicTensors.$wareaDofList
                            @ Index.Uind_3
                            Index.$fEnumUind_3
                            Index.$fOrdUind_3)
                         Main.main5))) -}
6789ae0e5196d41fe3311cb424654661
  main_trian1New ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
  {- Unfolding: (Pde.$sunion
                   @ GHC.Types.Int
                   (Pde.$wtriangleMap2P 21#)
                   (Pde.$wtriangleMap3P 21#)) -}
"SPEC/Main $fEqInd _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                               (v :: GHC.Classes.Eq Index.Lind_3)
  Index.$fEqInd @ n @ Index.Lind_3 v = Main.$s$fEqInd1 @ n
"SPEC/Main $fEqInd _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                               (v :: GHC.Classes.Eq Index.Uind_3)
  Index.$fEqInd @ n @ Index.Uind_3 v = Main.$s$fEqInd @ n
"SPEC/Main $fEqInd_$c/= _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dEq :: GHC.Classes.Eq Index.Lind_3)
  Index.$fEqInd_$c/= @ n @ Index.Lind_3 $dEq
  = Main.$s$fEqInd_$s$fEqInd_$c/=1 @ n
"SPEC/Main $fEqInd_$c/= _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dEq :: GHC.Classes.Eq Index.Uind_3)
  Index.$fEqInd_$c/= @ n @ Index.Uind_3 $dEq
  = Main.$s$fEqInd_$s$fEqInd_$c/= @ n
"SPEC/Main $fEqSeq @ Lind_3" [orphan] forall (v :: GHC.Classes.Eq
                                                     Index.Lind_3)
  Data.Sequence.Internal.$fEqSeq @ Index.Lind_3 v = Main.$s$fEqSeq1
"SPEC/Main $fEqSeq @ Uind_3" [orphan] forall (v :: GHC.Classes.Eq
                                                     Index.Uind_3)
  Data.Sequence.Internal.$fEqSeq @ Index.Uind_3 v = Main.$s$fEqSeq
"SPEC/Main $fEqSeq_$c/= @ Lind_3" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                             Index.Lind_3)
  Data.Sequence.Internal.$fEqSeq_$c/= @ Index.Lind_3 $dEq
  = Main.$s$fEqSeq_$s$fEqSeq_$c/=1
"SPEC/Main $fEqSeq_$c/= @ Uind_3" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                             Index.Uind_3)
  Data.Sequence.Internal.$fEqSeq_$c/= @ Index.Uind_3 $dEq
  = Main.$s$fEqSeq_$s$fEqSeq_$c/=
"SPEC/Main $fOrdInd _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                (v :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd @ n @ Index.Lind_3 v = Main.$s$fOrdInd1 @ n
"SPEC/Main $fOrdInd _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                (v :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd @ n @ Index.Uind_3 v = Main.$s$fOrdInd @ n
"SPEC/Main $fOrdInd_$c< _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$c< @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$c<1 @ n
"SPEC/Main $fOrdInd_$c< _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$c< @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$c< @ n
"SPEC/Main $fOrdInd_$c<= _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                     ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$c<= @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$c<=1 @ n
"SPEC/Main $fOrdInd_$c<= _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                     ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$c<= @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$c<= @ n
"SPEC/Main $fOrdInd_$c> _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$c> @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$c>1 @ n
"SPEC/Main $fOrdInd_$c> _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                    ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$c> @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$c> @ n
"SPEC/Main $fOrdInd_$c>= _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                     ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$c>= @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$c>=1 @ n
"SPEC/Main $fOrdInd_$c>= _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                     ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$c>= @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$c>= @ n
"SPEC/Main $fOrdInd_$ccompare _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                          ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$ccompare @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$ccompare1 @ n
"SPEC/Main $fOrdInd_$ccompare _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                          ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$ccompare @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$ccompare @ n
"SPEC/Main $fOrdInd_$cmax _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                      ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$cmax @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$cmax1 @ n
"SPEC/Main $fOrdInd_$cmax _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                      ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$cmax @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$cmax @ n
"SPEC/Main $fOrdInd_$cmin _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                      ($dOrd :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd_$cmin @ n @ Index.Lind_3 $dOrd
  = Main.$s$fOrdInd_$cmin1 @ n
"SPEC/Main $fOrdInd_$cmin _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                      ($dOrd :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd_$cmin @ n @ Index.Uind_3 $dOrd
  = Main.$s$fOrdInd_$cmin @ n
"SPEC/Main $fOrdSeq @ Lind_3" [orphan] forall (v :: GHC.Classes.Ord
                                                      Index.Lind_3)
  Data.Sequence.Internal.$fOrdSeq @ Index.Lind_3 v = Main.$s$fOrdSeq1
"SPEC/Main $fOrdSeq @ Uind_3" [orphan] forall (v :: GHC.Classes.Ord
                                                      Index.Uind_3)
  Data.Sequence.Internal.$fOrdSeq @ Index.Uind_3 v = Main.$s$fOrdSeq
"SPEC/Main $fOrdSeq_$cmax @ Lind_3" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                Index.Lind_3)
  Data.Sequence.Internal.$fOrdSeq_$cmax @ Index.Lind_3 $dOrd
  = Main.$s$fOrdSeq_$cmax1
"SPEC/Main $fOrdSeq_$cmax @ Uind_3" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                Index.Uind_3)
  Data.Sequence.Internal.$fOrdSeq_$cmax @ Index.Uind_3 $dOrd
  = Main.$s$fOrdSeq_$cmax
"SPEC/Main $fOrdSeq_$cmin @ Lind_3" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                Index.Lind_3)
  Data.Sequence.Internal.$fOrdSeq_$cmin @ Index.Lind_3 $dOrd
  = Main.$s$fOrdSeq_$cmin1
"SPEC/Main $fOrdSeq_$cmin @ Uind_3" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                Index.Uind_3)
  Data.Sequence.Internal.$fOrdSeq_$cmin @ Index.Uind_3 $dOrd
  = Main.$s$fOrdSeq_$cmin
"SPEC/Main fromList @ (Ind 2 Lind_3) _" [orphan] forall @ a
                                                        ($dOrd :: GHC.Classes.Ord
                                                                    (Index.Ind 2 Index.Lind_3))
  Data.Map.Internal.fromList @ (Index.Ind 2 Index.Lind_3) @ a $dOrd
  = Main.$sfromList4 @ a
"SPEC/Main fromList @ (Ind 4 Lind_3) _" [orphan] forall @ a
                                                        ($dOrd :: GHC.Classes.Ord
                                                                    (Index.Ind 4 Index.Lind_3))
  Data.Map.Internal.fromList @ (Index.Ind 4 Index.Lind_3) @ a $dOrd
  = Main.$sfromList6 @ a
"SPEC/Main fromList @ (Ind 4 Uind_3) _" [orphan] forall @ a
                                                        ($dOrd :: GHC.Classes.Ord
                                                                    (Index.Ind 4 Index.Uind_3))
  Data.Map.Internal.fromList @ (Index.Ind 4 Index.Uind_3) @ a $dOrd
  = Main.$sfromList2 @ a
"SPEC/Main fromList @ (Seq Lind_3) _" [orphan] forall @ a
                                                      ($dOrd :: GHC.Classes.Ord
                                                                  (Data.Sequence.Internal.Seq
                                                                     Index.Lind_3))
  Data.Map.Strict.Internal.fromList @ (Data.Sequence.Internal.Seq
                                         Index.Lind_3)
                                    @ a
                                    $dOrd
  = Main.$sfromList10 @ a
"SPEC/Main fromList @ (Seq Uind_3) _" [orphan] forall @ a
                                                      ($dOrd :: GHC.Classes.Ord
                                                                  (Data.Sequence.Internal.Seq
                                                                     Index.Uind_3))
  Data.Map.Strict.Internal.fromList @ (Data.Sequence.Internal.Seq
                                         Index.Uind_3)
                                    @ a
                                    $dOrd
  = Main.$sfromList8 @ a
"SPEC/Main mapKeys @ (Ind 2 Lind_3) _ _" [orphan] forall @ k1
                                                         @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (Index.Ind 2 Index.Lind_3))
  Data.Map.Internal.mapKeys @ (Index.Ind 2 Index.Lind_3)
                            @ k1
                            @ a
                            $dOrd
  = Main.$smapKeys2 @ k1 @ a
"SPEC/Main mapKeys @ (Ind 4 Lind_3) _ _" [orphan] forall @ k1
                                                         @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (Index.Ind 4 Index.Lind_3))
  Data.Map.Internal.mapKeys @ (Index.Ind 4 Index.Lind_3)
                            @ k1
                            @ a
                            $dOrd
  = Main.$smapKeys3 @ k1 @ a
"SPEC/Main mapKeys @ (Ind 4 Uind_3) _ _" [orphan] forall @ k1
                                                         @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (Index.Ind 4 Index.Uind_3))
  Data.Map.Internal.mapKeys @ (Index.Ind 4 Index.Uind_3)
                            @ k1
                            @ a
                            $dOrd
  = Main.$smapKeys1 @ k1 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

