
==================== FINAL INTERFACE ====================
2019-01-14 15:48:14.12627 UTC

interface main:EquivarianceMetric [hpc] 8043
  interface hash: 360876e4c9f2a462fe135b61b9444920
  ABI hash: 94a0451584faf0eeea963f2ceda8b01e
  export-list hash: 2b056822118b67df8be19594354d4341
  orphan hash: adf141e2afa13144b43d40f26dabf470
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  EquivarianceMetric.eqn1_1M
  EquivarianceMetric.eqn1_2M
  EquivarianceMetric.eqn1_3M
  EquivarianceMetric.eqn2_2M
  EquivarianceMetric.eqn2_3M
  EquivarianceMetric.eqn3_3M
  EquivarianceMetric.index2Sparse1M
  EquivarianceMetric.index2Sparse2M
  EquivarianceMetric.index2Sparse3M
  EquivarianceMetric.index2Sparse4M
  EquivarianceMetric.index2Sparse5M
  EquivarianceMetric.index2Sparse6M
  EquivarianceMetric.index2Sparse6MPulled
  EquivarianceMetric.mkEqn1SparseM
  EquivarianceMetric.mkEqn2SparseM
  EquivarianceMetric.mkEqn3SparseM
  EquivarianceMetric.mkEqn4SparseM
  EquivarianceMetric.mkEqn5SparseM
  EquivarianceMetric.mkEqn6SparseM
  EquivarianceMetric.mkEqn6SparseMPulled
module dependencies: BasicTensors Index Ivar Pde Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  BasicTensors 0df78451cdb64d61e6036444805588ff
  exports: e3eb46cbf5e0ff0a91078b17412e1317
  delta_3 746fafc3bda1c359b0397abeed82111a
  delta_9 d22b99ceb5d7fccaba80523aeb233ebd
  interI_2 c8752b46a2fc2f04c0a3069d6d1c6ce8
  interI_3 c1f77ae09fc7268af2bcc60cec1b5e02
  interJ_2 362b1aa162de63a16d8e4ffc4dc03f56
  interMetric b140de30bf770a3116b03bc7af40f1a6
  ivar1M 0cfe69f4a2e2d15bf0d0e736a02b0122
  ivar2M 68fea389c110039b5ffc04f25b69e2ce
  ivar3M 848ae5997711deddd1e8874e3c02e89e
import  -/  Index e389b597f52dbfefe3745bcba1949c62
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index a01a9190ec51cc115d3358a99c063fe2
  Lind_9 199ec47d455794929a9c39c4489984a9
  Linds_3 b7f25c6c6ec24e0defe93a5bf531b4b2
  Uind_19 d671ee312bb9cf797ac44fea3cd70c8f
  Uind_9 8fce60bf392f1d712124e42ff35dcfc1
  Uinds_3 311b0a992b6841d7d23b3d8756aed0ef
  getValInd b1c032a982e0f73608bad6b7953c3ea2
import  -/  Ivar 52a8dc212ab2f8456a526e9d381a1784
  exports: 847b7f62b7be31da91814bf314ffd8e5
  Ivar ab6885cb499b09a96006f6f783229377
  addIvar 67ce428981a403b8506e974c3b8272d4
  sMultIvar 6fe3f98bfd11ce74b5f6274a48774f32
import  -/  Pde 6cb99ff48b3771dcca3d3397050c4c62
  exports: cfda6ba989dea29b657cfa7f1b7972bc
import  -/  Tensor 70d6952dea62d47ab6f2d598c8b571ec
  exports: cc1f578937ee3122bbbb4f8cf3eb8582
  Tensor 9baff54d5c983efc9b4dd7dd14f4d579
  Tensor 6b5aa7fabc304949e9aed286ed95183b
  tensorAdd 3f2d80707436db7c861987a2763b8ae6
  tensorContractWith_3 d4730f4187bd6ebe8b3dd0280edaf514
  tensorContractWith_9 8930e2e4933f3ae0d2c7678e040aa484
  tensorProductWith 1110039333b95adaab3b9466e9a23aae
  tensorSMult 87ac1fc931fedd0d8cbb4f13a3cf68b2
  tensorSub 631c1c57b5264eed0ff22494ec87ff89
  tensorTranspose 317a8f2f993e8cc2a39a39388f3629fe
e5c19495a36ab9c4c48821e1bd30ca1f
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> EquivarianceMetric.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> EquivarianceMetric.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> EquivarianceMetric.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> EquivarianceMetric.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
cc45d288a418eef9121b62e3b30ce8a6
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1d0437084e7e0fe0c2436e1ffe2078e2
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
6a2f8fc535b826e3b8a00bcc4e5ba4a8
  $stensorContractWith_11 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_12 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
7e2c0991b5be30f2fb593911d10a8a02
  $stensorContractWith_12 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
cebdc066b27fb1bc9b32bff748cda0a8
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
f397787492b6a38a990e984117e8b8b9
  $stensorContractWith_3_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
1a62728baf33a5074af25b52808afde1
  $stensorContractWith_5 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_6 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
e5a8b21ef170126c152ef974f73252db
  $stensorContractWith_6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
0c8ec09c2aa3fc81e98c8cb5c67c7d69
  $stensorContractWith_8 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_3_dt of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
3d62176b69eb07cf8daf4a7b2d1a733e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   EquivarianceMetric.$trModule3
                   EquivarianceMetric.$trModule1) -}
4290e0aaf94365353c8eb9421c9767ad
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceMetric.$trModule2) -}
ff0b34c8c64079e6e0492b9f6835e490
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EquivarianceMetric"#) -}
103209ea11e27820d78f39cf2440bd18
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceMetric.$trModule4) -}
540d6f7d4a4750def5bcb087293a24e9
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4876b83c959d81f0df36bec0233b76d3
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
6934c350fa5799dfdfbcbc041285ec44
  $weqn1_1M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 1 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn1_1M} True True} {__scc {main:EquivarianceMetric.eqn1_1M.prod} True True} BasicTensors.$winterMetric
                                                                                                                                     w
                                                                                                                                     w1 of ww { Unit# ww1 ->
                 case BasicTensors.ivar1M of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn1_1M} False True} {__scc {main:EquivarianceMetric.eqn1_1M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       EquivarianceMetric.eqn1_1M7
                                                                                                                                       ww1
                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 {__scc {main:EquivarianceMetric.eqn1_1M} False True} Tensor.$wtensorContractWith_9
                                                                        @ 0
                                                                        @ 1
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 1
                                                                        EquivarianceMetric.$stensorContractWith_5
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                        EquivarianceMetric.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        EquivarianceMetric.eqn1_1M4
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww5
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Uind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Lind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Uind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0L (<0>_N))
                                                                                 <Index.Lind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                 <Index.Uind_9>_N)_N
                                                                              <Index.Ind
                                                                                 (1
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Lind_9>_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N))
                                                                                 <Index.Uind_3>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N))
                                                                                 <Index.Lind_3>_N)_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } }) -}
67e09b64d5b83e7c54415a9a2a1b0ca5
  $weqn1_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 1 1 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} True True} {__scc {main:EquivarianceMetric.eqn1_2M.prod} True False} {__scc {main:EquivarianceMetric.eqn1_2M.intTotal} True False} {__scc {main:EquivarianceMetric.eqn1_2M.int1} True True} BasicTensors.$winterMetric
                                                                                                                                                                                                                                                             w
                                                                                                                                                                                                                                                             w1 of ww { Unit# ww1 ->
                 case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} False True} {__scc {main:EquivarianceMetric.eqn1_2M.int1} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                       ww1
                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 case EquivarianceMetric.eqn1_2M4
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0R (<2>_N))
                         (Add0R (<2>_N))
                         <GHC.Real.Rational>_R)_R of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} False True} {__scc {main:EquivarianceMetric.eqn1_2M.intTotal} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True True} EquivarianceMetric.eqn1_2M_go8
                                                                                                                                                                                                                                                                                                                    ww8 of dt1 { DEFAULT ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} False True} {__scc {main:EquivarianceMetric.eqn1_2M.intTotal} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                            @ (Index.Index
                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                                                                                                                                                            (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                                                                               @ 2
                                                                                                                                                                                                                                                                               @ 2)
                                                                                                                                                                                                                                                                            EquivarianceMetric.eqn1_2M_lvl19
                                                                                                                                                                                                                                                                            ww5
                                                                                                                                                                                                                                                                              `cast`
                                                                                                                                                                                                                                                                            (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                               ((,,,,,,,)
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                     <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                     <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                     <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                     <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                     <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                     <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                                                                     <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                  (Index.Ind
                                                                                                                                                                                                                                                                                     (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                              <1>_N))
                                                                                                                                                                                                                                                                                     <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                               <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                            dt1 of dt2 { DEFAULT ->
                 case BasicTensors.ivar2M of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} False True} {__scc {main:EquivarianceMetric.eqn1_2M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 2
                                                                                                                                       @ 2
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       EquivarianceMetric.eqn1_2M3
                                                                                                                                       dt2
                                                                                                                                       ww10 of ww11 { Unit# ww12 ->
                 case {__scc {main:EquivarianceMetric.eqn1_2M} False True} Tensor.$wtensorContractWith_3
                                                                             @ 1
                                                                             @ 2
                                                                             @ (Ivar.Ivar
                                                                                  GHC.Real.Rational)
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 1
                                                                             @ 2
                                                                             EquivarianceMetric.$stensorContractWith_1
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                             EquivarianceMetric.$stensorContractWith_8
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                             EquivarianceMetric.eqn1_2M1
                                                                             EquivarianceMetric.eqn1_1M1
                                                                             ww12
                                                                               `cast`
                                                                             (Data.Map.Internal.Map
                                                                                ((,,,,,,,)
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Uind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Lind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Uind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Lind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<1>_N))
                                                                                      <Index.Uind_9>_N)_N
                                                                                   (Index.Ind
                                                                                      (AddDef (<1>_N,
                                                                                               <1>_N))
                                                                                      <Index.Lind_9>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                    <1>_N)))
                                                                                      <Index.Uind_3>_N)_N
                                                                                   <Index.Ind
                                                                                      (2
                                                                                       GHC.TypeNats.+ 1)
                                                                                      Index.Lind_3>_N)_N
                                                                                <Ivar.Ivar
                                                                                   GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 {__scc {main:EquivarianceMetric.eqn1_2M} False True} Tensor.$wtensorContractWith_9
                                                                        @ 0
                                                                        @ 1
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 2
                                                                        EquivarianceMetric.$stensorContractWith_5
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                        EquivarianceMetric.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        EquivarianceMetric.eqn1_1M4
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww14
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              <Index.Ind
                                                                                 0 Index.Uind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Uind_19>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_19>_N
                                                                              (Index.Ind
                                                                                 (Sym (Add0L (<1>_N)))
                                                                                 <Index.Uind_9>_N)_N
                                                                              (Index.Ind
                                                                                 (Sym (AddDef (<1>_N,
                                                                                               <1>_N)))
                                                                                 <Index.Lind_9>_N)_N
                                                                              <Index.Ind
                                                                                 1 Index.Uind_3>_N
                                                                              <Index.Ind
                                                                                 2
                                                                                 Index.Lind_3>_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } } } } } } } }) -}
f1a1eaf8ba70d59e2af53493eebac362
  $weqn1_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 2 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} True True} {__scc {main:EquivarianceMetric.eqn1_3M.prod} True False} {__scc {main:EquivarianceMetric.eqn1_3M.intTotal} True False} {__scc {main:EquivarianceMetric.eqn1_3M.int1} True True} BasicTensors.$winterMetric
                                                                                                                                                                                                                                                             w
                                                                                                                                                                                                                                                             w1 of ww { Unit# ww1 ->
                 case BasicTensors.delta_9 of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} {__scc {main:EquivarianceMetric.eqn1_3M.int1} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                       ww1
                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} {__scc {main:EquivarianceMetric.eqn1_3M.int2} True False} {__scc {main:EquivarianceMetric.eqn1_3M.int2} False True} BasicTensors.$winterMetric
                                                                                                                                                                                                 w
                                                                                                                                                                                                 w1 of ww7 { Unit# ww8 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} {__scc {main:EquivarianceMetric.eqn1_3M.int2} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                       ww3
                                                                                                                                       ww8 of ww9 { Unit# ww10 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} {__scc {main:EquivarianceMetric.eqn1_3M.intTotal} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                      2
                                                                                                                                                                                                                                      1
                                                                                                                                                                                                                                      1)
                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                 (Tensor.aSymTensor3
                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                    @ 2
                                                                                                                                                                                                                                    @ 1
                                                                                                                                                                                                                                    @ 1)
                                                                                                                                                                                                                                 EquivarianceMetric.eqn1_2M_lvl19
                                                                                                                                                                                                                                 ww5
                                                                                                                                                                                                                                   `cast`
                                                                                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                                                                                   <1>_N))
                                                                                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                                                                                   <1>_N))
                                                                                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0R (<1>_N))
                                                                                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                    <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                 ww10
                                                                                                                                                                                                                                   `cast`
                                                                                                                                                                                                                                 (Data.Map.Internal.Map
                                                                                                                                                                                                                                    ((,,,,,,,)
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Uind_20>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Lind_20>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Uind_19>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<0>_N))
                                                                                                                                                                                                                                          <Index.Lind_19>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                                                                                   <1>_N))
                                                                                                                                                                                                                                          <Index.Uind_9>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (AddDef (<1>_N,
                                                                                                                                                                                                                                                   <1>_N))
                                                                                                                                                                                                                                          <Index.Lind_9>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                          <Index.Uind_3>_N)_N
                                                                                                                                                                                                                                       (Index.Ind
                                                                                                                                                                                                                                          (Add0L (<1>_N))
                                                                                                                                                                                                                                          <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                    <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case BasicTensors.ivar3M of ww11 { Tensor.Tensor ww12 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} {__scc {main:EquivarianceMetric.eqn1_3M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       @ 2
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       EquivarianceMetric.eqn1_3M4
                                                                                                                                       dt1
                                                                                                                                       ww12 of ww13 { Unit# ww14 ->
                 case {__scc {main:EquivarianceMetric.eqn1_3M} False True} Tensor.$wtensorContractWith_9
                                                                             @ 1
                                                                             @ 3
                                                                             @ (Ivar.Ivar
                                                                                  GHC.Real.Rational)
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 1
                                                                             @ 1
                                                                             EquivarianceMetric.$stensorContractWith_1
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                             EquivarianceMetric.$stensorContractWith_11
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                             EquivarianceMetric.eqn1_3M2
                                                                             EquivarianceMetric.eqn1_1M1
                                                                             ww14
                                                                               `cast`
                                                                             (Data.Map.Internal.Map
                                                                                ((,,,,,,,)
                                                                                   (Index.Ind
                                                                                      (Add0R (<0>_N))
                                                                                      <Index.Uind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<0>_N))
                                                                                      <Index.Lind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<0>_N))
                                                                                      <Index.Uind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<0>_N))
                                                                                      <Index.Lind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                    <1>_N)))
                                                                                      <Index.Uind_9>_N)_N
                                                                                   (Index.Ind
                                                                                      (AddDef (<2>_N,
                                                                                               <2>_N) ; Sym (AddDef (<3>_N,
                                                                                                                     <1>_N)))
                                                                                      <Index.Lind_9>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<1>_N))
                                                                                      <Index.Uind_3>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<1>_N))
                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                <Ivar.Ivar
                                                                                   GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 {__scc {main:EquivarianceMetric.eqn1_3M} False True} Tensor.$wtensorContractWith_9
                                                                        @ 0
                                                                        @ 2
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 1
                                                                        EquivarianceMetric.$stensorContractWith_5
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                        EquivarianceMetric.$stensorContractWith_8
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                        EquivarianceMetric.eqn1_3M1
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww16
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              <Index.Ind
                                                                                 0 Index.Uind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Uind_19>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_19>_N
                                                                              (Index.Ind
                                                                                 (Sym (Add0L (<1>_N)))
                                                                                 <Index.Uind_9>_N)_N
                                                                              (Index.Ind
                                                                                 (Sym (AddDef (<2>_N,
                                                                                               <1>_N)))
                                                                                 <Index.Lind_9>_N)_N
                                                                              <Index.Ind
                                                                                 1 Index.Uind_3>_N
                                                                              <Index.Ind
                                                                                 1
                                                                                 Index.Lind_3>_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } } } } } } } }) -}
1a603c155f4b8a96ce7c7512e4a101e3
  $weqn2_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 1 1 0 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn2_2M} True True} {__scc {main:EquivarianceMetric.eqn2_2M.prod} True False} {__scc {main:EquivarianceMetric.eqn2_2M.interTotal} True False} {__scc {main:EquivarianceMetric.eqn2_2M.int1} True True} BasicTensors.$winterMetric
                                                                                                                                                                                                                                                               w
                                                                                                                                                                                                                                                               w1 of ww { Unit# ww1 ->
                 case {__scc {main:EquivarianceMetric.eqn2_2M} False True} {__scc {main:EquivarianceMetric.eqn2_2M.int1} False True} BasicTensors.interI_2
                                                                                                                                       w of ww2 { Tensor.Tensor ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn2_2M} False True} {__scc {main:EquivarianceMetric.eqn2_2M.int1} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                       ww1
                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:EquivarianceMetric.eqn2_2M} False True} {__scc {main:EquivarianceMetric.eqn2_2M.interTotal} False True} Tensor.$wtensorContractWith_3
                                                                                                                                             @ 0
                                                                                                                                             @ 2
                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 0
                                                                                                                                             @ 2
                                                                                                                                             @ 1
                                                                                                                                             EquivarianceMetric.$stensorContractWith_5
                                                                                                                                               `cast`
                                                                                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                       <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                             EquivarianceMetric.$stensorContractWith_8
                                                                                                                                               `cast`
                                                                                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                       <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                             EquivarianceMetric.eqn1_3M1
                                                                                                                                             GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                             ww5
                                                                                                                                               `cast`
                                                                                                                                             (Data.Map.Internal.Map
                                                                                                                                                ((,,,,,,,)
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Uind_20>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Lind_20>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Uind_19>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0L (<0>_N))
                                                                                                                                                      <Index.Lind_19>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (AddDef (<1>_N,
                                                                                                                                                               <1>_N))
                                                                                                                                                      <Index.Uind_9>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0R (<1>_N))
                                                                                                                                                      <Index.Lind_9>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                                                                                      <Index.Uind_3>_N)_N
                                                                                                                                                   (Index.Ind
                                                                                                                                                      (AddDef (<1>_N,
                                                                                                                                                               <2>_N) ; Sym (AddDef (<2>_N,
                                                                                                                                                                                     <1>_N)))
                                                                                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                                                                                <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case BasicTensors.ivar1M of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:EquivarianceMetric.eqn2_2M} False True} {__scc {main:EquivarianceMetric.eqn2_2M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       EquivarianceMetric.eqn2_2M1
                                                                                                                                       ww8
                                                                                                                                       ww10 of ww11 { Unit# ww12 ->
                 {__scc {main:EquivarianceMetric.eqn2_2M} False True} Tensor.$wtensorContractWith_9
                                                                        @ 1
                                                                        @ 1
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 2
                                                                        EquivarianceMetric.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        EquivarianceMetric.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        EquivarianceMetric.eqn1_1M4
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww12
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Uind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Lind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Uind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Lind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                               <1>_N)))
                                                                                 <Index.Uind_9>_N)_N
                                                                              <Index.Ind
                                                                                 (1
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Lind_9>_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Uind_3>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<2>_N))
                                                                                 <Index.Lind_3>_N)_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } } } } }) -}
20dd04532d62ab8dd3dc524034a30dfe
  $weqn2_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 1 2 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} True True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_1} True True} BasicTensors.interI_2
                                                                                                                                       w of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_1} False True} BasicTensors.$winterMetric
                                                                                                                                         w
                                                                                                                                         w1 of ww2 { Unit# ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_1} False True} Tensor.$wtensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 2
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         ww1
                                                                                                                                         ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_2} True False} {__scc {main:EquivarianceMetric.eqn2_3M.int1_2} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                     EquivarianceMetric.$stensorContractWith_5
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                                     EquivarianceMetric.$stensorContractWith_8
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                               <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                                                                                     EquivarianceMetric.eqn1_1M4
                                                                                                                                                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                                                     ww5
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (AddDef (<1>_N,
                                                                                                                                                                                                                       <1>_N))
                                                                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<1>_N))
                                                                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                                                                           <Index.Ind
                                                                                                                                                                                                              (0
                                                                                                                                                                                                               GHC.TypeNats.+ 1)
                                                                                                                                                                                                              Index.Uind_3>_N
                                                                                                                                                                                                           <Index.Ind
                                                                                                                                                                                                              (2
                                                                                                                                                                                                               GHC.TypeNats.+ 1)
                                                                                                                                                                                                              Index.Lind_3>_N)_N
                                                                                                                                                                                                        <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_3} True True} BasicTensors.interJ_2
                                                                                                                                        w1 of ww9 { Tensor.Tensor ww10 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_3} False True} Tensor.$wtensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 2
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 2
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 2
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         ww10
                                                                                                                                         ww8 of ww11 { Unit# ww12 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1_4} True False} {__scc {main:EquivarianceMetric.eqn2_3M.int1_4} False True} Tensor.$wtensorContractWith_3
                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     @ 2
                                                                                                                                                                                                     EquivarianceMetric.$stensorContractWith_1
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                                     EquivarianceMetric.$stensorContractWith_1
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                                     EquivarianceMetric.eqn2_3M3
                                                                                                                                                                                                     GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                                                                                     ww12
                                                                                                                                                                                                       `cast`
                                                                                                                                                                                                     (Data.Map.Internal.Map
                                                                                                                                                                                                        ((,,,,,,,)
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Uind_20>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Lind_20>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Uind_19>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<0>_N))
                                                                                                                                                                                                              <Index.Lind_19>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<2>_N))
                                                                                                                                                                                                              <Index.Uind_9>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (AddDef (<1>_N,
                                                                                                                                                                                                                       <1>_N))
                                                                                                                                                                                                              <Index.Lind_9>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N)))
                                                                                                                                                                                                              <Index.Uind_3>_N)_N
                                                                                                                                                                                                           (Index.Ind
                                                                                                                                                                                                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                                                                                                                                            <1>_N)))
                                                                                                                                                                                                              <Index.Lind_3>_N)_N)_N
                                                                                                                                                                                                        <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} let {
                                                                             int1_4 :: Tensor.Tensor
                                                                                         0
                                                                                         0
                                                                                         0
                                                                                         0
                                                                                         2
                                                                                         2
                                                                                         1
                                                                                         1
                                                                                         GHC.Real.Rational
                                                                             = Tensor.Tensor
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 2
                                                                                 @ 2
                                                                                 @ 1
                                                                                 @ 1
                                                                                 @ GHC.Real.Rational
                                                                                 ww14
                                                                           } in
                                                                           {__scc {main:EquivarianceMetric.eqn2_3M.prod} True False} {__scc {main:EquivarianceMetric.eqn2_3M.interTotal} True False} {__scc {main:EquivarianceMetric.eqn2_3M.int1} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True False} int1_4 of wild { Tensor.Tensor tMap ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int1} False True} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} False True} EquivarianceMetric.eqn2_3M_go1
                                                                                                                                                                                                                          tMap of dt1 { DEFAULT ->
                 case EquivarianceMetric.eqn2_3M2
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<1>_N, <1>_N))
                         (AddDef (<1>_N, <1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww15 { Tensor.Tensor ww16 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.interTotal} False True} {__scc {main:Tensor.tensorSub} True True} {__scc {main:Tensor.tensorSMult} True False} {__scc {main:Tensor.tensorSMult} False True} {__scc {main:Tensor.fmap} True True} EquivarianceMetric.eqn2_3M_go8
                                                                                                                                                                                                                                                                                                                      ww16 of dt2 { DEFAULT ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.interTotal} False True} {__scc {main:Tensor.tensorSub} False True} {__scc {main:Tensor.tensorAdd} True False} {__scc {main:Tensor.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                              @ (Index.Index
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   2
                                                                                                                                                                                                                                                                                   2
                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                                                                                              (Tensor.aSymTensor3
                                                                                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                                                                                 @ 0
                                                                                                                                                                                                                                                                                 @ 2
                                                                                                                                                                                                                                                                                 @ 2
                                                                                                                                                                                                                                                                                 @ 1
                                                                                                                                                                                                                                                                                 @ 1)
                                                                                                                                                                                                                                                                              EquivarianceMetric.eqn1_2M_lvl19
                                                                                                                                                                                                                                                                              dt1
                                                                                                                                                                                                                                                                              dt2 of dt3 { DEFAULT ->
                 case BasicTensors.ivar2M of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 2
                                                                                                                                       @ 2
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       EquivarianceMetric.eqn2_3M1
                                                                                                                                       dt3
                                                                                                                                       ww18 of ww19 { Unit# ww20 ->
                 case {__scc {main:EquivarianceMetric.eqn2_3M} False True} Tensor.$wtensorContractWith_9
                                                                             @ 1
                                                                             @ 2
                                                                             @ (Ivar.Ivar
                                                                                  GHC.Real.Rational)
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 0
                                                                             @ 1
                                                                             @ 2
                                                                             EquivarianceMetric.$stensorContractWith_1
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                             EquivarianceMetric.$stensorContractWith_8
                                                                               `cast`
                                                                             (Sym (GHC.TypeNats.N:SNat[0]
                                                                                       <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                             EquivarianceMetric.eqn1_2M1
                                                                             EquivarianceMetric.eqn1_1M1
                                                                             ww20
                                                                               `cast`
                                                                             (Data.Map.Internal.Map
                                                                                ((,,,,,,,)
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Uind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Lind_20>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Uind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0L (<0>_N))
                                                                                      <Index.Lind_19>_N)_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<2>_N) ; Sym (AddDef (<1>_N,
                                                                                                                    <1>_N)))
                                                                                      <Index.Uind_9>_N)_N
                                                                                   <Index.Ind
                                                                                      (2
                                                                                       GHC.TypeNats.+ 1)
                                                                                      Index.Lind_9>_N
                                                                                   (Index.Ind
                                                                                      (Add0R (<1>_N))
                                                                                      <Index.Uind_3>_N)_N
                                                                                   (Index.Ind
                                                                                      (AddDef (<1>_N,
                                                                                               <1>_N))
                                                                                      <Index.Lind_3>_N)_N)_N
                                                                                <Ivar.Ivar
                                                                                   GHC.Real.Rational>_R)_R of ww21 { Unit# ww22 ->
                 {__scc {main:EquivarianceMetric.eqn2_3M} False True} Tensor.$wtensorContractWith_3
                                                                        @ 0
                                                                        @ 1
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 2
                                                                        EquivarianceMetric.$stensorContractWith_5
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                        EquivarianceMetric.$stensorContractWith_1
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                        EquivarianceMetric.eqn1_1M4
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww22
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              <Index.Ind
                                                                                 0 Index.Uind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_20>_N
                                                                              <Index.Ind
                                                                                 0 Index.Uind_19>_N
                                                                              <Index.Ind
                                                                                 0 Index.Lind_19>_N
                                                                              <Index.Ind
                                                                                 1 Index.Uind_9>_N
                                                                              <Index.Ind
                                                                                 2 Index.Lind_9>_N
                                                                              (Index.Ind
                                                                                 (Sym (Add0L (<1>_N)))
                                                                                 <Index.Uind_3>_N)_N
                                                                              (Index.Ind
                                                                                 (Sym (AddDef (<1>_N,
                                                                                               <1>_N)))
                                                                                 <Index.Lind_3>_N)_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } } } } } } } } } } } } } }) -}
ab86ab78e1839d05f56c28bada0897c8
  $weqn3_3M ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 1 0 0 2 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} True True} {__scc {main:EquivarianceMetric.eqn3_3M.prod} True False} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} True False} {__scc {main:EquivarianceMetric.eqn3_3M.int1} True True} BasicTensors.interJ_2
                                                                                                                                                                                                                                                             w2 of ww { Tensor.Tensor ww1 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.int1} False True} BasicTensors.$winterMetric
                                                                                                                                       w1
                                                                                                                                       w2 of ww2 { Unit# ww3 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.int1} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 2
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       @ 1
                                                                                                                                       GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                       ww1
                                                                                                                                       ww3 of ww4 { Unit# ww5 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} False True} BasicTensors.interI_3
                                                                                                                                           w of ww7 { Tensor.Tensor ww8 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} False True} Tensor.$wtensorProductWith
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 2
                                                                                                                                           @ 3
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 3
                                                                                                                                           GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                           ww5
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                             <1>_N))
                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (AddDef (<2>_N,
                                                                                                                                                             <1>_N))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                           ww8 of ww9 { Unit# ww10 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 2
                                                                                                                                           @ 3
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 2
                                                                                                                                           EquivarianceMetric.$stensorContractWith_8
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                           EquivarianceMetric.$stensorContractWith_11
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                                                                           EquivarianceMetric.eqn3_3M2
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww10
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<0>_N))
                                                                                                                                                    <Index.Uind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<0>_N))
                                                                                                                                                    <Index.Lind_20>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                    <Index.Uind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<0>_N))
                                                                                                                                                    <Index.Lind_19>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                    <Index.Uind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<2>_N))
                                                                                                                                                    <Index.Lind_9>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Add0R (<3>_N) ; Sym (AddDef (<2>_N,
                                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (AddDef (<1>_N,
                                                                                                                                                             <3>_N) ; Sym (AddDef (<3>_N,
                                                                                                                                                                                   <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 1
                                                                                                                                           @ 2
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 2
                                                                                                                                           EquivarianceMetric.$stensorContractWith_1
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           EquivarianceMetric.$stensorContractWith_8
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                           EquivarianceMetric.eqn1_2M1
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww12
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    2
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<1>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<2>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.intTotal} False True} Tensor.$wtensorContractWith_3
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                           @ 0
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 0
                                                                                                                                           @ 1
                                                                                                                                           @ 2
                                                                                                                                           EquivarianceMetric.$stensorContractWith_5
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                           EquivarianceMetric.$stensorContractWith_1
                                                                                                                                             `cast`
                                                                                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                           EquivarianceMetric.eqn1_1M4
                                                                                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                                                                                           ww14
                                                                                                                                             `cast`
                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                              ((,,,,,,,)
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Uind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_20>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    0
                                                                                                                                                    Index.Lind_19>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    1
                                                                                                                                                    Index.Uind_9>_N
                                                                                                                                                 <Index.Ind
                                                                                                                                                    2
                                                                                                                                                    Index.Lind_9>_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (Add0L (<1>_N)))
                                                                                                                                                    <Index.Uind_3>_N)_N
                                                                                                                                                 (Index.Ind
                                                                                                                                                    (Sym (AddDef (<1>_N,
                                                                                                                                                                  <1>_N)))
                                                                                                                                                    <Index.Lind_3>_N)_N)_N
                                                                                                                                              <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 case BasicTensors.ivar1M of ww17 { Tensor.Tensor ww18 ->
                 case {__scc {main:EquivarianceMetric.eqn3_3M} False True} {__scc {main:EquivarianceMetric.eqn3_3M.prod} False True} Tensor.$wtensorProductWith
                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ (Ivar.Ivar
                                                                                                                                            GHC.Real.Rational)
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 2
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       @ 1
                                                                                                                                       @ 0
                                                                                                                                       @ 0
                                                                                                                                       EquivarianceMetric.eqn3_3M1
                                                                                                                                       ww16
                                                                                                                                       ww18 of ww19 { Unit# ww20 ->
                 {__scc {main:EquivarianceMetric.eqn3_3M} False True} Tensor.$wtensorContractWith_9
                                                                        @ 0
                                                                        @ 2
                                                                        @ (Ivar.Ivar
                                                                             GHC.Real.Rational)
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        @ 0
                                                                        @ 0
                                                                        @ 1
                                                                        EquivarianceMetric.$stensorContractWith_5
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                        EquivarianceMetric.$stensorContractWith_8
                                                                          `cast`
                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                        EquivarianceMetric.eqn1_3M1
                                                                        EquivarianceMetric.eqn1_1M1
                                                                        ww20
                                                                          `cast`
                                                                        (Data.Map.Internal.Map
                                                                           ((,,,,,,,)
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Uind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Lind_20>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N))
                                                                                 <Index.Uind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Lind_19>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                                                                                 <Index.Uind_9>_N)_N
                                                                              <Index.Ind
                                                                                 (2
                                                                                  GHC.TypeNats.+ 1)
                                                                                 Index.Lind_9>_N
                                                                              (Index.Ind
                                                                                 (Add0R (<0>_N))
                                                                                 <Index.Uind_3>_N)_N
                                                                              (Index.Ind
                                                                                 (Add0R (<1>_N))
                                                                                 <Index.Lind_3>_N)_N)_N
                                                                           <Ivar.Ivar
                                                                              GHC.Real.Rational>_R)_R } } } } } } } } } }) -}
e0659299b0f71bcb0904da5fdffe819f
  $windex2Sparse1M ::
    Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_9 1)
                   (ww1 :: Index.Uinds_3 1)
                   (ww2 :: Index.Linds_3 1) ->
                 {__scc {main:EquivarianceMetric.index2Sparse1M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse1M} False True} case {__scc {main:EquivarianceMetric.index2Sparse1M.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse1M.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_3
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> let {
                                                                                                                                                   $j :: GHC.Prim.Int#
                                                                                                                                                         -> GHC.Types.Int
                                                                                                                                                     <join 1> {- Arity: 1,
                                                                                                                                                                 Strictness: <S,U>m -}
                                                                                                                                                   = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse1M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse1M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Lind_3
                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                    s1 of wild3 {
                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                          of {}
                                                                                                                                                       GHC.Base.Just x1
                                                                                                                                                       -> case x1 of wild4 {
                                                                                                                                                            Index.L0_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse1M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    1#)
                                                                                                                                                            Index.L1_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse1M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    2#)
                                                                                                                                                            Index.L2_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse1M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    3#)
                                                                                                                                                            Index.L3_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse1M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    4#) } } }
                                                                                                                                                 } in
                                                                                                                                                 case x of wild2 {
                                                                                                                                                   Index.U0_3
                                                                                                                                                   -> $j
                                                                                                                                                        0#
                                                                                                                                                   Index.U1_3
                                                                                                                                                   -> $j
                                                                                                                                                        1#
                                                                                                                                                   Index.U2_3
                                                                                                                                                   -> $j
                                                                                                                                                        2#
                                                                                                                                                   Index.U3_3
                                                                                                                                                   -> $j
                                                                                                                                                        3# } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse1M} False True} case {__scc {main:EquivarianceMetric.index2Sparse1M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse1M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse1M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 GHC.Types.I#
                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                      ({__scc {main:EquivarianceMetric.index2Sparse1M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                       a#)
                                                                                                                                                      1#) } } } #)) -}
e92d723e39d9cf9bb57a26380168c34b
  $windex2Sparse2M ::
    Index.Linds_9 1
    -> Index.Uinds_3 1
    -> Index.Linds_3 2
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_9 1)
                   (ww1 :: Index.Uinds_3 1)
                   (ww2 :: Index.Linds_3 2) ->
                 {__scc {main:EquivarianceMetric.index2Sparse2M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse2M} False True} case {__scc {main:EquivarianceMetric.index2Sparse2M.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse2M.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_3
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> let {
                                                                                                                                                   $j :: GHC.Prim.Int#
                                                                                                                                                         -> GHC.Types.Int
                                                                                                                                                     <join 1> {- Arity: 1,
                                                                                                                                                                 Strictness: <S,U>m -}
                                                                                                                                                   = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse2M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse2M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Lind_3
                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                    s1 of wild3 {
                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                          of {}
                                                                                                                                                       GHC.Base.Just x1
                                                                                                                                                       -> case x1 of wild4 {
                                                                                                                                                            Index.L0_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse2M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    1#)
                                                                                                                                                            Index.L1_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse2M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    2#)
                                                                                                                                                            Index.L2_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse2M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    3#)
                                                                                                                                                            Index.L3_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse2M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    4#) } } }
                                                                                                                                                 } in
                                                                                                                                                 case x of wild2 {
                                                                                                                                                   Index.U0_3
                                                                                                                                                   -> $j
                                                                                                                                                        0#
                                                                                                                                                   Index.U1_3
                                                                                                                                                   -> $j
                                                                                                                                                        1#
                                                                                                                                                   Index.U2_3
                                                                                                                                                   -> $j
                                                                                                                                                        2#
                                                                                                                                                   Index.U3_3
                                                                                                                                                   -> $j
                                                                                                                                                        3# } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse2M} False True} case {__scc {main:EquivarianceMetric.index2Sparse2M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse2M.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse2M.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case x1 of wild4 {
                                                                                                                                                        Index.L0_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   1#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L1_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   2#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L2_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   3#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L3_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse2M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   4#)
                                                                                                                                                                1#) } } } } } } #)) -}
a45954353cdef9f2ec1f3d53ebcc106f
  $windex2Sparse3M ::
    Index.Linds_9 2
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Linds_9 2)
                   (ww1 :: Index.Uinds_3 1)
                   (ww2 :: Index.Linds_3 1) ->
                 {__scc {main:EquivarianceMetric.index2Sparse3M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse3M} False True} case {__scc {main:EquivarianceMetric.index2Sparse3M.m} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse3M.m} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_3
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> let {
                                                                                                                                                   $j :: GHC.Prim.Int#
                                                                                                                                                         -> GHC.Types.Int
                                                                                                                                                     <join 1> {- Arity: 1,
                                                                                                                                                                 Strictness: <S,U>m -}
                                                                                                                                                   = \ (y :: GHC.Prim.Int#)[OneShot] ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse3M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                     case {__scc {main:EquivarianceMetric.index2Sparse3M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                    @ Index.Lind_3
                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                    s1 of wild3 {
                                                                                                                                                       GHC.Base.Nothing
                                                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                                                          ret_ty GHC.Types.Int
                                                                                                                                                          of {}
                                                                                                                                                       GHC.Base.Just x1
                                                                                                                                                       -> case x1 of wild4 {
                                                                                                                                                            Index.L0_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse3M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    1#)
                                                                                                                                                            Index.L1_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse3M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    2#)
                                                                                                                                                            Index.L2_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse3M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    3#)
                                                                                                                                                            Index.L3_3
                                                                                                                                                            -> GHC.Types.I#
                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                    (GHC.Prim.*#
                                                                                                                                                                       (GHC.Prim.-#
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse3M.m} False True} GHC.Prim.+#
                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                           y)
                                                                                                                                                                          1#)
                                                                                                                                                                       4#)
                                                                                                                                                                    4#) } } }
                                                                                                                                                 } in
                                                                                                                                                 case x of wild2 {
                                                                                                                                                   Index.U0_3
                                                                                                                                                   -> $j
                                                                                                                                                        0#
                                                                                                                                                   Index.U1_3
                                                                                                                                                   -> $j
                                                                                                                                                        1#
                                                                                                                                                   Index.U2_3
                                                                                                                                                   -> $j
                                                                                                                                                        2#
                                                                                                                                                   Index.U3_3
                                                                                                                                                   -> $j
                                                                                                                                                        3# } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse3M} False True} case {__scc {main:EquivarianceMetric.index2Sparse3M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse3M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse3M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse3M.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse3M.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_9
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case {__scc {main:EquivarianceMetric.index2Sparse3M.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                    @ Index.Lind_9
                                                                                                                                                                                                                                                                    x1 of a#1 { DEFAULT ->
                                                                                                                                                      GHC.Types.I#
                                                                                                                                                        (GHC.Prim.+#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 50#
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:EquivarianceMetric.index2Sparse3M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                        a#)
                                                                                                                                                                       1#)
                                                                                                                                                                    10#))
                                                                                                                                                              ({__scc {main:EquivarianceMetric.index2Sparse3M.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#1))
                                                                                                                                                           1#) } } } } } } #)) -}
fec1d18d09de3604a834effa6624261e
  $windex2Sparse4M ::
    Index.Uinds_9 1
    -> Index.Linds_9 1
    -> Index.Linds_3 2
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,U(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_9 1)
                   (ww1 :: Index.Linds_9 1)
                   (ww2 :: Index.Linds_3 2) ->
                 {__scc {main:EquivarianceMetric.index2Sparse4M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse4M} False True} case {__scc {main:EquivarianceMetric.index2Sparse4M.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Uind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse4M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse4M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case x1 of wild4 {
                                                                                                                                                        Index.L0_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                1#)
                                                                                                                                                        Index.L1_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                2#)
                                                                                                                                                        Index.L2_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                3#)
                                                                                                                                                        Index.L3_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse4M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                4#) } } } } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse4M} False True} case {__scc {main:EquivarianceMetric.index2Sparse4M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse4M.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse4M.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case x1 of wild4 {
                                                                                                                                                        Index.L0_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   1#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L1_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   2#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L2_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   3#)
                                                                                                                                                                1#)
                                                                                                                                                        Index.L3_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                      10#
                                                                                                                                                                      (GHC.Prim.*#
                                                                                                                                                                         (GHC.Prim.-#
                                                                                                                                                                            ({__scc {main:EquivarianceMetric.index2Sparse4M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                             a#)
                                                                                                                                                                            1#)
                                                                                                                                                                         4#))
                                                                                                                                                                   4#)
                                                                                                                                                                1#) } } } } } } #)) -}
c6ce6b2d8929b281a5f7f32063b6d352
  $windex2Sparse5M ::
    Index.Uinds_9 1
    -> Index.Linds_9 2
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_9 1)
                   (ww1 :: Index.Linds_9 2)
                   (ww2 :: Index.Linds_3 1) ->
                 {__scc {main:EquivarianceMetric.index2Sparse5M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse5M} False True} case {__scc {main:EquivarianceMetric.index2Sparse5M.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_9
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Uind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse5M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse5M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case x1 of wild4 {
                                                                                                                                                        Index.L0_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                1#)
                                                                                                                                                        Index.L1_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                2#)
                                                                                                                                                        Index.L2_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                3#)
                                                                                                                                                        Index.L3_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   16#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse5M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                4#) } } } } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse5M} False True} case {__scc {main:EquivarianceMetric.index2Sparse5M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse5M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse5M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse5M.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse5M.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_9
                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case {__scc {main:EquivarianceMetric.index2Sparse5M.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                    @ Index.Lind_9
                                                                                                                                                                                                                                                                    x1 of a#1 { DEFAULT ->
                                                                                                                                                      GHC.Types.I#
                                                                                                                                                        (GHC.Prim.+#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 50#
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:EquivarianceMetric.index2Sparse5M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                        a#)
                                                                                                                                                                       1#)
                                                                                                                                                                    10#))
                                                                                                                                                              ({__scc {main:EquivarianceMetric.index2Sparse5M.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#1))
                                                                                                                                                           1#) } } } } } } #)) -}
d5a80ca4cff683125561b0853444db4b
  $windex2Sparse6M ::
    Index.Uinds_19 1
    -> Index.Linds_9 2
    -> Index.Linds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_19 1)
                   (ww1 :: Index.Linds_9 2)
                   (ww2 :: Index.Linds_3 1) ->
                 {__scc {main:EquivarianceMetric.index2Sparse6M} True False} (# {__scc {main:EquivarianceMetric.index2Sparse6M} False True} case {__scc {main:EquivarianceMetric.index2Sparse6M.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Uind_19
                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Uind_19
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse6M.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse6M.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case x1 of wild4 {
                                                                                                                                                        Index.L0_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   56#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                1#)
                                                                                                                                                        Index.L1_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   56#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                2#)
                                                                                                                                                        Index.L2_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   56#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                3#)
                                                                                                                                                        Index.L3_3
                                                                                                                                                        -> GHC.Types.I#
                                                                                                                                                             (GHC.Prim.+#
                                                                                                                                                                (GHC.Prim.+#
                                                                                                                                                                   56#
                                                                                                                                                                   (GHC.Prim.*#
                                                                                                                                                                      (GHC.Prim.-#
                                                                                                                                                                         ({__scc {main:EquivarianceMetric.index2Sparse6M.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          a#)
                                                                                                                                                                         1#)
                                                                                                                                                                      4#))
                                                                                                                                                                4#) } } } } } },
                                                                                {__scc {main:EquivarianceMetric.index2Sparse6M} False True} case {__scc {main:EquivarianceMetric.index2Sparse6M.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                            case {__scc {main:EquivarianceMetric.index2Sparse6M.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                                           s of wild1 {
                                                                                                                                              GHC.Base.Nothing
                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                 ret_ty GHC.Types.Int
                                                                                                                                                 of {}
                                                                                                                                              GHC.Base.Just x
                                                                                                                                              -> case {__scc {main:EquivarianceMetric.index2Sparse6M.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                               @ Index.Lind_9
                                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse6M.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                 case {__scc {main:EquivarianceMetric.index2Sparse6M.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                @ Index.Lind_9
                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                s1 of wild3 {
                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                      ret_ty GHC.Types.Int
                                                                                                                                                      of {}
                                                                                                                                                   GHC.Base.Just x1
                                                                                                                                                   -> case {__scc {main:EquivarianceMetric.index2Sparse6M.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                    @ Index.Lind_9
                                                                                                                                                                                                                                                                    x1 of a#1 { DEFAULT ->
                                                                                                                                                      GHC.Types.I#
                                                                                                                                                        (GHC.Prim.+#
                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                 50#
                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                    (GHC.Prim.-#
                                                                                                                                                                       ({__scc {main:EquivarianceMetric.index2Sparse6M.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                        1#
                                                                                                                                                                                                                                        a#)
                                                                                                                                                                       1#)
                                                                                                                                                                    10#))
                                                                                                                                                              ({__scc {main:EquivarianceMetric.index2Sparse6M.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                               1#
                                                                                                                                                                                                                               a#1))
                                                                                                                                                           1#) } } } } } } #)) -}
b193bb009bf8ad5d1ab79c932c1a583b
  $windex2Sparse6MPulled ::
    Index.Uinds_19 1
    -> Index.Linds_9 2
    -> Index.Uinds_3 1
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: Index.Uinds_19 1)
                   (ww1 :: Index.Linds_9 2)
                   (ww2 :: Index.Uinds_3 1) ->
                 {__scc {main:EquivarianceMetric.index2Sparse6MPulled} True False} (# {__scc {main:EquivarianceMetric.index2Sparse6MPulled} False True} case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww of wild { Index.UnsafemkInd s ->
                                                                                                                                                        case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                             @ Index.Uind_19
                                                                                                                                                                                                                                                                             0#
                                                                                                                                                                                                                                                                             s of wild1 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x
                                                                                                                                                          -> case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                 @ Index.Uind_19
                                                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                                                                                                             case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.n} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww2 of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                             case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.n} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                  @ Index.Uind_3
                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                  s1 of wild3 {
                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                  ret_ty GHC.Types.Int
                                                                                                                                                                  of {}
                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                               -> case x1 of wild4 {
                                                                                                                                                                    Index.U0_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               56#
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            1#)
                                                                                                                                                                    Index.U1_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               56#
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            2#)
                                                                                                                                                                    Index.U2_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               56#
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            3#)
                                                                                                                                                                    Index.U3_3
                                                                                                                                                                    -> GHC.Types.I#
                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                               56#
                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                  (GHC.Prim.-#
                                                                                                                                                                                     ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.j} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                            1#
                                                                                                                                                                                                                                                            a#)
                                                                                                                                                                                     1#)
                                                                                                                                                                                  4#))
                                                                                                                                                                            4#) } } } } } },
                                                                                      {__scc {main:EquivarianceMetric.index2Sparse6MPulled} False True} case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.a} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ww1 of wild { Index.UnsafemkInd s ->
                                                                                                                                                        case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.a} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                             @ Index.Lind_9
                                                                                                                                                                                                                                                                             1#
                                                                                                                                                                                                                                                                             s of wild1 {
                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                             ret_ty GHC.Types.Int
                                                                                                                                                             of {}
                                                                                                                                                          GHC.Base.Just x
                                                                                                                                                          -> case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.a} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                                                                                                             case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.i} True True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} wild of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                             case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.i} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                  @ Index.Lind_9
                                                                                                                                                                                                                                                                                  0#
                                                                                                                                                                                                                                                                                  s1 of wild3 {
                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                  ret_ty GHC.Types.Int
                                                                                                                                                                  of {}
                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                               -> case {__scc {main:EquivarianceMetric.index2Sparse6MPulled.i} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                      @ Index.Lind_9
                                                                                                                                                                                                                                                                                      x1 of a#1 { DEFAULT ->
                                                                                                                                                                  GHC.Types.I#
                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                          (GHC.Prim.+#
                                                                                                                                                                             50#
                                                                                                                                                                             (GHC.Prim.*#
                                                                                                                                                                                (GHC.Prim.-#
                                                                                                                                                                                   ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.a} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                                          a#)
                                                                                                                                                                                   1#)
                                                                                                                                                                                10#))
                                                                                                                                                                          ({__scc {main:EquivarianceMetric.index2Sparse6MPulled.i} False True} GHC.Prim.+#
                                                                                                                                                                                                                                                 1#
                                                                                                                                                                                                                                                 a#1))
                                                                                                                                                                       1#) } } } } } } #)) -}
65bb63125f8ab2db3484151dadff25be
  $wlvl ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
d9b85b9a391d634b2522a2c9acb8baf6
  $wlvl1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
5aaa15f392821258e9953863949fe6bf
  $wlvl2 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
5e91c86e2d7049991f658912ea61a3aa
  $wlvl3 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
1d6dea944216f44a920826b5111dbb49
  $wlvl4 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
53e530b19ef805cacb32559a3bc0808c
  $wlvl5 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} True False} w of wild1 { Ivar.Ivar a1 map ->
                     (# {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                     case GHC.Real.$w$sreduce
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww
                                                                                                               ww4)
                                                                                                            (GHC.Integer.Type.timesInteger
                                                                                                               ww1
                                                                                                               ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                     GHC.Real.:%
                                                                                                       @ GHC.Integer.Type.Integer
                                                                                                       ww7
                                                                                                       ww8 } },
                        {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.fmap} False True} letrec {
                                                                                                       go :: Data.IntMap.Internal.IntMap
                                                                                                               GHC.Real.Rational
                                                                                                             -> Data.IntMap.Internal.IntMap
                                                                                                                  GHC.Real.Rational
                                                                                                         {- Arity: 1,
                                                                                                            Strictness: <S,1*U> -}
                                                                                                       = \ (ds :: Data.IntMap.Internal.IntMap
                                                                                                                    GHC.Real.Rational) ->
                                                                                                         case ds of wild {
                                                                                                           Data.IntMap.Internal.Bin dt1 dt2 l r
                                                                                                           -> case go
                                                                                                                     l of dt3 { DEFAULT ->
                                                                                                              case go
                                                                                                                     r of dt4 { DEFAULT ->
                                                                                                              Data.IntMap.Internal.Bin
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                dt2
                                                                                                                dt3
                                                                                                                dt4 } }
                                                                                                           Data.IntMap.Internal.Tip dt1 x
                                                                                                           -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                                                                                              case GHC.Real.$w$sreduce
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww
                                                                                                                        ww4)
                                                                                                                     (GHC.Integer.Type.timesInteger
                                                                                                                        ww1
                                                                                                                        ww5) of ww6 { (#,#) ww7 ww8 ->
                                                                                                              Data.IntMap.Internal.Tip
                                                                                                                @ GHC.Real.Rational
                                                                                                                dt1
                                                                                                                (GHC.Real.:%
                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                   ww7
                                                                                                                   ww8) } }
                                                                                                           Data.IntMap.Internal.Nil
                                                                                                           -> Data.IntMap.Internal.Nil
                                                                                                                @ GHC.Real.Rational }
                                                                                                     } in
                                                                                                     go
                                                                                                       map #) }
                 } in
                 {__scc {main:Ivar.sMultIvar} True False} case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                          ww
                                                                                                          Ivar.addIvar1 of wild2 {
                                                            DEFAULT -> $j
                                                            1#
                                                            -> case {__scc {main:Ivar.sMultIvar} False True} GHC.Integer.Type.eqInteger#
                                                                                                               ww1
                                                                                                               GHC.Real.$fEnumRatio1 of wild3 { DEFAULT ->
                                                               case {__scc {main:Ivar.sMultIvar} False True} GHC.Prim.tagToEnum#
                                                                                                               @ GHC.Types.Bool
                                                                                                               wild3 of wild {
                                                                 GHC.Types.False -> $j
                                                                 GHC.Types.True
                                                                 -> case {__scc {main:Ivar.sMultIvar} False True} {__scc {main:Ivar.mkConstIvar} True False} EquivarianceMetric.eqn1_1M8 of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                    (# ww3, ww4 #) } } } }) -}
e5a6336c8d7aba574c2aebc146609d4e
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
25d79727501a77eb02a5db34fc80ed30
  eqn1_1M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 1 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_1M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
70562c9d5df3aea91afcd36435c827a1
  eqn1_1M1 ::
    Ivar.Ivar GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U),1*U)><S,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Ivar.Ivar GHC.Real.Rational)
                   (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { Ivar.Ivar ww1 ww2 ->
                 case w1 of ww3 { Ivar.Ivar ww4 ww5 ->
                 {__scc {main:Ivar.addIvar} True False} Ivar.Ivar
                                                          @ GHC.Real.Rational
                                                          ({__scc {main:Ivar.addIvar} False True} GHC.Real.$fEnumRatio_$s$c+
                                                                                                    ww1
                                                                                                    ww4)
                                                          ({__scc {main:Ivar.addIvar} False True} Data.IntMap.Internal.filterWithKey
                                                                                                    @ GHC.Real.Rational
                                                                                                    EquivarianceMetric.eqn1_1M3
                                                                                                    (Data.IntMap.Strict.unionWithKey
                                                                                                       @ GHC.Real.Rational
                                                                                                       EquivarianceMetric.eqn1_1M2
                                                                                                       ww2
                                                                                                       ww5)) } }) -}
4ee3ef1cccda86726801e9072e319107
  eqn1_1M2 ::
    Data.IntSet.Internal.Key
    -> GHC.Real.Rational
    -> GHC.Real.Rational
    -> GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Unfolding: (\ (ds1 :: Data.IntSet.Internal.Key)
                   (x :: GHC.Real.Rational)[OneShot]
                   (y :: GHC.Real.Rational)[OneShot] ->
                 GHC.Real.$fEnumRatio_$s$c+ x y) -}
ddb1d0c2c61485d4d18dd78b1a1bbea0
  eqn1_1M3 ::
    Data.IntSet.Internal.Key -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Unfolding: (\ (ds1 :: Data.IntSet.Internal.Key)
                   (x :: GHC.Real.Rational)[OneShot] ->
                 case x of wild { GHC.Real.:% a1 a2 ->
                 case GHC.Integer.Type.eqInteger# a1 Ivar.addIvar1 of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             a2
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } } }) -}
5524726564e7cf006a4eee3292c4be4c
  eqn1_1M4 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M6,
                  EquivarianceMetric.eqn1_1M5)) -}
4f2057ecb0dd7d8e32ec0af1763f345a
  eqn1_1M5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
db30ba19c6b1d1d53040330bebcb9feb
  eqn1_1M6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
efc831086077117a202fa70fd49870fe
  eqn1_1M7 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
acbbbf8635e3b2a27f667164508770c0
  eqn1_1M8 :: Ivar.Ivar GHC.Real.Rational
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Ivar.Ivar
                   @ GHC.Real.Rational
                   EquivarianceMetric.eqn1_1M9
                   (Data.IntMap.Internal.Nil @ GHC.Real.Rational)) -}
a15ebc6d814d0c9662bd60d859a041a6
  eqn1_1M9 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Ivar.addIvar1
                   GHC.Real.$fEnumRatio1) -}
3c1f5599819fcbb4e6b30203234b5804
  eqn1_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 1 1 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_2M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
6bc4b3fa389024ab80415b5df642b771
  eqn1_2M1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_2M2)) -}
f2ba8fccd7efb588bc9ac649049cfe1b
  eqn1_2M2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
6562be37f2571dafcc72a0a837acffcf
  eqn1_2M3 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl1 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
06b3d3ad41fb2086d84d294b1ce01283
  eqn1_2M4 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:EquivarianceMetric.eqn1_2M} False True} {__scc {main:EquivarianceMetric.eqn1_2M.int2} True True} case BasicTensors.delta_3 of ww { Tensor.Tensor ww1 ->
                                                                                                                               case Tensor.$wtensorProductWith
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                      ww1
                                                                                                                                      ww1 of ww4 { Unit# ww5 ->
                                                                                                                               case Tensor.$wtensorTranspose
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 2
                                                                                                                                      @ 2
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      EquivarianceMetric.eqn1_2M5
                                                                                                                                      EquivarianceMetric.eqn1_1M4
                                                                                                                                      ww5
                                                                                                                                        `cast`
                                                                                                                                      (Data.Map.Internal.Map
                                                                                                                                         ((,,,,,,,)
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (AddDef (<1>_N,
                                                                                                                                                        <1>_N))
                                                                                                                                               <Index.Uind_3>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (AddDef (<1>_N,
                                                                                                                                                        <1>_N))
                                                                                                                                               <Index.Lind_3>_N)_N)_N
                                                                                                                                         <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                                                                                                                               case BasicTensors.delta_9 of ww7 { Tensor.Tensor ww8 ->
                                                                                                                               case Tensor.$wtensorProductWith
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 2
                                                                                                                                      @ 2
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                      ww3
                                                                                                                                      ww8 of ww9 { Unit# ww10 ->
                                                                                                                               Tensor.Tensor
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ (2
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (2
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 ww10 } } } } }) -}
87559bfe744ee2b1cbf4deaccba436f9
  eqn1_2M5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
c7d0310cf7eb05df33d73bb02054db0f
  eqn1_2M_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 1 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
8cda113d945cf0d90b307589226fd557
  eqn1_2M_lvl19 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:Tensor.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
37847c72965aacf3b1289c7ee94affe8
  eqn1_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 2 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_3M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
cb744124ebc5e36e031b587d0063a4c8
  eqn1_3M1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M6,
                  EquivarianceMetric.eqn1_2M2)) -}
a4cd0515f289711df3f0e9bb9333aa96
  eqn1_3M2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_3M3)) -}
0ae868d74489baa444cdc07d76f2e3b4
  eqn1_3M3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
314e34b803e85157b362f7d4fa31fcba
  eqn1_3M4 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl2 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
a6c9a0b7434443720ca3f3ccc119f467
  eqn2_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 1 0 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn2_2M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
c64a65aba838930df079f80d315d77c8
  eqn2_2M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl3 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
67fdf4cee79eadd53c784dc8f4714080
  eqn2_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 2 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn2_3M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
bcc3eed22429dc283db2c2a7ec9608cb
  eqn2_3M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl4 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
f89756c0edf90908cf1a34b951430d2c
  eqn2_3M2 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:EquivarianceMetric.eqn2_3M} False True} {__scc {main:EquivarianceMetric.eqn2_3M.int2} True True} case BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                                                                                                                               case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                                                                                                                               case Tensor.$wtensorProductWith
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                      ww1
                                                                                                                                      ww3 of ww4 { Unit# ww5 ->
                                                                                                                               case Tensor.$wtensorProductWith
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      @ 1
                                                                                                                                      GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                      ww1
                                                                                                                                      ww5
                                                                                                                                        `cast`
                                                                                                                                      (Data.Map.Internal.Map
                                                                                                                                         ((,,,,,,,)
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_20>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Uind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<0>_N))
                                                                                                                                               <Index.Lind_19>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                               <Index.Uind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0R (<1>_N))
                                                                                                                                               <Index.Lind_9>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<1>_N))
                                                                                                                                               <Index.Uind_3>_N)_N
                                                                                                                                            (Index.Ind
                                                                                                                                               (Add0L (<1>_N))
                                                                                                                                               <Index.Lind_3>_N)_N)_N
                                                                                                                                         <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                                                                                                                               Tensor.Tensor
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 0)
                                                                                                                                 @ (1
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ (1
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ (0
                                                                                                                                    GHC.TypeNats.+ 1)
                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                 ww8 } } } }) -}
a36a7d18de578137af8bea6a8430e32b
  eqn2_3M3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_1M6)) -}
7b67b0a7861ab84e79e6e3988fa3b64a
  eqn2_3M_go1 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
e09b53a3a1edad1f6782d3b452717697
  eqn2_3M_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
906a46f62b7469f5936ca5945c8dba01
  eqn3_3M ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 1 0 0 2 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn3_3M w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
a6ad07569892e31863fc81b7c5484846
  eqn3_3M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl5 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
7422edc1d797c6f7d03e23b3db720290
  eqn3_3M2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_2M2,
                  EquivarianceMetric.eqn1_3M3)) -}
e6138bdf8b780f2b8cbf83b0ec2d2650
  index2Sparse1M ::
    Index.Index 0 0 0 0 0 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 1 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse1M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
cd8dd1978572b3ed169dd587c96b31b0
  index2Sparse2M ::
    Index.Index 0 0 0 0 0 1 1 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(U),1*U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 1 1 2) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse2M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
23c7854f338f9aa9be99c857b734f83e
  index2Sparse3M ::
    Index.Index 0 0 0 0 0 2 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(U),1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 2 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse3M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
c9c726ad43decc7a87c2a71c586a3022
  index2Sparse4M ::
    Index.Index 0 0 0 0 1 1 0 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,1*U(U),1*U(U),A,U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 0 2) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse4M
                        ww5
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
a2c6ff33d5619bbdfc66d20f2cf35162
  index2Sparse5M ::
    Index.Index 0 0 0 0 1 2 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,1*U(U),1*U(U),A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 2 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse5M
                        ww5
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
62505a5172bf936fd398fa775d62ab2e
  index2Sparse6M ::
    Index.Index 0 0 1 0 0 2 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,1*U(U),A,A,1*U(U),A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 2 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse6M
                        ww3
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
30a2cffa74f2f349ea37fcc905fea3c2
  index2Sparse6MPulled ::
    Index.Index 0 0 1 0 0 2 1 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U(A,A,1*U(U),A,A,1*U(U),1*U(U),A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 2 1 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse6MPulled
                        ww3
                        ww6
                        ww7 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
f0073f80c0d75a68804604e9110b4ed4
  mkEqn1SparseM ::
    Tensor.Tensor 0 0 0 0 0 1 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 1 1 1 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn1SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn1SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
8925b26f4483d6b2111ba8693e41668c
  mkEqn1SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
74ccd8d49672422a77ca36b42bedd26f
  mkEqn2SparseM ::
    Tensor.Tensor 0 0 0 0 0 1 1 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 1 1 2 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn2SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn2SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
03bfd951d37e1db404d173689b3765f8
  mkEqn2SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 1 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
05aeff35b379fae65f64ee1bd1380eec
  mkEqn3SparseM ::
    Tensor.Tensor 0 0 0 0 0 2 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 2 1 1 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn3SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn3SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
58b354aed67b6a2ac9b3ccfc141ede6e
  mkEqn3SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 2 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
25eca02eaed1ecb1ea0acc5ba4afd1fd
  mkEqn4SparseM ::
    Tensor.Tensor 0 0 0 0 1 1 0 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 1 1 0 2 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn4SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn4SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
3a46a071e662a0b06425325dfdab2dda
  mkEqn4SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 0 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
7891941d5e9ebd9597d3b33c03a35c46
  mkEqn5SparseM ::
    Tensor.Tensor 0 0 0 0 1 2 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 1 2 0 1 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn5SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn5SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
fd4f9b64a5f7748bde3dcb79f790ac01
  mkEqn5SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 2 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
12a339e25924b96fc810774bcc1123f9
  mkEqn6SparseM ::
    Tensor.Tensor 0 0 1 0 0 2 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 1 0 0 2 0 1 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn6SparseM} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                           EquivarianceMetric.$sfromList
                                                                             @ a
                                                                             (EquivarianceMetric.mkEqn6SparseM1
                                                                                @ a
                                                                                (GHC.Types.[]
                                                                                   @ ((GHC.Types.Int,
                                                                                       GHC.Types.Int),
                                                                                      a))
                                                                                map1) }) -}
7a74b6e33091a7036e4b9974662e1e54
  mkEqn6SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 2 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
47c0c3b2c78ed25f05265ea96c565c4d
  mkEqn6SparseMPulled ::
    Tensor.Tensor 0 0 1 0 0 2 1 0 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 1 0 0 2 1 0 a) ->
                 {__scc {main:EquivarianceMetric.mkEqn6SparseMPulled} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                                 EquivarianceMetric.$sfromList
                                                                                   @ a
                                                                                   (EquivarianceMetric.mkEqn6SparseMPulled1
                                                                                      @ a
                                                                                      (GHC.Types.[]
                                                                                         @ ((GHC.Types.Int,
                                                                                             GHC.Types.Int),
                                                                                            a))
                                                                                      map1) }) -}
10fd41fe5d9e9b880d283a795557c0aa
  mkEqn6SparseMPulled1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 2 1 0) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/EquivarianceMetric fromList @ (Int, Int) _" [orphan] forall @ a
                                                                  ($dOrd :: GHC.Classes.Ord
                                                                              (GHC.Types.Int,
                                                                               GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = EquivarianceMetric.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

