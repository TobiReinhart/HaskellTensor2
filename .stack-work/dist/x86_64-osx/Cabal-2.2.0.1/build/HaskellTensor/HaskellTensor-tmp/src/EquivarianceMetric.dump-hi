
==================== FINAL INTERFACE ====================
2019-02-01 11:42:44.932001 UTC

interface main:EquivarianceMetric 8043
  interface hash: 1787a528f6624806a20e071aafb5451b
  ABI hash: a12f2be70b1b0bd9280926aa7d53afc6
  export-list hash: 2b056822118b67df8be19594354d4341
  orphan hash: adf141e2afa13144b43d40f26dabf470
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  EquivarianceMetric.eqn1_1M
  EquivarianceMetric.eqn1_2M
  EquivarianceMetric.eqn1_3M
  EquivarianceMetric.eqn2_2M
  EquivarianceMetric.eqn2_3M
  EquivarianceMetric.eqn3_3M
  EquivarianceMetric.index2Sparse1M
  EquivarianceMetric.index2Sparse2M
  EquivarianceMetric.index2Sparse3M
  EquivarianceMetric.index2Sparse4M
  EquivarianceMetric.index2Sparse5M
  EquivarianceMetric.index2Sparse6M
  EquivarianceMetric.index2Sparse6MPulled
  EquivarianceMetric.mkEqn1SparseM
  EquivarianceMetric.mkEqn2SparseM
  EquivarianceMetric.mkEqn3SparseM
  EquivarianceMetric.mkEqn4SparseM
  EquivarianceMetric.mkEqn5SparseM
  EquivarianceMetric.mkEqn6SparseM
  EquivarianceMetric.mkEqn6SparseMPulled
module dependencies: BasicTensors Index Ivar Pde Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  BasicTensors d370033bab7dfa9fcc69ea504e0a958d
  exports: d7714270655295c06db8e25f1d3ae43c
  delta_3 20fe95723b0f42bf99216389c232614b
  delta_9 0a152dd63439e385bbf9fb92d11dcd7d
  interI_2 208ec3aa59eb880b784aca5ec4629314
  interI_3 da871b476bd41a582aa59be085ea8d52
  interJ_2 2f21f5b9a2ef192ce7a346d88957f0ed
  interMetric 8516fe9cbc20ae7cce26d7f29f76a4e6
  ivar1M 33569bb459c8529b510096f20012436d
  ivar2M 9286839f9b920b8373dda3eee6b76c1a
  ivar3M 74a1620768c7214a8cd301aa502c4717
import  -/  Index 846d6195a6d682ebc4b5552893fd0d45
  exports: 57bd4ebf86e1ac997dd2a9c3171f207b
  Index f1b2e2d342d299287fa67a4a38056bc6
  Index d1cd1067a874dee8fab194e163b456d3
  Lind_9 d899f69b9977ade0529b5015a71fa56c
  Linds_3 c2218f06873d6e75f70ab22fa89ca846
  Uind_19 8473e0b91f5b51c37fb377c28bad490b
  Uind_9 bdc578619f32ac1d154acb21ac900fa3
  Uinds_3 8e007ccb52f8036461e378de4876a33c
  getValInd 2f343080b63386f163ac2db0992f586e
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
  Ivar 6fb5b1c62e6ccfd9020c45c8471a027a
  addIvar d292753012f6d0425a83cacf61d3f780
  sMultIvar 9041089729d8e9da4cfe3d58c70439ce
import  -/  Pde 01727937c27ae17d2b109d09ad686ca8
  exports: b2cd66be74d90ac4a27aea2ce34825a2
import  -/  Tensor c5dfa081ae5ad523bef39ca8def0f654
  exports: af2b4fe26a34e82b11fcad14a4c891cb
  Tensor 939d8f0d009a7bad571c4642c9cd98df
  Tensor 6ebce5ff137d1d5d966e303383d35759
  tensorAdd d99ca0e639c925dc556efc00daeae60d
  tensorContractWith_3 f04596f955f3e30f9459e535b650bdae
  tensorContractWith_9 4f4fab0a8d1968bd989f7015cbf3b61b
  tensorProductWith 05216200a08bb52e8b8e53703bbee9c1
  tensorSMult bd006493177c1f5b96d23fe52f4df861
  tensorSub 4712786dc2f094bb059ae94da1bab1e3
  tensorTranspose bf772467c4363e927c1ee5deaa31eb8b
e5c19495a36ab9c4c48821e1bd30ca1f
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> EquivarianceMetric.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> EquivarianceMetric.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> EquivarianceMetric.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> EquivarianceMetric.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
cc45d288a418eef9121b62e3b30ce8a6
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1d0437084e7e0fe0c2436e1ffe2078e2
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
a9e520e90679601ae5140e75f65dc1f8
  $stensorContractWith_12 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_13 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8e43c1a6deffbb1242e5dbf040b4df22
  $stensorContractWith_13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
cebdc066b27fb1bc9b32bff748cda0a8
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
1a62728baf33a5074af25b52808afde1
  $stensorContractWith_5 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_6 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
e5a8b21ef170126c152ef974f73252db
  $stensorContractWith_6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b1d53a71d8d5cd9a598760d317a09af8
  $stensorContractWith_8 :: GHC.Natural.Natural
  {- Unfolding: (case EquivarianceMetric.$stensorContractWith_9 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
2e96fb3e00af9e4a565bbb152504386b
  $stensorContractWith_9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
3d62176b69eb07cf8daf4a7b2d1a733e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   EquivarianceMetric.$trModule3
                   EquivarianceMetric.$trModule1) -}
4290e0aaf94365353c8eb9421c9767ad
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceMetric.$trModule2) -}
ff0b34c8c64079e6e0492b9f6835e490
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EquivarianceMetric"#) -}
103209ea11e27820d78f39cf2440bd18
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS EquivarianceMetric.$trModule4) -}
540d6f7d4a4750def5bcb087293a24e9
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4876b83c959d81f0df36bec0233b76d3
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
60f3a79d1285b8c66ecaa10f5aa73844
  $weqn1_1M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 1 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterMetric w w1 of ww { Unit# ww2 ->
                 case BasicTensors.ivar1M of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        EquivarianceMetric.eqn1_1M7
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 Tensor.$wtensorContractWith_9
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   EquivarianceMetric.$stensorContractWith_5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceMetric.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceMetric.eqn1_1M4
                   EquivarianceMetric.eqn1_1M1
                   ww5
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                         <1 GHC.TypeNats.+ 1>_N
                         (Add0R (<1>_N))
                         (Add0R (<1>_N)))_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } }) -}
7b59274e101b6eab259ef7fbaa103853
  $weqn1_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 1 1 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterMetric w w1 of ww { Unit# ww2 ->
                 case BasicTensors.delta_3 of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case EquivarianceMetric.eqn1_2M4
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0R (<2>_N))
                         (Add0R (<2>_N))
                         <GHC.Real.Rational>_R)_R of ww8 { Tensor.Tensor ww9 ->
                 case EquivarianceMetric.eqn1_2M_go8 ww9 of dt1 { DEFAULT ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 0 0 0 0 1 1 2 2)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 2 @ 2)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        dt1 of dt2 { DEFAULT ->
                 case BasicTensors.ivar2M of ww10 { Tensor.Tensor ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        EquivarianceMetric.eqn1_2M3
                        dt2
                        ww11 of ww12 { Unit# ww13 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 2
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.eqn1_2M1
                        EquivarianceMetric.eqn1_1M1
                        ww13
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              <2 GHC.TypeNats.+ 1>_N)_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 Tensor.$wtensorContractWith_9
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   EquivarianceMetric.$stensorContractWith_5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceMetric.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceMetric.eqn1_1M4
                   EquivarianceMetric.eqn1_1M1
                   ww15
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <0>_N
                         <0>_N
                         <0>_N
                         <0>_N
                         (Sym (Add0L (<1>_N)))
                         (Sym (AddDef (<1>_N, <1>_N)))
                         <1>_N
                         <2>_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } } }) -}
c888575bb19515ef79090cbda30e48a0
  $weqn1_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 0 2 1 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterMetric w w1 of ww { Unit# ww2 ->
                 case BasicTensors.delta_9 of ww1 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww2 of ww8 { Unit# ww9 ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 0 0 0 0 2 2 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 2 @ 2 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww9
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R of dt1 { DEFAULT ->
                 case BasicTensors.ivar3M of ww10 { Tensor.Tensor ww11 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        EquivarianceMetric.eqn1_3M4
                        dt1
                        ww11 of ww12 { Unit# ww13 ->
                 case Tensor.$wtensorContractWith_9
                        @ 1
                        @ 3
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.$stensorContractWith_12
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                        EquivarianceMetric.eqn1_3M2
                        EquivarianceMetric.eqn1_1M1
                        ww13
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<0>_N))
                              (Add0R (<0>_N))
                              (Add0R (<0>_N))
                              (Add0R (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (AddDef (<2>_N, <2>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N)))_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww14 { Unit# ww15 ->
                 Tensor.$wtensorContractWith_9
                   @ 0
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   EquivarianceMetric.$stensorContractWith_5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceMetric.$stensorContractWith_8
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   EquivarianceMetric.eqn1_3M1
                   EquivarianceMetric.eqn1_1M1
                   ww15
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <0>_N
                         <0>_N
                         <0>_N
                         <0>_N
                         (Sym (Add0L (<1>_N)))
                         (Sym (AddDef (<2>_N, <1>_N)))
                         <1>_N
                         <1>_N)_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } }) -}
59bea40e6051b26e4b5fedd02b850be8
  $weqn2_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 1 1 0 2) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterMetric w w1 of ww { Unit# ww2 ->
                 case BasicTensors.$winterI_2 w of ww1 { Unit# ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        EquivarianceMetric.$stensorContractWith_5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.eqn1_3M1
                        GHC.Real.$fEnumRatio_$s$c+
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                              (AddDef (<1>_N, <2>_N) ; Sym (AddDef (<2>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 case BasicTensors.ivar1M of ww9 { Tensor.Tensor ww10 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        EquivarianceMetric.eqn2_2M1
                        ww8
                        ww10 of ww11 { Unit# ww12 ->
                 Tensor.$wtensorContractWith_9
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   EquivarianceMetric.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceMetric.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceMetric.eqn1_1M4
                   EquivarianceMetric.eqn1_1M1
                   ww12
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         (Add0R (<0>_N))
                         (Add0R (<0>_N))
                         (Add0R (<0>_N))
                         (Add0R (<0>_N))
                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         <1 GHC.TypeNats.+ 1>_N
                         (Add0R (<0>_N))
                         (Add0R (<2>_N)))_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } }) -}
230cb72db6e38694b70bc7c665592bb1
  $weqn2_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 0 0 1 2 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterJ_2 w1 of ww { Unit# ww2 ->
                 case BasicTensors.$winterI_2 w of ww1 { Unit# ww3 ->
                 case BasicTensors.$winterMetric w w1 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww5 of ww6 { Unit# ww7 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        EquivarianceMetric.$stensorContractWith_5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.eqn1_1M4
                        GHC.Real.$fEnumRatio_$s$c+
                        ww7
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0L (<1>_N))
                              <0 GHC.TypeNats.+ 1>_N
                              <2 GHC.TypeNats.+ 1>_N)_N
                           <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 1
                        @ 0
                        @ 2
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww9 of ww10 { Unit# ww11 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.eqn2_3M3
                        GHC.Real.$fEnumRatio_$s$c+
                        ww11
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<2>_N))
                              (AddDef (<1>_N, <1>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww12 { Unit# ww13 ->
                 case EquivarianceMetric.eqn2_3M_go1 ww13 of dt1 { DEFAULT ->
                 case EquivarianceMetric.eqn2_3M2
                        `cast`
                      (Tensor.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (AddDef (<1>_N, <1>_N))
                         (AddDef (<1>_N, <1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         <GHC.Real.Rational>_R)_R of ww14 { Tensor.Tensor ww15 ->
                 case EquivarianceMetric.eqn2_3M_go8 ww15 of dt2 { DEFAULT ->
                 case Data.Map.Strict.Internal.unionWith
                        @ (Index.Index 0 0 0 0 2 2 1 1)
                        @ GHC.Real.Rational
                        (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 2 @ 2 @ 1 @ 1)
                        GHC.Real.$fEnumRatio_$s$c+
                        dt1
                        dt2 of dt3 { DEFAULT ->
                 case BasicTensors.ivar2M of ww16 { Tensor.Tensor ww17 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        EquivarianceMetric.eqn2_3M1
                        dt3
                        ww17 of ww18 { Unit# ww19 ->
                 case Tensor.$wtensorContractWith_9
                        @ 1
                        @ 2
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.eqn1_2M1
                        EquivarianceMetric.eqn1_1M1
                        ww19
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                              <2 GHC.TypeNats.+ 1>_N
                              (Add0R (<1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <Ivar.Ivar GHC.Real.Rational>_R)_R of ww20 { Unit# ww21 ->
                 Tensor.$wtensorContractWith_3
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   EquivarianceMetric.$stensorContractWith_5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceMetric.$stensorContractWith_1
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   EquivarianceMetric.eqn1_1M4
                   EquivarianceMetric.eqn1_1M1
                   ww21
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         <0>_N
                         <0>_N
                         <0>_N
                         <0>_N
                         <1>_N
                         <2>_N
                         (Sym (Add0L (<1>_N)))
                         (Sym (AddDef (<1>_N, <1>_N))))_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } } } } } } } }) -}
82135a0002989f48cb9d5f562adf3902
  $weqn3_3M ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 0 0 1 0 0 2 0 1) (Ivar.Ivar GHC.Real.Rational) #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case BasicTensors.$winterJ_2 w2 of ww { Unit# ww2 ->
                 case BasicTensors.$winterMetric w1 w2 of ww1 { Unit# ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww2
                        ww3 of ww4 { Unit# ww5 ->
                 case BasicTensors.$winterI_3 w of ww7 { Unit# ww8 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 2
                        @ 3
                        @ 1
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 3
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<1>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<2>_N, <1>_N))
                              (Add0L (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R
                        ww8 of ww9 { Unit# ww10 ->
                 case Tensor.$wtensorContractWith_3
                        @ 2
                        @ 3
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 2
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.$stensorContractWith_12
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                        EquivarianceMetric.eqn3_3M2
                        GHC.Real.$fEnumRatio_$s$c+
                        ww10
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0R (<0>_N))
                              (Add0R (<0>_N))
                              (Add0L (<1>_N))
                              (Add0R (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<2>_N))
                              (Add0R (<3>_N) ; Sym (AddDef (<2>_N, <1>_N)))
                              (AddDef (<1>_N, <3>_N) ; Sym (AddDef (<3>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww11 { Unit# ww12 ->
                 case Tensor.$wtensorContractWith_3
                        @ 1
                        @ 2
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 2
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.$stensorContractWith_8
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        EquivarianceMetric.eqn1_2M1
                        GHC.Real.$fEnumRatio_$s$c+
                        ww12
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              <0>_N
                              <0>_N
                              <1>_N
                              <0>_N
                              <1>_N
                              <2>_N
                              (Sym (AddDef (<1>_N, <1>_N)))
                              (Sym (AddDef (<2>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww13 { Unit# ww14 ->
                 case Tensor.$wtensorContractWith_3
                        @ 0
                        @ 1
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 2
                        EquivarianceMetric.$stensorContractWith_5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        EquivarianceMetric.$stensorContractWith_1
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        EquivarianceMetric.eqn1_1M4
                        GHC.Real.$fEnumRatio_$s$c+
                        ww14
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              <0>_N
                              <0>_N
                              <1>_N
                              <0>_N
                              <1>_N
                              <2>_N
                              (Sym (Add0L (<1>_N)))
                              (Sym (AddDef (<1>_N, <1>_N))))_N
                           <GHC.Real.Rational>_R)_R of ww15 { Unit# ww16 ->
                 case BasicTensors.ivar1M of ww17 { Tensor.Tensor ww18 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ (Ivar.Ivar GHC.Real.Rational)
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 1
                        @ 2
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        EquivarianceMetric.eqn3_3M1
                        ww16
                        ww18 of ww19 { Unit# ww20 ->
                 Tensor.$wtensorContractWith_9
                   @ 0
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   EquivarianceMetric.$stensorContractWith_5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   EquivarianceMetric.$stensorContractWith_8
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   EquivarianceMetric.eqn1_3M1
                   EquivarianceMetric.eqn1_1M1
                   ww20
                     `cast`
                   (Data.Map.Internal.Map
                      (Index.Index
                         (Add0R (<0>_N))
                         (Add0R (<0>_N))
                         (Add0R (<1>_N))
                         (Add0R (<0>_N))
                         (Add0R (<1>_N) ; Sym (Add0L (<1>_N)))
                         <2 GHC.TypeNats.+ 1>_N
                         (Add0R (<0>_N))
                         (Add0R (<1>_N)))_N
                      <Ivar.Ivar GHC.Real.Rational>_R)_R } } } } } } } } } }) -}
870c1a6b2561d0d836d4168ab4f2ad36
  $windex2Sparse1M ::
    Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_3
                           0#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    ww2 of wild2 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } }
                         } in
                         case x of wild {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.+# (GHC.Prim.+# 1# a#) 1#) } } #)) -}
a5b493aa4960d2efcff20e26d89b8038
  $windex2Sparse2M ::
    Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_3
                           0#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    ww2 of wild2 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } }
                         } in
                         case x of wild {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                1#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           1#)
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           2#)
                                        1#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           3#)
                                        1#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           4#)
                                        1#) } } } } #)) -}
aa72a9bbf8019c3ecda6c07270481cf3
  $windex2Sparse3M ::
    Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Uind_3)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_3
                           0#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> let {
                           $j :: GHC.Prim.Int# -> GHC.Types.Int
                             <join 1> {- Arity: 1, Strictness: <S,U>m -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case Data.Sequence.Internal.$wlookup
                                    @ Index.Lind_3
                                    0#
                                    ww2 of wild2 {
                               GHC.Base.Nothing
                               -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                               GHC.Base.Just x1
                               -> case x1 of wild {
                                    Index.L0_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            1#)
                                    Index.L1_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            2#)
                                    Index.L2_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            3#)
                                    Index.L3_3
                                    -> GHC.Types.I#
                                         (GHC.Prim.+#
                                            (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# y) 1#) 4#)
                                            4#) } }
                         } in
                         case x of wild {
                           Index.U0_3 -> $j 0#
                           Index.U1_3 -> $j 1#
                           Index.U2_3 -> $j 2#
                           Index.U3_3 -> $j 3# } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                1#
                                ww of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         50#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } #)) -}
857edffe2bcd9a122f6613961a9a9717
  $windex2Sparse4M ::
    Data.Sequence.Internal.Seq Index.Uind_9
    -> Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Uind_9)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_9
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           0#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                1#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           1#)
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           2#)
                                        1#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           3#)
                                        1#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              10#
                                              (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                           4#)
                                        1#) } } } } #)) -}
4b4b2605a385b4c4fefb953823e2b745
  $windex2Sparse5M ::
    Data.Sequence.Internal.Seq Index.Uind_9
    -> Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Uind_9)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_9
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           16#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           1#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                ww1 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         50#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } #)) -}
dc52bb1cc386d0eba5782d8a488ca346
  $windex2Sparse6M ::
    Data.Sequence.Internal.Seq Index.Uind_19
    -> Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Lind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Uind_19)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Lind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_19
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_19 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_3
                                0#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.L0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.L1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.L2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.L3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           1#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                ww1 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         50#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } #)) -}
3f095b2d663bdb8d5f6510618f99d8f1
  $windex2Sparse6MPulled ::
    Data.Sequence.Internal.Seq Index.Uind_19
    -> Data.Sequence.Internal.Seq Index.Lind_9
    -> Data.Sequence.Internal.Seq Index.Uind_3
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Sequence.Internal.Seq Index.Uind_19)
                   (ww1 :: Data.Sequence.Internal.Seq Index.Lind_9)
                   (ww2 :: Data.Sequence.Internal.Seq Index.Uind_3) ->
                 (# case Data.Sequence.Internal.$wlookup
                           @ Index.Uind_19
                           0#
                           ww of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Uind_19 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Uind_3
                                0#
                                ww2 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case x1 of wild {
                                Index.U0_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        1#)
                                Index.U1_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        2#)
                                Index.U2_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        3#)
                                Index.U3_3
                                -> GHC.Types.I#
                                     (GHC.Prim.+#
                                        (GHC.Prim.+#
                                           56#
                                           (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 4#))
                                        4#) } } } },
                    case Data.Sequence.Internal.$wlookup
                           @ Index.Lind_9
                           1#
                           ww1 of wild1 {
                      GHC.Base.Nothing
                      -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                      GHC.Base.Just x
                      -> case GHC.Prim.dataToTag# @ Index.Lind_9 x of a# { DEFAULT ->
                         case Data.Sequence.Internal.$wlookup
                                @ Index.Lind_9
                                0#
                                ww1 of wild2 {
                           GHC.Base.Nothing
                           -> case Data.Maybe.fromJust1 ret_ty GHC.Types.Int of {}
                           GHC.Base.Just x1
                           -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                              GHC.Types.I#
                                (GHC.Prim.+#
                                   (GHC.Prim.+#
                                      (GHC.Prim.+#
                                         50#
                                         (GHC.Prim.*# (GHC.Prim.-# (GHC.Prim.+# 1# a#) 1#) 10#))
                                      (GHC.Prim.+# 1# a#1))
                                   1#) } } } } #)) -}
c7a76ce8d7d38f94bffe354b1fc5437b
  $wlvl ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
eff4ef7a46730363fcc1151b25c0f630
  $wlvl1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
b5d6e2143dc678520b037a084ab4dcc3
  $wlvl2 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
d19df3b1f8b8818cb86fba3c548c9cec
  $wlvl3 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
3e43969c27c61ad4453eaac3b08b0597
  $wlvl4 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
5912ba113434628670b9c5e179e28c43
  $wlvl5 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Ivar.Ivar GHC.Real.Rational
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 3, Strictness: <S,U><L,U><L,1*U(1*U(U,U),1*U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (w :: Ivar.Ivar GHC.Real.Rational) ->
                 let {
                   $j :: (# GHC.Real.Rational,
                            Data.IntMap.Internal.IntMap GHC.Real.Rational #)
                     <join 0>
                   = case w of wild1 { Ivar.Ivar a1 map ->
                     (# case a1 of ww3 { GHC.Real.:% ww4 ww5 ->
                        case GHC.Real.$w$sreduce
                               (GHC.Integer.Type.timesInteger ww ww4)
                               (GHC.Integer.Type.timesInteger ww1 ww5) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                        letrec {
                          go :: Data.IntMap.Internal.IntMap GHC.Real.Rational
                                -> Data.IntMap.Internal.IntMap GHC.Real.Rational
                            {- Arity: 1, Strictness: <S,1*U> -}
                          = \ (ds :: Data.IntMap.Internal.IntMap GHC.Real.Rational) ->
                            case ds of wild {
                              Data.IntMap.Internal.Bin dt1 dt2 l r
                              -> case go l of dt3 { DEFAULT ->
                                 case go r of dt4 { DEFAULT ->
                                 Data.IntMap.Internal.Bin @ GHC.Real.Rational dt1 dt2 dt3 dt4 } }
                              Data.IntMap.Internal.Tip dt1 x
                              -> case x of ww3 { GHC.Real.:% ww4 ww5 ->
                                 case GHC.Real.$w$sreduce
                                        (GHC.Integer.Type.timesInteger ww ww4)
                                        (GHC.Integer.Type.timesInteger
                                           ww1
                                           ww5) of ww6 { (#,#) ww7 ww8 ->
                                 Data.IntMap.Internal.Tip
                                   @ GHC.Real.Rational
                                   dt1
                                   (GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8) } }
                              Data.IntMap.Internal.Nil
                              -> Data.IntMap.Internal.Nil @ GHC.Real.Rational }
                        } in
                        go map #) }
                 } in
                 case GHC.Integer.Type.eqInteger# ww Ivar.addIvar1 of wild2 {
                   DEFAULT -> $j
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww1
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> $j
                        1#
                        -> (# EquivarianceMetric.eqn1_1M8,
                              Data.IntMap.Internal.Nil @ GHC.Real.Rational #) } }) -}
e5a6336c8d7aba574c2aebc146609d4e
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a95e73c9126b5adb0d7acc831f31a173
  eqn1_1M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 1 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_1M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
bf81985bc2ffc50875745de1c8551350
  eqn1_1M1 ::
    Ivar.Ivar GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U),1*U)><S,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Ivar.Ivar GHC.Real.Rational)
                   (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { Ivar.Ivar ww1 ww2 ->
                 case w1 of ww3 { Ivar.Ivar ww4 ww5 ->
                 Ivar.Ivar
                   @ GHC.Real.Rational
                   (GHC.Real.$fEnumRatio_$s$c+ ww1 ww4)
                   (Data.IntMap.Internal.filterWithKey
                      @ GHC.Real.Rational
                      EquivarianceMetric.eqn1_1M3
                      (Data.IntMap.Strict.unionWithKey
                         @ GHC.Real.Rational
                         EquivarianceMetric.eqn1_1M2
                         ww2
                         ww5)) } }) -}
4ee3ef1cccda86726801e9072e319107
  eqn1_1M2 ::
    Data.IntSet.Internal.Key
    -> GHC.Real.Rational
    -> GHC.Real.Rational
    -> GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Unfolding: (\ (ds1 :: Data.IntSet.Internal.Key)
                   (x :: GHC.Real.Rational)[OneShot]
                   (y :: GHC.Real.Rational)[OneShot] ->
                 GHC.Real.$fEnumRatio_$s$c+ x y) -}
ddb1d0c2c61485d4d18dd78b1a1bbea0
  eqn1_1M3 ::
    Data.IntSet.Internal.Key -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Unfolding: (\ (ds1 :: Data.IntSet.Internal.Key)
                   (x :: GHC.Real.Rational)[OneShot] ->
                 case x of wild { GHC.Real.:% a1 a2 ->
                 case GHC.Integer.Type.eqInteger# a1 Ivar.addIvar1 of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             a2
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } } }) -}
5524726564e7cf006a4eee3292c4be4c
  eqn1_1M4 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M6,
                  EquivarianceMetric.eqn1_1M5)) -}
4f2057ecb0dd7d8e32ec0af1763f345a
  eqn1_1M5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
db30ba19c6b1d1d53040330bebcb9feb
  eqn1_1M6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
906d30a14f1686179c0e4110708d8523
  eqn1_1M7 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
762b6a33376ef3812f2de75f84e569d0
  eqn1_1M8 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Ivar.addIvar1
                   GHC.Real.$fEnumRatio1) -}
7af131456023d0660c3038c63accf29b
  eqn1_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 1 1 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_2M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
6bc4b3fa389024ab80415b5df642b771
  eqn1_2M1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_2M2)) -}
f2ba8fccd7efb588bc9ac649049cfe1b
  eqn1_2M2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
ae541880d439e28e5d311e2bb0487130
  eqn1_2M3 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl1 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
d66e93ad2443d3fa8822cf8951165510
  eqn1_2M4 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_3 of ww { Tensor.Tensor ww1 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww1 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorTranspose
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        EquivarianceMetric.eqn1_2M5
                        EquivarianceMetric.eqn1_1M4
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (AddDef (<1>_N, <1>_N))
                              (AddDef (<1>_N, <1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww2 { Unit# ww3 ->
                 case BasicTensors.delta_9 of ww7 { Tensor.Tensor ww8 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww3
                        ww8 of ww9 { Unit# ww10 ->
                 Tensor.Tensor
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (2 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww10 } } } } }) -}
87559bfe744ee2b1cbf4deaccba436f9
  eqn1_2M5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
5086a12303683449aed90f3403321ea5
  eqn1_2M_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 1 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
a8479c64111fcbe1f7f34636371b4e56
  eqn1_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 0 2 1 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn1_3M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
cb744124ebc5e36e031b587d0063a4c8
  eqn1_3M1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M6,
                  EquivarianceMetric.eqn1_2M2)) -}
a4cd0515f289711df3f0e9bb9333aa96
  eqn1_3M2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_3M3)) -}
0ae868d74489baa444cdc07d76f2e3b4
  eqn1_3M3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
ae3389084704b95873a80bf631aa0d3d
  eqn1_3M4 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl2 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
e26e9de47f267fb78a81b34435b6933d
  eqn2_2M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 1 0 2 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn2_2M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 2
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
8c1438f85309a4a467f0551772fd80e0
  eqn2_2M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl3 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
13050da645d1e72737c0e5082c1145d3
  eqn2_3M ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 0 0 1 2 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn2_3M w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
fca111f57a1a4b8f6e72aa1c968ac5a0
  eqn2_3M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl4 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
19bbfa5fed8738d0824028993a44481b
  eqn2_3M2 ::
    Tensor.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: (case BasicTensors.delta_9 of ww { Tensor.Tensor ww1 ->
                 case BasicTensors.delta_3 of ww2 { Tensor.Tensor ww3 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww3 of ww4 { Unit# ww5 ->
                 case Tensor.$wtensorProductWith
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ GHC.Real.Rational
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 1
                        @ 1
                        GHC.Real.$fFractionalRatio_$s$c*
                        ww1
                        ww5
                          `cast`
                        (Data.Map.Internal.Map
                           (Index.Index
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0L (<0>_N))
                              (Add0R (<1>_N))
                              (Add0R (<1>_N))
                              (Add0L (<1>_N))
                              (Add0L (<1>_N)))_N
                           <GHC.Real.Rational>_R)_R of ww7 { Unit# ww8 ->
                 Tensor.Tensor
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 1)
                   @ (1 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww8 } } } }) -}
a36a7d18de578137af8bea6a8430e32b
  eqn2_3M3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_1M5,
                  EquivarianceMetric.eqn1_1M6)) -}
7afbfca99c10f7eb8d921995090f7123
  eqn2_3M_go1 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
e1463f8898e5d2e994aef73522218e1a
  eqn2_3M_go8 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 2 2 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
8b183723cdf801006856fee642c26082
  eqn3_3M ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 0 0 1 0 0 2 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19)
                   (w1 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w2 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case EquivarianceMetric.$weqn3_3M w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 1
                   @ (Ivar.Ivar GHC.Real.Rational)
                   ww1 }) -}
21b6eb4153f21f04f6df1b5b331cfb3c
  eqn3_3M1 ::
    GHC.Real.Rational
    -> Ivar.Ivar GHC.Real.Rational -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 2, Strictness: <S(SS),1*U(U,U)><L,1*U(1*U(U,U),1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Real.Rational) (w1 :: Ivar.Ivar GHC.Real.Rational) ->
                 case w of ww { GHC.Real.:% ww1 ww2 ->
                 case EquivarianceMetric.$wlvl5 ww1 ww2 w1 of ww3 { (#,#) ww4 ww5 ->
                 Ivar.Ivar @ GHC.Real.Rational ww4 ww5 } }) -}
7422edc1d797c6f7d03e23b3db720290
  eqn3_3M2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((EquivarianceMetric.eqn1_2M2,
                  EquivarianceMetric.eqn1_3M3)) -}
af271298440e35478d936590f8246388
  index2Sparse1M ::
    Index.Index 0 0 0 0 0 1 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLLLLSSS),1*U(A,A,A,A,A,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 1 1 1) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse1M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
f16cc92037dc977dc756a24b9b3a8406
  index2Sparse2M ::
    Index.Index 0 0 0 0 0 1 1 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLLLLSSS),1*U(A,A,A,A,A,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 1 1 2) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse2M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
15e567107e9f42bb23e28359a2b3a8ce
  index2Sparse3M ::
    Index.Index 0 0 0 0 0 2 1 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLLLLSSS),1*U(A,A,A,A,A,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 2 1 1) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse3M
                        ww6
                        ww7
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
9d0067cf0a1d7f2cc485f6e63994a3c2
  index2Sparse4M ::
    Index.Index 0 0 0 0 1 1 0 2 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLLLSSLS),1*U(A,A,A,A,U,U,A,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 0 2) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse4M
                        ww5
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
1a52dea19785ad6c106d98bcb57e2cc5
  index2Sparse5M ::
    Index.Index 0 0 0 0 1 2 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLLLSSLS),1*U(A,A,A,A,U,U,A,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 2 0 1) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse5M
                        ww5
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
382735d1cb3e0b6526549030ce0fb1fe
  index2Sparse6M ::
    Index.Index 0 0 1 0 0 2 0 1 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLSLLSLS),1*U(A,A,U,A,A,U,A,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 2 0 1) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse6M
                        ww3
                        ww6
                        ww8 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
906665ba3d505dda787491c3748a45e9
  index2Sparse6MPulled ::
    Index.Index 0 0 1 0 0 2 1 0 -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S(LLSLLSSL),1*U(A,A,U,A,A,U,U,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 2 1 0) ->
                 case w of ww { Index.Index ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case EquivarianceMetric.$windex2Sparse6MPulled
                        ww3
                        ww6
                        ww7 of ww9 { (#,#) ww10 ww11 ->
                 (ww10, ww11) } }) -}
b6d668009215d03afe158cc6e8f55246
  mkEqn1SparseM ::
    Tensor.Tensor 0 0 0 0 0 1 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 1 1 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn1SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
a6e941a700b0a9601ad11eb4f1518c6a
  mkEqn1SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
3bfe3b043b1d70b712717de7f897f3db
  mkEqn2SparseM ::
    Tensor.Tensor 0 0 0 0 0 1 1 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 1 1 2 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn2SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
c74017038aa9f7c66abe4b24a8d9651e
  mkEqn2SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 1 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
540d2b1a260f0c93ee6c8ba09b87e5e8
  mkEqn3SparseM ::
    Tensor.Tensor 0 0 0 0 0 2 1 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 0 2 1 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn3SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
0469af0a97fc2f359c6cc650914d66c0
  mkEqn3SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 2 1 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
f7122901c6401f8cbbe259ddaa0106b8
  mkEqn4SparseM ::
    Tensor.Tensor 0 0 0 0 1 1 0 2 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 1 1 0 2 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn4SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
5f417de9cdee7fee371a0ac787df5c8c
  mkEqn4SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 0 2) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
abe942854dd5569d6d0f47e616df244d
  mkEqn5SparseM ::
    Tensor.Tensor 0 0 0 0 1 2 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 0 0 1 2 0 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn5SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
873ac42f3b56793ab9c476bc9aa3eab8
  mkEqn5SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 2 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
8e350be19d9687e6b2c57b6e2f9efbcd
  mkEqn6SparseM ::
    Tensor.Tensor 0 0 1 0 0 2 0 1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 1 0 0 2 0 1 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn6SparseM1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
cd0210cb5b1485801a9d3da95164162e
  mkEqn6SparseM1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 2 0 1) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
5d8ea985286ba127fa2792e2d841eeb7
  mkEqn6SparseMPulled ::
    Tensor.Tensor 0 0 1 0 0 2 1 0 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: Tensor.Tensor 0 0 1 0 0 2 1 0 a) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 EquivarianceMetric.$sfromList
                   @ a
                   (EquivarianceMetric.mkEqn6SparseMPulled1
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a))
                      map1) }) -}
2fc409a8043c8b49cdbbf0bff7ecaa39
  mkEqn6SparseMPulled1 ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 2 1 0) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/EquivarianceMetric fromList @ (Int, Int) _" [orphan] forall @ a
                                                                  ($dOrd :: GHC.Classes.Ord
                                                                              (GHC.Types.Int,
                                                                               GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = EquivarianceMetric.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

