
==================== FINAL INTERFACE ====================
2019-01-14 17:30:58.244008 UTC

interface main:Order3Int 8043
  interface hash: 175f98c9e107edb7d8b9611a7330757a
  ABI hash: ec6fc33e1785c6168bc7397b0b6eccad
  export-list hash: 6b8ceb1f2f8fdecdbd1f1ef14bc4fb79
  orphan hash: f98783e0cf6201fc4faf0436e010042b
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Order3Int.ansatzABC
  Order3Int.intABC
  Order3Int.mkEqnSparseAnsatzABC2
  Order3Int.mkEqnSparseIntABC2
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  BasicTensors 459e760670e17113d11708f22d917aa1
  exports: b16000811d6d04867ef2d7f77be3b83b
  aSymI_2 ce4c78589fa1c490048ec19d5ac45bab
  delta_20 cc7ac0d02f645bebaef7e7d6a42c65ec
  delta_3 88443abb7d76d02fee3e7a789d30d02a
  flatArea c50387668f8e570ba03b4875269be9e8
  interArea 1a57b66a1918e60a1c093487dbdb6d77
  interMetric 7b123234da5bff1e9d5f5bfbd52a6db4
  invEta 654a36e8807dd2df11817151dcb7615d
import  -/  EquivarianceEqns fbf17c99090e8b0250ffa5ce800c62ed
  exports: 17332bd3a91566b072d1511317ff9a55
import  -/  Index 60260ed90a129e1e10b6c5fafcb2ded1
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index 5df768242bb15e89c1079fab7e7d3758
  Lind_20 8a3588434be3c9662430693d2d2e332f
  Lind_9 89b0e08dbee85927dc2463ead2b84188
  Linds_3 562700c5f35c258ae2adef3c77ddc1b1
  Uind_20 f2c1b76a3e7f0dd431510d7cb9f659a1
  Uind_9 ab8f3576b9e9258982a5d77295330a40
  Uinds_3 63ef11ca566ba01817ced09e779f86a0
  getValInd 974a87ce371ea262afad5f9d63705d90
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde eae954b97181edb505aaa709b5471e56
  exports: d780795f6c5eb865753089f7498e7db4
import  -/  Tensor 176e25c77f5f937264699042a39a34a2
  exports: 9a68ab01e29b77db9280f7aa573b73ab
  Tensor 1ac5ddd89ae57be76544d24271fdf653
  Tensor de2cb2f95a4c3ff6ea3ffdde0ef67deb
  tensorAdd b03543f4dfebee64226240002a5665ef
  tensorContractWith_20 6cf282d64edd6c9ec712d855bb38e06a
  tensorContractWith_3 529107206dcaa10693fc48c26137b94b
  tensorProductNumeric 0a352647ad8349c5cc4ef731b863771f
  tensorProductWith 6e1300f3b6ea8f7dd056901f69230be2
  tensorSub 5ae6e28292f5ee5e3aebc88142b4d18f
  tensorTranspose 3f7c7309fc31e499e4e26c886fbf7b4a
5d8326a4186576bff5e37039e72b7c53
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Order3Int.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Order3Int.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Order3Int.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Order3Int.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
df822f186b912d974f244c31c0f87004
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a050e0459f04cd0c4a537261f09137f2
  $sinsertWithR_$sgo8 ::
    (a1 -> a1 -> a1)
    -> Index.Index 3 3 0 0 0 0 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U))><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
a49ece54097b60acbbafe31e61bbab65
  $sinsertWith_$sgo8 ::
    (a1 -> a1 -> a1)
    -> Index.Index 3 3 0 0 0 0 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1
  {- Arity: 4,
     Strictness: <L,1*C1(C1(U))><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
068e0cea815dabcfd02e6749c1dce1ef
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
53700895d36df62c674afccdce3f7cda
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
7165b17b59e95f3a9132b433853a9390
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
f531f49cc075ed7481b584056a6eeb50
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8364734214fa3c279bbb5763dda9b7d1
  $stensorContractWith_6 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
4f26915ded0c7507de6e84a0bd394e38
  $stensorContractWith_7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
b05472988163b3cdf43dbeca42a009c6
  $stensorContractWith_8 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_9 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
3b5c31f6aa64eb89d3a238c108968311
  $stensorContractWith_9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
bcc6c08c33fb2ad12a41f9bab8baa469
  $sunionWith ::
    (a -> a -> a)
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,1*U>, Inline: [~] -}
2033b8212ef7cfaf8a753432945eba54
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Order3Int.$trModule3
                   Order3Int.$trModule1) -}
65715b53efc3aeade8ffc8a1caa7b111
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule2) -}
64e313bd1081206e69918a15e9cdfae2
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Order3Int"#) -}
3d2343307ce0c62f757eaea5cf4fa8f2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule4) -}
6966d8ba86e0966deb6ba4e1c1245492
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
430a1f154902d5af2b5c67eea21480fe
  $w$sgo1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
63b42e1335ceb798d700c5ce7903f958
  $w$sgo13 ::
    Index.Uinds_20 3
    -> Index.Linds_20 3
    -> Index.Uinds_19 0
    -> Index.Linds_19 0
    -> Index.Uinds_9 0
    -> Index.Linds_9 0
    -> Index.Uinds_3 1
    -> Index.Linds_3 1
    -> Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1
    -> (# Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1,
          GHC.Base.Maybe a1,
          Data.Map.Internal.Map (Index.Index 3 3 0 0 0 0 1 1) a1 #)
  {- Arity: 9,
     Strictness: <L,1*U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U>,
     Inline: [0] -}
b8b65fdad3ccc588208c10a4e2e1e1d6
  $wansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
10dc7c3bc9dbfbbf6457ade6c9008a64
  $wintABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
b5959151e5618a6adfa19d31b7e1b6dd
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a99641929880b77786ceaad82ecaad40
  ansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzABC w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
f2310b763e9b8ac9a265c840dfd49a30
  intABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintABC w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
bdba7efda9a3c61d214b601ad8ee3637
  mkEqnSparseAnsatzABC2 ::
    Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzABC2_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
a32e93d7b996f45d233f7aa5015a0101
  mkEqnSparseAnsatzABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
9b0a7160d1ca42ac3319e8d77d79d12f
  mkEqnSparseIntABC2 ::
    Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseIntABC2_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
5018bd362c6d484ecf92258d5a8c3226
  mkEqnSparseIntABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/Order3Int fromList @ (Int, Int) _" [orphan] forall @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (GHC.Types.Int, GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Order3Int.$sfromList @ a
"SPEC/Order3Int unionWith @ (Index 3 3 0 0 0 0 1 1) _" [orphan] forall @ a
                                                                       ($dOrd :: GHC.Classes.Ord
                                                                                   (Index.Index
                                                                                      3
                                                                                      3
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      0
                                                                                      1
                                                                                      1))
  Data.Map.Strict.Internal.unionWith @ (Index.Uinds_20 3,
                                        Index.Linds_20 3, Index.Uinds_19 0, Index.Linds_19 0,
                                        Index.Uinds_9 0, Index.Linds_9 0, Index.Uinds_3 1,
                                        Index.Linds_3 1)
                                     @ a
                                     $dOrd
  = Order3Int.$sunionWith @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

