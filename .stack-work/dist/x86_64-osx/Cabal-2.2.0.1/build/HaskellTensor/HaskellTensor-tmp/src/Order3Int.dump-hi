
==================== FINAL INTERFACE ====================
2019-01-14 11:31:23.19234 UTC

interface main:Order3Int [hpc] 8043
  interface hash: dd59e1ffac37b480ac052e4cdb49f72a
  ABI hash: 38547e5194de278e0928efeed77c6267
  export-list hash: 9507dc54ea2831b0f018c3a4667f8526
  orphan hash: 61f0312ee15d486736ece543fdb9271c
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Order3Int.ansatzABC
  Order3Int.intABC
  Order3Int.mkEqnSparseAnsatzABC2
  Order3Int.mkEqnSparseIntABC2
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  BasicTensors d4363735d8d89b5596a5cfb59fbaa771
  exports: 867791133ab0dbc401ec9d976534d4e5
  aSymI_2 4a1af4f010adeaa34f7da1a95fa44ac6
  delta_20 a12e0bf55fbca556e82591a334e54a64
  delta_3 f8623c08b91ede6b0091299a725d4ab7
  flatArea bbf091d9addc9a92105b91e0f02cc79f
  interArea 1b6b8bad098e65d425eee3f6f4818547
  interMetric 6dcab690508dd8b81188385a28f8e287
  invEta 13d253f89307018a8d192c06ea8a2c9b
import  -/  EquivarianceEqns 328105ba29cf8bbc07964656fa9d8b53
  exports: 84062590276b987b26bd45d594b7213f
import  -/  Index 4e45ffe97a9e3350beda6ba6fddd508e
  exports: 02acfc58131cc32506762c89c9bc64b7
  Index 20ea1ce731123e1c4a29c95a066e5a72
  Lind_20 e4ac8c6f7ebef7ec8e61c4d2cfb1eb39
  Lind_9 4aee189fe42e76ae12f56b446871f579
  Linds_3 d96a0ea977d5e85b62cd5a4bb306555b
  Uind_20 48afc3e8961cc0b26810f59a3ecd189e
  Uind_9 56099c3d674cbe5024bf0cce617d25f7
  Uinds_3 1dd738c5bf5e3d67af91d29761e9a9ea
  getValInd 532498a9d05dd6bfa58ced3cada61264
import  -/  Ivar 52a8dc212ab2f8456a526e9d381a1784
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde 6cb99ff48b3771dcca3d3397050c4c62
  exports: cfda6ba989dea29b657cfa7f1b7972bc
import  -/  Tensor 88b99fd1b88cbea55a626a90a73dd2b2
  exports: 1f9546fa9c961086005dc0c53843135a
  Tensor 61e35ef6c9a6611fa135938208248967
  Tensor 3ab1a6a46c1592b826cacc18b7d3183c
  tensorAdd 4349b34508e930ef1dea91c900812cb6
  tensorContractWith_20 0ed633e005cddd886e47ee44a729ae97
  tensorContractWith_3 32b1524ea23a0fe2397cbf4893bf7082
  tensorProductWith cffa20a3309e88d9f99b616ada68e984
  tensorSub b3ba3aa7428b7472f46218743de635c8
  tensorTranspose abf7043c548be68c6d28ead296b47924
5d8326a4186576bff5e37039e72b7c53
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Order3Int.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Order3Int.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Order3Int.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Order3Int.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
df822f186b912d974f244c31c0f87004
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
068e0cea815dabcfd02e6749c1dce1ef
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
53700895d36df62c674afccdce3f7cda
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
7165b17b59e95f3a9132b433853a9390
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
f531f49cc075ed7481b584056a6eeb50
  $stensorContractWith_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8364734214fa3c279bbb5763dda9b7d1
  $stensorContractWith_6 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
4f26915ded0c7507de6e84a0bd394e38
  $stensorContractWith_7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
b05472988163b3cdf43dbeca42a009c6
  $stensorContractWith_8 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_9 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
3b5c31f6aa64eb89d3a238c108968311
  $stensorContractWith_9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
2033b8212ef7cfaf8a753432945eba54
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Order3Int.$trModule3
                   Order3Int.$trModule1) -}
65715b53efc3aeade8ffc8a1caa7b111
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule2) -}
64e313bd1081206e69918a15e9cdfae2
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Order3Int"#) -}
3d2343307ce0c62f757eaea5cf4fa8f2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule4) -}
6966d8ba86e0966deb6ba4e1c1245492
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d41571fd51e4b90138f825bd6d4a49ba
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
9d378bb80b11a5f5b76a902bbebc1083
  $wansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
d92d885e5e29616ea7e05981d0bbf47b
  $wintABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
b5959151e5618a6adfa19d31b7e1b6dd
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
00abfbfa0224ed84288f252a637a699f
  ansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzABC w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
e7205d91b36ce7a4617cf9e02a4b75cc
  intABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintABC w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
61ae9e15e42657180dccfc2013d97694
  mkEqnSparseAnsatzABC2 ::
    Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational) ->
                 {__scc {main:Order3Int.mkEqnSparseAnsatzABC2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                          Order3Int.$sfromList
                                                                            @ (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                            (Order3Int.mkEqnSparseAnsatzABC2_go13
                                                                               (GHC.Types.[]
                                                                                  @ ((GHC.Types.Int,
                                                                                      GHC.Types.Int),
                                                                                     GHC.Real.Rational))
                                                                               map1) }) -}
d8a1dbef8b7c0aceb90f68ce719acb04
  mkEqnSparseAnsatzABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
4c948ce08e6bc4d092932253dca10ec6
  mkEqnSparseIntABC2 ::
    Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational) ->
                 {__scc {main:Order3Int.mkEqnSparseIntABC2} True True} case ds of wild { Tensor.Tensor map1 ->
                                                                       Order3Int.$sfromList
                                                                         @ (GHC.Real.Ratio
                                                                              GHC.Integer.Type.Integer)
                                                                         (Order3Int.mkEqnSparseIntABC2_go13
                                                                            (GHC.Types.[]
                                                                               @ ((GHC.Types.Int,
                                                                                   GHC.Types.Int),
                                                                                  GHC.Real.Rational))
                                                                            map1) }) -}
1ab0cef1f294f51e4528565c346b9719
  mkEqnSparseIntABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/Order3Int fromList @ (Int, Int) _" [orphan] forall @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (GHC.Types.Int, GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Order3Int.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

