
==================== FINAL INTERFACE ====================
2019-02-01 11:42:47.76821 UTC

interface main:Order3Int 8043
  interface hash: ae596a6923e47eed152843742336ca98
  ABI hash: 05a8630095ffb3a03a6e0c63018c41a5
  export-list hash: 81fa4163c0bc1061b90598d78c984378
  orphan hash: b397196ae13186cbd1ea609779cb4369
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Order3Int.ansatzABC
  Order3Int.ansatzABC2
  Order3Int.ansatzAIBC
  Order3Int.ansatzAIBbC
  Order3Int.ansatzAaBC
  Order3Int.ansatzAaBbC
  Order3Int.intABC
  Order3Int.intAIBC
  Order3Int.intAIBJC
  Order3Int.intAaBbC
  Order3Int.intAaBbC2
  Order3Int.mkEqnSparseAnsatzABC2
  Order3Int.mkEqnSparseAnsatzABCTrian
  Order3Int.mkEqnSparseAnsatzAIBC
  Order3Int.mkEqnSparseAnsatzAIBbC
  Order3Int.mkEqnSparseAnsatzAaBC
  Order3Int.mkEqnSparseAnsatzAaBbC
  Order3Int.mkEqnSparseAnsatzAaBbCTrian
  Order3Int.mkEqnSparseIntABC2
  Order3Int.mkEqnSparseIntABCTrian
  Order3Int.mkEqnSparseintAIBC
  Order3Int.mkEqnSparseintAIBJCTrian
  Order3Int.mkEqnSparseintAaBbC
  Order3Int.mkEqnSparseintAaBbCTrian
module dependencies: BasicTensors EquivarianceEqns Index Ivar Pde
                     Tensor
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  BasicTensors d370033bab7dfa9fcc69ea504e0a958d
  exports: d7714270655295c06db8e25f1d3ae43c
  aSymI_2 b412cb5818260abbd80b30e15bb34ec6
  delta_20 25def28fd6a7db28a352ac0ec47e807b
  delta_3 20fe95723b0f42bf99216389c232614b
  delta_9 0a152dd63439e385bbf9fb92d11dcd7d
  flatArea a47cade0010bb221e3d8fdf99e51dae5
  interArea 3e55a2739fd7cf90177e2703d17359db
  interEqn1_2 336e6115b7f9e70f11318e244a91bb27
  interEqn1_3 98aafd70931bd3b29f3e0b9490a7e709
  interMetric 8516fe9cbc20ae7cce26d7f29f76a4e6
  invEta 941c71f76301c1d3f9ad39087948b0c1
import  -/  EquivarianceEqns f59ee1afa8c9f10e79bfa6c25205f4a0
  exports: 753233c47284511068d96a6925317f46
import  -/  Index 846d6195a6d682ebc4b5552893fd0d45
  exports: 57bd4ebf86e1ac997dd2a9c3171f207b
  Index f1b2e2d342d299287fa67a4a38056bc6
  Index d1cd1067a874dee8fab194e163b456d3
  Lind_20 8ff213bd2e4ee9794357cd73b8656e72
  Lind_9 d899f69b9977ade0529b5015a71fa56c
  Linds_3 c2218f06873d6e75f70ab22fa89ca846
  Uind_20 da1c3284cea79be72eb1a0454a6da0ec
  Uind_9 bdc578619f32ac1d154acb21ac900fa3
  Uinds_3 8e007ccb52f8036461e378de4876a33c
  getValInd 2f343080b63386f163ac2db0992f586e
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
import  -/  Pde 01727937c27ae17d2b109d09ad686ca8
  exports: b2cd66be74d90ac4a27aea2ce34825a2
import  -/  Tensor c5dfa081ae5ad523bef39ca8def0f654
  exports: af2b4fe26a34e82b11fcad14a4c891cb
  Tensor 939d8f0d009a7bad571c4642c9cd98df
  Tensor 6ebce5ff137d1d5d966e303383d35759
  tensorAdd d99ca0e639c925dc556efc00daeae60d
  tensorContractWith_20 75e177f0052fa4c7f69a2260778740ed
  tensorContractWith_3 f04596f955f3e30f9459e535b650bdae
  tensorProductNumeric 419d42041587ab991a229bb228dec18f
  tensorSub 4712786dc2f094bb059ae94da1bab1e3
  tensorTranspose bf772467c4363e927c1ee5deaa31eb8b
bf61f1d8cbf49a746a249c20a9812a6a
  $s^1 :: GHC.Types.Int
  {- Strictness: x -}
ffb5fd22cce05cf70976cd676a0c213a
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
920aacd856636c3fa7c91a10d9dd85b0
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
c7aec928c342bbe94cf3a158f1870a84
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
5d8326a4186576bff5e37039e72b7c53
  $sfromList ::
    [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt1 { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             1#
                             dt1
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Order3Int.$sfromList1
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, GHC.Types.Int)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, GHC.Types.Int)
                                             @ a))
                                       wild2
                                  1#
                                  -> case ww2 of wild6 { GHC.Types.I# x1 ->
                                     case ww5 of wild7 { GHC.Types.I# y ->
                                     case GHC.Prim.<# x1 y of lwild2 {
                                       DEFAULT
                                       -> Order3Int.$sfromList1
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2
                                       1#
                                       -> Order3Int.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, GHC.Types.Int)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, GHC.Types.Int)
                                                  @ a))
                                            wild2 } } } }
                             1#
                             -> Order3Int.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, GHC.Types.Int)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a))
                                  wild2 } } } } } } } } }) -}
df822f186b912d974f244c31c0f87004
  $sfromList1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
b7d87696765d4675163591dffbbcbe1a
  $smapKeysWith ::
    (a -> a -> a)
    -> (k1 -> (GHC.Types.Int, GHC.Types.Int))
    -> Data.Map.Internal.Map k1 a
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,C(C1(U))><L,C(U)><S,1*U>,
     Unfolding: (\ @ a
                   @ k1
                   (c :: a -> a -> a)
                   (f :: k1 -> (GHC.Types.Int, GHC.Types.Int))
                   (eta :: Data.Map.Internal.Map k1 a) ->
                 let {
                   f1 :: (GHC.Types.Int, GHC.Types.Int) -> a -> a -> a
                     {- Arity: 3, Strictness: <L,A><L,U><L,U>,
                        Unfolding: InlineRule (3, True, True)
                                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) (x1 :: a) (y :: a) ->
                                    c x1 y) -}
                   = \ (ds :: (GHC.Types.Int, GHC.Types.Int))
                       (x1 :: a)[OneShot]
                       (y :: a)[OneShot] ->
                     c x1 y
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map k1 a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, GHC.Types.Int), a)])
                       (ds :: Data.Map.Internal.Map k1 a) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt1 kx x l r
                       -> go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, GHC.Types.Int), a)
                               (f kx, x)
                               (go13 z' r))
                            l
                       Data.Map.Internal.Tip -> z' }
                 } in
                 letrec {
                   go14 :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                           -> [((GHC.Types.Int, GHC.Types.Int), a)]
                           -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a)
                       (ds :: [((GHC.Types.Int, GHC.Types.Int), a)]) ->
                     case ds of wild {
                       [] -> z
                       : x1 xs
                       -> case x1 of wild1 { (,) k x2 ->
                          case k of ww { (,) ww1 ww2 ->
                          case Order3Int.$w$sgo1 @ a f1 ww1 ww2 x2 z of z' { DEFAULT ->
                          go14 z' xs } } } }
                 } in
                 go14
                   (Data.Map.Internal.Tip @ (GHC.Types.Int, GHC.Types.Int) @ a)
                   (go13 (GHC.Types.[] @ ((GHC.Types.Int, GHC.Types.Int), a)) eta)) -}
1665b2920556d386a5e7599d3b3cf016
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
7ac4b59162e06a19abf2f6b354ba1a99
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
a49d58137e8fa4b06291ae645718799d
  $stensorContractWith_3 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$seven1 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
448ae60920f57a4f894b215d8d43f780
  $stensorContractWith_5 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$stensorContractWith_6 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
9baa58133699ab094f6dc45f53bd9cbc
  $stensorContractWith_6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
f6f4fdaf272ee7687bc717d5645bde46
  $stensorContractWith_7 :: GHC.Natural.Natural
  {- Unfolding: (case Order3Int.$s^2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt1
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt1)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt1 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt1
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt1 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
2033b8212ef7cfaf8a753432945eba54
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Order3Int.$trModule3
                   Order3Int.$trModule1) -}
65715b53efc3aeade8ffc8a1caa7b111
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule2) -}
64e313bd1081206e69918a15e9cdfae2
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Order3Int"#) -}
3d2343307ce0c62f757eaea5cf4fa8f2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Order3Int.$trModule4) -}
6966d8ba86e0966deb6ba4e1c1245492
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
55e3f024db9b700a14a805d2c11c76cb
  $w$s^ :: GHC.Types.Int -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger# w1 Order3Int.$s^2 of wild {
                   DEFAULT
                   -> case GHC.Integer.Type.eqInteger# w1 Order3Int.$s^2 of wild1 {
                        DEFAULT
                        -> case w of ww { GHC.Types.I# ww1 -> Order3Int.$wf ww1 w1 }
                        1# -> 1# }
                   1# -> case Order3Int.$s^1 ret_ty GHC.Prim.Int# of {} }) -}
2d8a3f3510cd9871bdd049fb4566b252
  $w$sgo1 ::
    ((GHC.Types.Int, GHC.Types.Int) -> a1 -> a1 -> a1)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5,
     Strictness: <L,1*C1(C1(C1(U)))><L,U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
d41571fd51e4b90138f825bd6d4a49ba
  $w$sgo13 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U(U)><L,U><S,1*U>,
     Inline: [0] -}
499ba1c7098650be506cc685b7206050
  $wansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
c227d30f0fc9dafe4ea278580fb1f304
  $wansatzABC2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
d2449f47d2b1f3c07ac9b0b31834e036
  $wansatzAIBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 2 1 0 0) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
4d3aabdbf9dce1723eaa49f009a73ffa
  $wansatzAIBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 2 1 1 1) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
fbeedf0f5f5b1c58576a61d47ba110ab
  $wansatzAaBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 1 1) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
8d4ddb132c8ea7408cbfa86662e9577b
  $wansatzAaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 3 3 0 0 1 0 2 2) GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
b20668e78fddd21cfbcb0df195ea7a3c
  $wf :: GHC.Prim.Int# -> GHC.Integer.Type.Integer -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
c8b5c4fb3a5c3ea4893f3d2d3136c3a2
  $wintABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
e8dadd0e240cc7136edf457a7dadb512
  $wintAIBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 1 1 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
52b7e9cabee67a918cd440a017d9dc96
  $wintAIBJC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 2 2 2 2) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0] -}
3af8506feb21457e2f7d192e6e832c71
  $wintAaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 4 4) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
ee1e86554a114b6e483f3b3ca2bc0a09
  $wintAaBbC2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> (# Data.Map.Internal.Map
            (Index.Index 2 3 0 0 0 0 4 4) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
bc2d25ff08d86ef8c2c0553b08315d63
  $wmkEqnSparseAnsatzABCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
17dbfdf7c327203b261049332e89cb11
  $wmkEqnSparseAnsatzAaBbCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
f0b32cd345eccb0baf8b1f1df904fb07
  $wmkEqnSparseIntABCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
28ce5e533fee10ba9baba0034e55226b
  $wmkEqnSparseintAIBJCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 2 2 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
7258a89bac43c7a1a06ac8b79b33f854
  $wmkEqnSparseintAaBbCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 4 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
b5959151e5618a6adfa19d31b7e1b6dd
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, GHC.Types.Int), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
5b653285e274d1a48caf6e42d3430a50
  ansatzABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzABC w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
ccbd13247fdfc32676ed0c42720ffa81
  ansatzABC2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzABC2 w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
bf70818fc368c84d711c376599dc78b2
  ansatzAIBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 2 1 0 0 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzAIBC w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
837cf5213ba09530ed26a4b69b28eb66
  ansatzAIBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 2 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzAIBbC w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 2
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
f0a0b49fbaff0f48aa6eda274a49f7d4
  ansatzAaBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzAaBC w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
16ccc486491cf83f14ece004f4ca2356
  ansatzAaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 3 3 0 0 1 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wansatzAaBbC w w1 w2 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 3
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
ffb8efa7c2f23207bb83fe977ade28ac
  intABC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintABC w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
b0cdc607a7f06743a833400cdacbb344
  intAIBC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintAIBC w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
b4aaff631877eadbf990c1907d7398dc
  intAIBJC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 2 2 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintAIBJC w w1 w2 w3 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
553df073ada92f90fe8ce0d5e596badb
  intAaBbC ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintAaBbC w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 4
                   @ GHC.Real.Rational
                   ww1 }) -}
b3e2d9c072b9b8f68802e563a56d2fda
  intAaBbC2 ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,A><L,A>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20)
                   (w1 :: Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20)
                   (w2 :: Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9)
                   (w3 :: Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9) ->
                 case Order3Int.$wintAaBbC2 w w1 of ww { Unit# ww1 ->
                 Tensor.Tensor
                   @ 2
                   @ 3
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 4
                   @ GHC.Real.Rational
                   ww1 }) -}
f607c9e623db39e5790513d33344f677
  mkEqnSparseAnsatzABC2 ::
    Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzABC2_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
b58c420d3f59d7ddb945c60be5c96b61
  mkEqnSparseAnsatzABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
92c98bdc22454f3f30d27bfc3da0b75c
  mkEqnSparseAnsatzABCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 3 3 0 0 1 0 0 0 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order3Int.$wmkEqnSparseAnsatzABCTrian w ww1 }) -}
e5cd44f8940a0e84bff495f0808aa1e3
  mkEqnSparseAnsatzAIBC ::
    Tensor.Tensor 3 3 0 0 2 1 0 0 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 2 1 0 0 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzAIBC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
29539189f8d657297e96282bd9038da8
  mkEqnSparseAnsatzAIBC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 2 1 0 0) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
44173df6a2f037c5ca5bd84cdc5dd994
  mkEqnSparseAnsatzAIBbC ::
    Tensor.Tensor 3 3 0 0 2 1 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 2 1 1 1 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzAIBbC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
e5d6dd15db1b84f66e494a56d46d9bd6
  mkEqnSparseAnsatzAIBbC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 2 1 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
9ac65967d4471619acc9a32cf93ea218
  mkEqnSparseAnsatzAaBC ::
    Tensor.Tensor 3 3 0 0 1 0 1 1 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 1 0 1 1 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzAaBC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
908c9c7cf4dcf71d5d81d14782624d48
  mkEqnSparseAnsatzAaBC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 1 1) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
368c435e9f76469695570ec08c5962d7
  mkEqnSparseAnsatzAaBbC ::
    Tensor.Tensor 3 3 0 0 1 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 3 3 0 0 1 0 2 2 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseAnsatzAaBbC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
fbcd4d865243104520e14f26d2e11d23
  mkEqnSparseAnsatzAaBbCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 3 3 0 0 1 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 3 3 0 0 1 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order3Int.$wmkEqnSparseAnsatzAaBbCTrian w ww1 }) -}
0725ad1c90ce48394c3628ca9cdcb711
  mkEqnSparseAnsatzAaBbC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 3 3 0 0 1 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
aa25bf383a9936b65fd185cd11033e3c
  mkEqnSparseIntABC2 ::
    Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseIntABC2_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
0576febf0b1b53e9ee2fea4813127609
  mkEqnSparseIntABC2_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
3a395a4f35df8af5894d63d99fc778f9
  mkEqnSparseIntABCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 3 0 0 0 0 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order3Int.$wmkEqnSparseIntABCTrian w ww1 }) -}
0955b9aa5cd3f9127ee7369ceb1dbd84
  mkEqnSparseintAIBC ::
    Tensor.Tensor 2 3 0 0 1 1 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 1 1 2 2 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseintAIBC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
192bc24d703b98d0984e3c9e37823446
  mkEqnSparseintAIBC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 1 1 2 2) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
33b2e7e018eccdb544d7ddac0cd8baf8
  mkEqnSparseintAIBJCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 3 0 0 2 2 2 2 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 3 0 0 2 2 2 2 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order3Int.$wmkEqnSparseintAIBJCTrian w ww1 }) -}
d9076d58723e82f9f3e2277e22aa6996
  mkEqnSparseintAaBbC ::
    Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational) ->
                 case ds of wild { Tensor.Tensor map1 ->
                 Order3Int.$sfromList
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (Order3Int.mkEqnSparseintAaBbC_go13
                      (GHC.Types.[]
                         @ ((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational))
                      map1) }) -}
dff2a76ab3da71c8c16d2f7775c06bc2
  mkEqnSparseintAaBbCTrian ::
    Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational
    -> Data.Map.Internal.Map
         (GHC.Types.Int, GHC.Types.Int) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (w1 :: Tensor.Tensor 2 3 0 0 0 0 4 4 GHC.Real.Rational) ->
                 case w1 of ww { Tensor.Tensor ww1 ->
                 Order3Int.$wmkEqnSparseintAaBbCTrian w ww1 }) -}
60225efa2088cf2ba7dc85c9c80e9292
  mkEqnSparseintAaBbC_go13 ::
    [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
    -> Data.Map.Internal.Map
         (Index.Index 2 3 0 0 0 0 4 4) GHC.Real.Rational
    -> [((GHC.Types.Int, GHC.Types.Int), GHC.Real.Rational)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
"SPEC/Order3Int fromList @ (Int, Int) _" [orphan] forall @ a
                                                         ($dOrd :: GHC.Classes.Ord
                                                                     (GHC.Types.Int, GHC.Types.Int))
  Data.Map.Internal.fromList @ (GHC.Types.Int, GHC.Types.Int)
                             @ a
                             $dOrd
  = Order3Int.$sfromList @ a
"SPEC/Order3Int mapKeysWith @ (Int, Int) _ _" [orphan] forall @ a
                                                              @ k1
                                                              ($dOrd :: GHC.Classes.Ord
                                                                          (GHC.Types.Int,
                                                                           GHC.Types.Int))
  Data.Map.Internal.mapKeysWith @ (GHC.Types.Int, GHC.Types.Int)
                                @ a
                                @ k1
                                $dOrd
  = Order3Int.$smapKeysWith @ a @ k1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

