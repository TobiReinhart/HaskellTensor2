
==================== FINAL INTERFACE ====================
2018-10-25 18:42:11.086147 UTC

interface main:Pde 8043
  interface hash: 6d5298be1023db4822e8a8e9280f3263
  ABI hash: eae954b97181edb505aaa709b5471e56
  export-list hash: d780795f6c5eb865753089f7498e7db4
  orphan hash: 613b4f9044391f1272e87199183c49b3
  flag hash: 707c86cfbee6a9c65f08462953a21ad8
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Pde.addMultiInds
  Pde.combinePdes
  Pde.deriveIvar1
  Pde.evalPdeRand
  Pde.isDerivableIvar1
  Pde.mkAllMultInds
  Pde.mkPdefromTens
  Pde.multInd2Number1
  Pde.number2MultInd
  Pde.print2Maple
  Pde.print2MaplePde
  Pde.printConstPde
  Pde.prolongPde
  Pde.prolongPdeAll
  Pde.prolongPdeAllBlock1
  Pde.prolongPdeConst
  Pde.prolongPdeIvar
  Pde.prolongSymbolAll
  Pde.triangleMap
module dependencies: Ivar
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Natural 8647cd09d4aefcb1ec93a2d9a92f1f1a
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Numeric.Natural da273ddb373e0510fde98e17e4aa338f
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.IntMap.Internal ef73a09d9589b16c95e337bc0715aa57
import  -/  containers-0.5.11.0:Data.IntMap.Strict 79a3c61ca2c76eb71c4304029717e288
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Map.Strict 40ac55e8c7db7b7f0f7e3d9769233909
import  -/  containers-0.5.11.0:Data.Map.Strict.Internal 372117aaabc2f1ff2039eaf324fdb5c6
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Ivar 59828d84f4f392dde7d157e78b1e20aa
  exports: 847b7f62b7be31da91814bf314ffd8e5
  Ivar 4ecbaf682cffce8cfc04b6bf4cdca2dd
  Ivar 6fb5b1c62e6ccfd9020c45c8471a027a
  addIvar d292753012f6d0425a83cacf61d3f780
  mkIvarRandom 5f4c925932a384933962e82d4400d7a2
  showIvarRational 845045f98240ad11356e64a039b10cbc
6f598f8bafc2144bc3f64abb7e3051bc
  $fEqMultiIndex :: GHC.Classes.Eq Pde.MultiIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Pde.MultiIndex
                  Pde.$fEqMultiIndex2
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R)
                  Pde.$fEqMultiIndex1
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R) -}
02c1ccf12ec7b4b5d9af42e4d4986981
  $fEqMultiIndex1 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (t1 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural)
                   (t2 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural) ->
                 Data.IntMap.Internal.nequal
                   @ GHC.Natural.Natural
                   GHC.Natural.$fEqNatural
                   t1
                   t2) -}
45a51ba2d112c9c6d6e6a9c1439e9f7c
  $fEqMultiIndex2 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (t1 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural)
                   (t2 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural) ->
                 Data.IntMap.Internal.equal
                   @ GHC.Natural.Natural
                   GHC.Natural.$fEqNatural
                   t1
                   t2) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fOrdMultiIndex :: GHC.Classes.Ord Pde.MultiIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Pde.MultiIndex
                  Pde.$fEqMultiIndex
                  Pde.$fOrdMultiIndex7
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Ordering>_R)
                  Pde.$fOrdMultiIndex6
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R)
                  Pde.$fOrdMultiIndex5
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R)
                  Pde.$fOrdMultiIndex4
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R)
                  Pde.$fOrdMultiIndex3
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R <GHC.Types.Bool>_R)
                  Pde.$fOrdMultiIndex2
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0]))
                  Pde.$fOrdMultiIndex1
                    `cast`
                  (Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])
                   ->_R Sym (Pde.N:MultiIndex[0])) -}
0aa8d43a0d3ab2e385727fc2195d6cd9
  $fOrdMultiIndex1 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$cmin
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
8f1117eac090a93ad2ae07c5e8383a71
  $fOrdMultiIndex2 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$cmax
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
e231b7fb8e330a88230ddf993c768e93
  $fOrdMultiIndex3 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$c>=
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
4ef0b41611cbfdf34f1da8392bb12f0e
  $fOrdMultiIndex4 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$c>
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
6b7bba1f583f56d67887142d533bb061
  $fOrdMultiIndex5 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$c<=
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
51cdcdc20a274ec3911f7e6fab25ad56
  $fOrdMultiIndex6 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Data.IntMap.Internal.$fOrdIntMap_$c<
                   @ GHC.Natural.Natural
                   GHC.Natural.$fOrdNatural) -}
47c5046980dd97006eb31c36dde6c5a6
  $fOrdMultiIndex7 ::
    Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (m1 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural)
                   (m2 :: Data.IntMap.Internal.IntMap GHC.Natural.Natural) ->
                 GHC.Classes.$fOrd[]_$ccompare
                   @ (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                   Pde.$fOrdMultiIndex_$s$fOrd(,)
                   (GHC.Base.build
                      @ (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                      (\ @ b
                         (c :: (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                               -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       Data.IntMap.Internal.foldrFB
                         @ GHC.Natural.Natural
                         @ b
                         (\ (k :: Data.IntSet.Internal.Key)
                            (x :: GHC.Natural.Natural)[OneShot]
                            (xs :: b)[OneShot] ->
                          c (k, x) xs)
                         n
                         m1))
                   (GHC.Base.build
                      @ (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                      (\ @ b
                         (c :: (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                               -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       Data.IntMap.Internal.foldrFB
                         @ GHC.Natural.Natural
                         @ b
                         (\ (k :: Data.IntSet.Internal.Key)
                            (x :: GHC.Natural.Natural)[OneShot]
                            (xs :: b)[OneShot] ->
                          c (k, x) xs)
                         n
                         m2))) -}
d89e17be6be531fd4be1ee9fc4562d04
  $fOrdMultiIndex_$s$fEq(,) ::
    GHC.Classes.Eq (GHC.Types.Int, GHC.Natural.Natural)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Natural.Natural)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fEqInt
                     GHC.Natural.$fEqNatural)
                  Pde.$fOrdMultiIndex_$s$fEq(,)_$c/= -}
1dc73c880f96eab02af0bce5df50b904
  $fOrdMultiIndex_$s$fEq(,)_$c/= ::
    (GHC.Types.Int, GHC.Natural.Natural)
    -> (GHC.Types.Int, GHC.Natural.Natural) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (GHC.Types.Int, GHC.Natural.Natural))
                   (y :: (GHC.Types.Int, GHC.Natural.Natural)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case a2 of wild4 {
                        GHC.Natural.NatS# a4
                        -> case b2 of wild5 {
                             GHC.Natural.NatS# b4
                             -> case GHC.Prim.eqWord# a4 b4 of lwild {
                                  DEFAULT -> GHC.Types.True 1# -> GHC.Types.False }
                             GHC.Natural.NatJ# ipv -> GHC.Types.True }
                        GHC.Natural.NatJ# dt
                        -> case b2 of wild5 {
                             GHC.Natural.NatS# ipv -> GHC.Types.True
                             GHC.Natural.NatJ# dt1
                             -> let {
                                  nx# :: GHC.Integer.Type.GmpSize#
                                  = GHC.Prim.uncheckedIShiftRL# (GHC.Prim.sizeofByteArray# dt) 3#
                                } in
                                case GHC.Prim.==#
                                       nx#
                                       (GHC.Prim.uncheckedIShiftRL#
                                          (GHC.Prim.sizeofByteArray# dt1)
                                          3#) of lwild {
                                  DEFAULT -> GHC.Types.True
                                  1#
                                  -> case {__pkg_ccall integer-gmp-1.0.2.0 GHC.Prim.ByteArray#
                                                                           -> GHC.Prim.ByteArray#
                                                                           -> GHC.Prim.Int#
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 GHC.Prim.Int# #)}
                                            dt
                                            dt1
                                            nx#
                                            GHC.Prim.realWorld# of wild6 { (#,#) ds3 ds4 ->
                                     case ds4 of wild3 {
                                       DEFAULT -> GHC.Types.True
                                       0# -> GHC.Types.False } } } } } } } }) -}
aa09a37d0c99c5e8f63d74aebd56fadb
  $fOrdMultiIndex_$s$fOrd(,) ::
    GHC.Classes.Ord (GHC.Types.Int, GHC.Natural.Natural)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Natural.Natural)
                  Pde.$fOrdMultiIndex_$s$fEq(,)
                  (GHC.Classes.$fOrd(,)_$ccompare
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural)
                  (GHC.Classes.$fOrd(,)_$c<
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural)
                  (GHC.Classes.$fOrd(,)_$c<=
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural)
                  (\ (a1 :: (GHC.Types.Int, GHC.Natural.Natural))
                     (b1 :: (GHC.Types.Int, GHC.Natural.Natural)) ->
                   GHC.Classes.$fOrd(,)_$c<
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural
                     b1
                     a1)
                  (GHC.Classes.$fOrd(,)_$c>=
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural)
                  (GHC.Classes.$fOrd(,)_$cmax
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural)
                  (GHC.Classes.$fOrd(,)_$cmin
                     @ GHC.Types.Int
                     @ GHC.Natural.Natural
                     GHC.Classes.$fOrdInt
                     GHC.Natural.$fOrdNatural) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fShowMultiIndex :: GHC.Show.Show Pde.MultiIndex
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Pde.MultiIndex
                  Pde.$fShowMultiIndex_$cshowsPrec
                  Pde.$fShowMultiIndex_$cshow
                  Pde.$fShowMultiIndex_$cshowList -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fShowMultiIndex1 :: Pde.MultiIndex -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (w :: Pde.MultiIndex) -> Pde.$w$cshowsPrec 0# w) -}
1f1cb05dc322fd59f35240d33fa594f1
  $fShowMultiIndex2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.$fShowMultiIndex3) -}
54f3ce15a4ac6c27473c23173657a3eb
  $fShowMultiIndex3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MultiIndex "#) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fShowMultiIndex_$cshow :: Pde.MultiIndex -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Pde.MultiIndex) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Pde.$fShowMultiIndex2)
                   (Data.IntMap.Internal.$w$cshowsPrec
                      @ GHC.Natural.Natural
                      GHC.Natural.$fShowNatural
                      11#
                      x `cast` (Pde.N:MultiIndex[0])
                      (GHC.Types.[] @ GHC.Types.Char))) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fShowMultiIndex_$cshowList :: [Pde.MultiIndex] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Pde.MultiIndex]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Pde.MultiIndex Pde.$fShowMultiIndex1 ls s) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $fShowMultiIndex_$cshowsPrec ::
    GHC.Types.Int -> Pde.MultiIndex -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Pde.MultiIndex) ->
                 case w of ww { GHC.Types.I# ww1 -> Pde.$w$cshowsPrec ww1 w1 }) -}
a8451ea4489922dbe82fe1615b48cdea
  $fShowPde :: GHC.Show.Show a => GHC.Show.Show (Pde.Pde a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C1(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Pde.Pde a)
                  (Pde.$fShowPde_$cshowsPrec @ a v)
                  (Pde.$fShowPde_$cshow @ a v)
                  (Pde.$fShowPde_$cshowList @ a v) -}
4e3608ff1c2528e89a7b42a08e0c19be
  $fShowPde1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c05f2926b9f68eda2f75e6fda574f483
  $fShowPde2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.$fShowPde3) -}
b502243e0c86ef687c996766e656b8b5
  $fShowPde3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pde "#) -}
a8451ea4489922dbe82fe1615b48cdea
  $fShowPde_$cshow :: GHC.Show.Show a => Pde.Pde a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C1(U))),A,A)><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Pde.Pde a) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Pde.$fShowPde2)
                   (Data.Map.Internal.$w$cshowsPrec
                      @ (GHC.Types.Int, Pde.MultiIndex)
                      @ a
                      Pde.$fShowPde_$s$fShow(,)
                      $dShow
                      11#
                      x `cast` (Pde.N:Pde[0] <a>_N)
                      (GHC.Types.[] @ GHC.Types.Char))) -}
a8451ea4489922dbe82fe1615b48cdea
  $fShowPde_$cshowList ::
    GHC.Show.Show a => [Pde.Pde a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C1(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Pde.Pde a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Pde.Pde a)
                   (Pde.$fShowPde_$cshowsPrec @ a $dShow Pde.$fShowPde1)
                   ls
                   s) -}
a8451ea4489922dbe82fe1615b48cdea
  $fShowPde_$cshowsPrec ::
    GHC.Show.Show a => GHC.Types.Int -> Pde.Pde a -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,U(C(C1(C1(U))),A,A)><S(S),1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Pde.Pde a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Pde.$w$cshowsPrec1 @ a w ww1 w2 }) -}
6a53786827a5954aa8b4b2b2c7fce27a
  $fShowPde_$s$fShow(,) ::
    GHC.Show.Show (GHC.Types.Int, Pde.MultiIndex)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, Pde.MultiIndex)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Int
                     @ Pde.MultiIndex
                     GHC.Show.$fShowInt
                     Pde.$fShowMultiIndex)
                  (\ (x :: (GHC.Types.Int, Pde.MultiIndex)) ->
                   GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Types.Int
                     @ Pde.MultiIndex
                     GHC.Show.$fShowInt
                     Pde.$fShowMultiIndex
                     GHC.Show.$fShow(,)1
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [(GHC.Types.Int, Pde.MultiIndex)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Types.Int, Pde.MultiIndex)
                     (GHC.Show.$fShow(,)_$cshowsPrec
                        @ GHC.Types.Int
                        @ Pde.MultiIndex
                        GHC.Show.$fShowInt
                        Pde.$fShowMultiIndex
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
a1e378fb4db7f83d66325a3c97af3fa5
  $sfind1 ::
    [GHC.Types.Int] -> Data.Map.Internal.Map [GHC.Types.Int] a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U> -}
0346df8727f276cf43d4492837fd0485
  $sfromList ::
    [([GHC.Types.Int], a)] -> Data.Map.Internal.Map [GHC.Types.Int] a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [([GHC.Types.Int], a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ [GHC.Types.Int] @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx of dt { DEFAULT ->
                           Data.Map.Internal.Bin
                             @ [GHC.Types.Int]
                             @ a
                             1#
                             dt
                             x1
                             (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a)
                             (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case GHC.Classes.$fOrd[]_$s$ccompare kx ky of wild4 {
                             DEFAULT
                             -> case x of x0 { DEFAULT ->
                                case kx of dt { DEFAULT ->
                                Pde.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ [GHC.Types.Int]
                                     @ a
                                     1#
                                     dt
                                     x0
                                     (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a)
                                     (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a))
                                  wild2 } }
                             GHC.Types.LT
                             -> case x of x0 { DEFAULT ->
                                case kx of dt { DEFAULT ->
                                Pde.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ [GHC.Types.Int]
                                     @ a
                                     1#
                                     dt
                                     x0
                                     (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a)
                                     (Data.Map.Internal.Tip @ [GHC.Types.Int] @ a))
                                  wild2 } } } } } } }) -}
8fee7a28b17587960aba0fedddded9a3
  $sfromList1 ::
    Data.Map.Internal.Map [GHC.Types.Int] a
    -> [([GHC.Types.Int], a)]
    -> Data.Map.Internal.Map [GHC.Types.Int] a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
e2f5c43e3818fc224de7f3f8988a9f87
  $sfromList2 ::
    [((GHC.Types.Int, Pde.MultiIndex), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [((GHC.Types.Int, Pde.MultiIndex), a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (GHC.Types.Int, Pde.MultiIndex) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { (,) ipv ipv1 ->
                           Data.Map.Internal.Bin
                             @ (GHC.Types.Int, Pde.MultiIndex)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, Pde.MultiIndex) @ a)
                             (Data.Map.Internal.Tip @ (GHC.Types.Int, Pde.MultiIndex) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { (,) ww1 ww2 ->
                           case ky of ww3 { (,) ww4 ww5 ->
                           case ww1 of wild4 { GHC.Types.I# x# ->
                           case ww4 of wild5 { GHC.Types.I# y# ->
                           case GHC.Prim.<# x# y# of lwild {
                             DEFAULT
                             -> case GHC.Prim.==# x# y# of lwild1 {
                                  DEFAULT
                                  -> Pde.$sfromList3
                                       @ a
                                       (Data.Map.Internal.Bin
                                          @ (GHC.Types.Int, Pde.MultiIndex)
                                          @ a
                                          1#
                                          ww
                                          x
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, Pde.MultiIndex)
                                             @ a)
                                          (Data.Map.Internal.Tip
                                             @ (GHC.Types.Int, Pde.MultiIndex)
                                             @ a))
                                       wild2
                                  1#
                                  -> case GHC.Classes.$fOrd[]_$ccompare
                                            @ (Data.IntSet.Internal.Key, GHC.Natural.Natural)
                                            Pde.$fOrdMultiIndex_$s$fOrd(,)
                                            (Data.IntMap.Internal.toAscList
                                               @ GHC.Natural.Natural
                                               ww2 `cast` (Pde.N:MultiIndex[0]))
                                            (Data.IntMap.Internal.toAscList
                                               @ GHC.Natural.Natural
                                               ww5 `cast` (Pde.N:MultiIndex[0])) of wild6 {
                                       DEFAULT
                                       -> Pde.$sfromList3
                                            @ a
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, Pde.MultiIndex)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, Pde.MultiIndex)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, Pde.MultiIndex)
                                                  @ a))
                                            wild2
                                       GHC.Types.LT
                                       -> Pde.$wpoly_go13
                                            @ a
                                            1#
                                            (Data.Map.Internal.Bin
                                               @ (GHC.Types.Int, Pde.MultiIndex)
                                               @ a
                                               1#
                                               ww
                                               x
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, Pde.MultiIndex)
                                                  @ a)
                                               (Data.Map.Internal.Tip
                                                  @ (GHC.Types.Int, Pde.MultiIndex)
                                                  @ a))
                                            wild2 } }
                             1#
                             -> Pde.$wpoly_go13
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (GHC.Types.Int, Pde.MultiIndex)
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, Pde.MultiIndex) @ a)
                                     (Data.Map.Internal.Tip @ (GHC.Types.Int, Pde.MultiIndex) @ a))
                                  wild2 } } } } } } } } }) -}
b10f88047444d907d6848be50a8b638b
  $sfromList3 ::
    Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> [((GHC.Types.Int, Pde.MultiIndex), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
8bc1a65a76e66d87d1ecaedb9421212a
  $sinsertWith1 :: GHC.Classes.Ord (GHC.Types.Int, Pde.MultiIndex)
  {- Unfolding: (GHC.Classes.$fOrd(,)
                   @ GHC.Types.Int
                   @ Pde.MultiIndex
                   GHC.Classes.$fOrdInt
                   Pde.$fOrdMultiIndex) -}
1d0097421b2e420dff6f94876efc10ff
  $sinsertWithR_go8 ::
    GHC.Classes.Ord k1 =>
    (a1 -> a1 -> a1)
    -> k1
    -> a1
    -> Data.Map.Internal.Map k1 a1
    -> Data.Map.Internal.Map k1 a1
  {- Arity: 5,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
4f9bbd857957c2cf41e321e8951cf2f9
  $sinsertWith_go8 ::
    GHC.Classes.Ord k1 =>
    (a1 -> a1 -> a1)
    -> k1
    -> a1
    -> Data.Map.Internal.Map k1 a1
    -> Data.Map.Internal.Map k1 a1
  {- Arity: 5,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,1*C1(C1(U))><S,1*U><L,U><S,1*U> -}
e2397924aaa41f91eb4bab198b537224
  $sinsert_$sgo8 ::
    [GHC.Types.Int]
    -> a1
    -> Data.Map.Internal.Map [GHC.Types.Int] a1
    -> Data.Map.Internal.Map [GHC.Types.Int] a1
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
cfdf316d88321223cbb00f8125f04e11
  $sunion ::
    Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
6072eb52f109614441c899450ac5bd3f
  $sunionWith ::
    (a -> a -> a)
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,1*U>, Inline: [~] -}
38a511d05298f5e1fd0d9cb74c5d7205
  $tc'MultiIndex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10623815204585778126##
                   11487948163302695425##
                   Pde.$trModule
                   Pde.$tc'MultiIndex2
                   0#
                   Pde.$tc'MultiIndex1) -}
1bc246811e302c16105152a63a732dc4
  $tc'MultiIndex1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b9cd4fc08c21fd7c525fd5dd7243bbfd
  $tc'MultiIndex2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Pde.$tc'MultiIndex3) -}
78766d314d650705c879f24f6513138c
  $tc'MultiIndex3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MultiIndex"#) -}
0f1a5365c34d18f78af8c6bf3e52d87d
  $tc'Pde :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13006791554997873543##
                   11142193227323426800##
                   Pde.$trModule
                   Pde.$tc'Pde2
                   1#
                   Pde.$tc'Pde1) -}
cebda3179a85ee629989b9865f451be9
  $tc'Pde1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7dfcb383cd3d2a9fd8c8803f77ed0636
  $tc'Pde2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Pde.$tc'Pde3) -}
f8b6c2378a8b9c3f318eeb1a6f18e53c
  $tc'Pde3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pde"#) -}
7d870cbfbba96d98d24f646358a89c6f
  $tcMultiIndex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1164186120300207709##
                   559057422434933506##
                   Pde.$trModule
                   Pde.$tcMultiIndex1
                   0#
                   GHC.Types.krep$*) -}
16de180e23d682c8130b7c432333c8f4
  $tcMultiIndex1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Pde.$tcMultiIndex2) -}
335cfc297d04d83a12520bef28fcf377
  $tcMultiIndex2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MultiIndex"#) -}
b32b65fa07dc227da255536f3ded25b6
  $tcPde :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10145811736971629081##
                   13840776875339125915##
                   Pde.$trModule
                   Pde.$trModule1
                   0#
                   GHC.Types.krep$*Arr*) -}
9d3bbf212e1ad37369559b12b0d3998f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Pde.$trModule3 Pde.$trModule1) -}
117bf4cc9fa53ed8c1d78df072786460
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Pde.$trModule2) -}
a036a957cc1ecdedde4df8b5eb239ef1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pde"#) -}
7bde52d054ade5378552c4195c27e500
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Pde.$trModule4) -}
2583ff2a794963509d38a6d5bfed7059
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
6f598f8bafc2144bc3f64abb7e3051bc
  $w$cshowsPrec :: GHC.Prim.Int# -> Pde.MultiIndex -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Pde.MultiIndex) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = Data.IntMap.Internal.$w$cshowsPrec
                       @ GHC.Natural.Natural
                       GHC.Natural.$fShowNatural
                       11#
                       w `cast` (Pde.N:MultiIndex[0])
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Pde.$fShowMultiIndex2 (g x)
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Pde.$fShowMultiIndex2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }) -}
a8451ea4489922dbe82fe1615b48cdea
  $w$cshowsPrec1 ::
    GHC.Show.Show a => GHC.Prim.Int# -> Pde.Pde a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C1(U))),A,A)><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Pde.Pde a) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = Data.Map.Internal.$w$cshowsPrec
                       @ (GHC.Types.Int, Pde.MultiIndex)
                       @ a
                       Pde.$fShowPde_$s$fShow(,)
                       w
                       11#
                       w1 `cast` (Pde.N:Pde[0] <a>_N)
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Pde.$fShowPde2 (g x)
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Pde.$fShowPde2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }) -}
c3db9c8b96b4908dfc97aabc29ae4124
  $w$sgo13 ::
    (GHC.Types.Int, Pde.MultiIndex)
    -> GHC.Types.Int
    -> Pde.MultiIndex
    -> a1
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a1
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a1
  {- Arity: 5, Strictness: <L,U><L,1*U(U)><L,U><L,U><S,1*U>,
     Inline: [0] -}
f90830731ac85b8d18ad867cc8379c1b
  $wdiffOrder :: Pde.MultiIndex -> GHC.Prim.Int#
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Pde.MultiIndex) ->
                 case w `cast` (Pde.N:MultiIndex[0]) of wild {
                   DEFAULT
                   -> case Pde.isDerivableIvar1_go
                             Pde.isDerivableIvar1_z
                             wild of wild1 {
                        GHC.Natural.NatS# w1
                        -> GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.wordToInteger w1)
                        GHC.Natural.NatJ# dt
                        -> GHC.Integer.Type.integerToInt (GHC.Integer.Type.Jp# dt) }
                   Data.IntMap.Internal.Bin dt dt1 l r
                   -> case GHC.Prim.<# dt1 0# of lwild {
                        DEFAULT
                        -> case Pde.isDerivableIvar1_go
                                  (Pde.isDerivableIvar1_go Pde.isDerivableIvar1_z r)
                                  l of wild1 {
                             GHC.Natural.NatS# w1
                             -> GHC.Integer.Type.integerToInt
                                  (GHC.Integer.Type.wordToInteger w1)
                             GHC.Natural.NatJ# dt2
                             -> GHC.Integer.Type.integerToInt (GHC.Integer.Type.Jp# dt2) }
                        1#
                        -> case Pde.isDerivableIvar1_go
                                  (Pde.isDerivableIvar1_go Pde.isDerivableIvar1_z l)
                                  r of wild1 {
                             GHC.Natural.NatS# w1
                             -> GHC.Integer.Type.integerToInt
                                  (GHC.Integer.Type.wordToInteger w1)
                             GHC.Natural.NatJ# dt2
                             -> GHC.Integer.Type.integerToInt
                                  (GHC.Integer.Type.Jp# dt2) } } }) -}
9961617838c3a9c08d2c40c34f930761
  $wisDerivableIvar1 ::
    Pde.MultiIndex -> Data.IntMap.Internal.IntMap a -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Pde.MultiIndex)
                   (ww :: Data.IntMap.Internal.IntMap a) ->
                 case Pde.$wdiffOrder w of ww1 {
                   DEFAULT -> Pde.isDerivableIvar2
                   1#
                   -> case GHC.List.$w!!
                             @ Data.IntSet.Internal.Key
                             (Data.IntMap.Internal.keys
                                @ GHC.Natural.Natural
                                w `cast` (Pde.N:MultiIndex[0]))
                             0# of ww2 { GHC.Types.I# ww3 ->
                      Data.IntMap.Internal.$wmember @ a ww3 ww } }) -}
6c17834232f5168059883c3016ee9ded
  $wmkAllMultInds :: GHC.Prim.Int# -> [Pde.MultiIndex]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.># 1# ww of lwild {
                   DEFAULT
                   -> letrec {
                        go1 :: GHC.Prim.Int# -> [Pde.MultiIndex]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ Pde.MultiIndex
                            (Pde.$wnumber2MultInd x)
                            (case GHC.Prim.==# x ww of lwild1 {
                               DEFAULT -> go1 (GHC.Prim.+# x 1#)
                               1# -> GHC.Types.[] @ Pde.MultiIndex })
                      } in
                      go1 1#
                   1# -> GHC.Types.[] @ Pde.MultiIndex }) -}
cbbf5b116508a8fa08d2089cdeaec272
  $wmultInd2MatrixNr ::
    Pde.MultiIndex
    -> GHC.Types.Int
    -> Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> GHC.Prim.Int#
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Pde.MultiIndex)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int) ->
                 case Pde.$wdiffOrder w of ww {
                   DEFAULT -> case Pde.print2Maple3 ret_ty GHC.Prim.Int# of {}
                   0# -> 1#
                   1#
                   -> case GHC.List.$w!!
                             @ GHC.Types.Int
                             (Pde.multInd2Number w)
                             0# of wild1 { GHC.Types.I# y ->
                      GHC.Prim.+# 1# y }
                   2#
                   -> case w1 of wild1 { GHC.Types.I# y ->
                      case Pde.$sfind1
                             @ GHC.Types.Int
                             (Pde.multInd2Number w)
                             w2 of wild2 { GHC.Types.I# y1 ->
                      GHC.Prim.+# (GHC.Prim.+# 1# y) y1 } } }) -}
3d094be048faae58815e6981ed52bdf9
  $wnumber2MultInd :: GHC.Prim.Int# -> Pde.MultiIndex
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> case 1 of wild {
                        GHC.Integer.Type.S# i#
                        -> case GHC.Prim.>=# i# 0# of lwild {
                             DEFAULT
                             -> case GHC.Natural.underflowError ret_ty Pde.MultiIndex of {}
                             1#
                             -> (Data.IntMap.Internal.Tip
                                   @ GHC.Natural.Natural
                                   ds
                                   (GHC.Natural.NatS# (GHC.Prim.int2Word# i#)))
                                  `cast`
                                (Sym (Pde.N:MultiIndex[0])) }
                        GHC.Integer.Type.Jp# dt
                        -> case GHC.Prim.uncheckedIShiftRL#
                                  (GHC.Prim.sizeofByteArray# dt)
                                  3# of wild1 {
                             DEFAULT
                             -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                                  DEFAULT
                                  -> (Data.IntMap.Internal.Tip
                                        @ GHC.Natural.Natural
                                        ds
                                        (GHC.Natural.NatJ# dt))
                                       `cast`
                                     (Sym (Pde.N:MultiIndex[0]))
                                  0#
                                  -> case GHC.Natural.underflowError ret_ty Pde.MultiIndex of {} }
                             1#
                             -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                                (Data.IntMap.Internal.Tip
                                   @ GHC.Natural.Natural
                                   ds
                                   (GHC.Natural.NatS# wild2))
                                  `cast`
                                (Sym (Pde.N:MultiIndex[0])) } }
                        GHC.Integer.Type.Jn# ipv
                        -> case GHC.Natural.underflowError ret_ty Pde.MultiIndex of {} }
                   0#
                   -> (Data.IntMap.Internal.Nil @ GHC.Natural.Natural)
                        `cast`
                      (Sym (Pde.N:MultiIndex[0])) }) -}
6d521587f0d2f646d10998ec40b6bf4c
  $wpoly_go13 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
    -> [((GHC.Types.Int, Pde.MultiIndex), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
b7ad0ad0a9657e3d735d9c0ef662dddb
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map [GHC.Types.Int] a
    -> [([GHC.Types.Int], a)]
    -> Data.Map.Internal.Map [GHC.Types.Int] a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
06d9e7aa445b864bb544999d6507ff74
  $wprolongPdeIvar ::
    Pde.MultiIndex
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Pde.MultiIndex)
                   (w1 :: Pde.Pde (Ivar.Ivar a)) ->
                 let {
                   lvl51 :: GHC.Types.Int = Pde.multInd2Number1 w
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, Pde.MultiIndex), Ivar.Ivar a)]
                           -> Data.Map.Internal.Map
                                (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
                           -> [((GHC.Types.Int, Pde.MultiIndex), Ivar.Ivar a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, Pde.MultiIndex), Ivar.Ivar a)])
                       (ds :: Data.Map.Internal.Map
                                (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> case kx of wild1 { (,) x1 y ->
                          go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, Pde.MultiIndex), Ivar.Ivar a)
                               ((case lvl51 of wild2 { GHC.Types.I# y1 ->
                                 case x1 of wild3 { GHC.Types.I# y2 ->
                                 GHC.Types.I# (GHC.Prim.+# (GHC.Prim.*# 136# y1) y2) } },
                                 y),
                                x)
                               (go13 z' r))
                            l }
                       Data.Map.Internal.Tip -> z' }
                 } in
                 let {
                   lvl52 :: Data.IntSet.Internal.Key
                   = GHC.List.$w!!
                       @ Data.IntSet.Internal.Key
                       (Data.IntMap.Internal.keys
                          @ GHC.Natural.Natural
                          w `cast` (Pde.N:MultiIndex[0]))
                       0#
                 } in
                 letrec {
                   go8 :: Data.Map.Internal.Map
                            (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
                          -> Data.Map.Internal.Map
                               (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: Data.Map.Internal.Map
                                (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)) ->
                     case ds of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> case x of wild1 { Ivar.Ivar s map2 ->
                          case go8 l of dt1 { DEFAULT ->
                          case go8 r of dt2 { DEFAULT ->
                          Data.Map.Internal.Bin
                            @ (GHC.Types.Int, Pde.MultiIndex)
                            @ (Ivar.Ivar a)
                            dt
                            kx
                            (Ivar.Ivar
                               @ a
                               (case lvl52 of ww { GHC.Types.I# ww1 ->
                                Data.IntMap.Internal.$w! @ a map2 ww1 })
                               (Data.IntMap.Internal.Nil @ a))
                            dt1
                            dt2 } } }
                       Data.Map.Internal.Tip
                       -> Data.Map.Internal.Tip
                            @ (GHC.Types.Int, Pde.MultiIndex)
                            @ (Ivar.Ivar a) }
                 } in
                 Pde.$sfromList2
                   @ (Ivar.Ivar a)
                   (go13
                      (GHC.Types.[] @ ((GHC.Types.Int, Pde.MultiIndex), Ivar.Ivar a))
                      (go8
                         (Data.Map.Internal.filterWithKey
                            @ (GHC.Types.Int, Pde.MultiIndex)
                            @ (Ivar.Ivar a)
                            (\ (ds :: (GHC.Types.Int, Pde.MultiIndex))
                               (x :: Ivar.Ivar a)[OneShot] ->
                             Pde.isDerivableIvar1 @ a w x)
                            w1 `cast` (Pde.N:Pde[0] <Ivar.Ivar a>_N))))) -}
73f41353cadeca57ad18ef49184da154
  $wtriangleMap ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.># 1# ww of lwild {
                   DEFAULT
                   -> letrec {
                        go1 :: GHC.Prim.Int#
                               -> [GHC.Types.Int] -> [([GHC.Types.Int], GHC.Types.Int)]
                          {- Arity: 2, Strictness: <S,U><L,1*U> -}
                        = \ (x :: GHC.Prim.Int#) (eta :: [GHC.Types.Int]) ->
                          case GHC.Prim.># x ww of lwild1 {
                            DEFAULT
                            -> let {
                                 wild :: GHC.Types.Int = GHC.Types.I# x
                               } in
                               letrec {
                                 go2 :: GHC.Prim.Int#
                                        -> [GHC.Types.Int] -> [([GHC.Types.Int], GHC.Types.Int)]
                                   {- Arity: 2, Strictness: <L,U><S,1*U> -}
                                 = \ (x1 :: GHC.Prim.Int#) (eta1 :: [GHC.Types.Int]) ->
                                   case eta1 of wild1 {
                                     [] -> GHC.Types.[] @ ([GHC.Types.Int], GHC.Types.Int)
                                     : y ys
                                     -> GHC.Types.:
                                          @ ([GHC.Types.Int], GHC.Types.Int)
                                          (GHC.Types.:
                                             @ GHC.Types.Int
                                             wild
                                             (GHC.Types.:
                                                @ GHC.Types.Int
                                                (GHC.Types.I# x1)
                                                (GHC.Types.[] @ GHC.Types.Int)),
                                           y)
                                          (case GHC.Prim.==# x1 ww of lwild2 {
                                             DEFAULT -> go2 (GHC.Prim.+# x1 1#) ys
                                             1#
                                             -> case GHC.Prim.==# x ww of lwild3 {
                                                  DEFAULT -> go1 (GHC.Prim.+# x 1#) ys
                                                  1#
                                                  -> GHC.Types.[]
                                                       @ ([GHC.Types.Int], GHC.Types.Int) } }) }
                               } in
                               go2 x eta
                            1#
                            -> case GHC.Prim.==# x ww of lwild2 {
                                 DEFAULT -> go1 (GHC.Prim.+# x 1#) eta
                                 1# -> GHC.Types.[] @ ([GHC.Types.Int], GHC.Types.Int) } }
                      } in
                      Pde.$sfromList @ GHC.Types.Int (go1 1# Pde.triangleMap2)
                   1# -> Pde.triangleMap1 }) -}
6f598f8bafc2144bc3f64abb7e3051bc
  newtype MultiIndex
    = MultiIndex (Data.IntMap.Internal.IntMap GHC.Natural.Natural)
a8451ea4489922dbe82fe1615b48cdea
  newtype Pde a
    = Pde (Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a)
66ae0e0d8b1e7c1459d63efae71a947b
  addMultiInds :: Pde.MultiIndex -> Pde.MultiIndex -> Pde.MultiIndex
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Pde.addMultiInds1
                  `cast`
                (<Pde.MultiIndex>_R
                 ->_R <Pde.MultiIndex>_R
                 ->_R Sym (Pde.N:MultiIndex[0])) -}
3c4de687e198b94efed4db42df92cfc8
  addMultiInds1 ::
    Pde.MultiIndex
    -> Pde.MultiIndex
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Pde.MultiIndex) (ds1 :: Pde.MultiIndex) ->
                 Data.IntMap.Strict.unionWithKey
                   @ GHC.Natural.Natural
                   Pde.addMultiInds2
                   ds `cast` (Pde.N:MultiIndex[0])
                   ds1 `cast` (Pde.N:MultiIndex[0])) -}
66ff0b2946ed3abdbcff4035e49b8897
  addMultiInds2 ::
    Data.IntSet.Internal.Key
    -> GHC.Natural.Natural
    -> GHC.Natural.Natural
    -> GHC.Natural.Natural
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Data.IntSet.Internal.Key)
                   (x :: GHC.Natural.Natural)[OneShot]
                   (y :: GHC.Natural.Natural)[OneShot] ->
                 GHC.Natural.plusNatural x y) -}
a3131fb0e902bb84dba4af01a668b5fc
  combinePdes :: Pde.Pde a -> Pde.Pde a -> Pde.Pde a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Pde.$sunion
                  `cast`
                (forall (a :: <*>_N).
                 Sym (Pde.N:Pde[0]) <a>_N
                 ->_R Sym (Pde.N:Pde[0]) <a>_N
                 ->_R Sym (Pde.N:Pde[0]) <a>_N) -}
5c00a8a5d7a4ec75617e1754a4a56684
  deriveIvar1 ::
    GHC.Num.Num a => Pde.MultiIndex -> Ivar.Ivar a -> Ivar.Ivar a
  {- Arity: 3, Strictness: <L,A><L,1*U><S,1*U(A,1*U)>m, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Pde.MultiIndex)
                   (w2 :: Ivar.Ivar a) ->
                 case w2 of ww { Ivar.Ivar ww1 ww2 ->
                 Ivar.Ivar
                   @ a
                   (case GHC.List.$w!!
                           @ Data.IntSet.Internal.Key
                           (Data.IntMap.Internal.keys
                              @ GHC.Natural.Natural
                              w1 `cast` (Pde.N:MultiIndex[0]))
                           0# of ww3 { GHC.Types.I# ww4 ->
                    Data.IntMap.Internal.$w! @ a ww2 ww4 })
                   (Data.IntMap.Internal.Nil @ a) }) -}
f3974d1091c7c239243d972cfe3e9e0f
  evalPdeRand ::
    GHC.Types.Int
    -> Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Data.IntMap.Internal.IntMap GHC.Types.Int
    -> Pde.Pde (Ivar.Ivar GHC.Real.Rational)
    -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U(U)><L,U><L,U><L,1*U> -}
3ca3849251b72e4e79342bacd3e2b243
  isDerivableIvar1 :: Pde.MultiIndex -> Ivar.Ivar a -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,U><S(LS),1*U(A,1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: Pde.MultiIndex) (w1 :: Ivar.Ivar a) ->
                 case w1 of ww { Ivar.Ivar ww1 ww2 ->
                 Pde.$wisDerivableIvar1 @ a w ww2 }) -}
6558d4c4082e4971379dee6a14afc43c
  isDerivableIvar1_go ::
    GHC.Natural.Natural
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> GHC.Natural.Natural
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U> -}
f66aac8cd4141827a1a1a162227c3c43
  isDerivableIvar1_z :: GHC.Natural.Natural
  {- Unfolding: (case Pde.isDerivableIvar3 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8f9c1101e593bc5c185212115363c9dc
  isDerivableIvar2 :: GHC.Types.Bool
  {- Strictness: x -}
9b914b682cb0833ee8a3d0c7b6735b6f
  isDerivableIvar3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
3e531cb074fd39791bcea39b2595cd89
  mkAllMultInds :: GHC.Types.Int -> [Pde.MultiIndex]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Pde.$wmkAllMultInds ww1 }) -}
3010bf5a6e20f8633ed9503df0feeecb
  mkPdefromTens ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a -> Pde.Pde a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Pde.mkPdefromTens1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a>_R
                 ->_R Sym (Pde.N:Pde[0]) <a>_N) -}
0c5faf620ad46aa40ad5ba4d340fa91c
  mkPdefromTens1 ::
    Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (map1 :: Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a) ->
                 Pde.$sfromList2
                   @ a
                   (Pde.mkPdefromTens2
                      @ a
                      (GHC.Types.[] @ ((GHC.Types.Int, Pde.MultiIndex), a))
                      map1)) -}
a6d925cbc2a4896f7146ee9538b9cd67
  mkPdefromTens2 ::
    [((GHC.Types.Int, Pde.MultiIndex), a)]
    -> Data.Map.Internal.Map (GHC.Types.Int, GHC.Types.Int) a
    -> [((GHC.Types.Int, Pde.MultiIndex), a)]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
488701f83bbda85322ef7de9b8bcd25f
  multInd2Number :: Pde.MultiIndex -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Pde.MultiIndex) ->
                 case ds `cast` (Pde.N:MultiIndex[0]) of wild {
                   DEFAULT
                   -> Pde.multInd2Number1_go
                        (GHC.Types.[] @ Data.IntSet.Internal.Key)
                        wild
                   Data.IntMap.Internal.Bin dt dt1 l r
                   -> case GHC.Prim.<# dt1 0# of lwild {
                        DEFAULT
                        -> Pde.multInd2Number1_go
                             (Pde.multInd2Number1_go
                                (GHC.Types.[] @ Data.IntSet.Internal.Key)
                                r)
                             l
                        1#
                        -> Pde.multInd2Number1_go
                             (Pde.multInd2Number1_go
                                (GHC.Types.[] @ Data.IntSet.Internal.Key)
                                l)
                             r } }) -}
64d7008d72a85d77a50dc9185cd0643f
  multInd2Number1 :: Pde.MultiIndex -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (mult :: Pde.MultiIndex) ->
                 case GHC.List.$wlenAcc
                        @ GHC.Types.Int
                        (Pde.multInd2Number mult)
                        0# of ww2 {
                   DEFAULT -> Pde.multInd2Number2
                   1#
                   -> GHC.List.$w!! @ GHC.Types.Int (Pde.multInd2Number mult) 0# }) -}
92659500206b7634c43302d1685353a9
  multInd2Number1_go ::
    [Data.IntSet.Internal.Key]
    -> Data.IntMap.Internal.IntMap GHC.Natural.Natural
    -> [Data.IntSet.Internal.Key]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
76e18aacc6e55d8e72cb016619ca2a7c
  multInd2Number2 :: GHC.Types.Int
  {- Strictness: x -}
eef366e2de7615489f1c12e852f31815
  number2MultInd :: GHC.Types.Int -> Pde.MultiIndex
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Pde.$wnumber2MultInd ww1 }) -}
aa3723f51340cd80758010ba28c248af
  print2Maple ::
    GHC.Types.Int
    -> Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
    -> Pde.Pde (Ivar.Ivar GHC.Real.Rational)
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(U)><L,U><L,1*U>,
     Unfolding: (\ (nopsIvar :: GHC.Types.Int)
                   (triangle :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int)
                   (ds :: Pde.Pde (Ivar.Ivar GHC.Real.Rational)) ->
                 GHC.CString.unpackAppendCString#
                   Pde.print2Maple9
                   (letrec {
                      go13 :: [GHC.Types.Char]
                              -> Data.Map.Internal.Map
                                   (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar GHC.Real.Rational)
                              -> [GHC.Types.Char]
                        {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                      = \ (z' :: [GHC.Types.Char])
                          (ds1 :: Data.Map.Internal.Map
                                    (GHC.Types.Int, Pde.MultiIndex)
                                    (Ivar.Ivar GHC.Real.Rational)) ->
                        case ds1 of wild {
                          Data.Map.Internal.Bin dt kx x l r
                          -> case kx of wild1 { (,) x1 y ->
                             go13
                               (GHC.Base.++_$s++
                                  @ GHC.Types.Char
                                  (go13 z' r)
                                  Pde.print2Maple8
                                  (GHC.Base.++_$s++
                                     @ GHC.Types.Char
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        Pde.print2Maple7
                                        (case x of ww { Ivar.Ivar ww1 ww2 ->
                                         case ww1 of ww3 { GHC.Real.:% ww4 ww5 ->
                                         case Ivar.$wshowIvarRational
                                                ww4
                                                ww5
                                                ww2 of ww6 { (#,#) ww7 ww8 ->
                                         GHC.Base.++_$s++
                                           @ GHC.Types.Char
                                           Pde.print2Maple5
                                           ww7
                                           ww8 } } }))
                                     GHC.Show.$fShow(,)4
                                     (case x1 of ww2 { GHC.Types.I# ww3 ->
                                      case GHC.Show.$wshowSignedInt
                                             0#
                                             ww3
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.showList__1
                                                (GHC.Show.$fShow(,)_$sgo1
                                                   Pde.print2Maple4
                                                   (\ (w2 :: GHC.Base.String)[OneShot] ->
                                                    case Pde.$wmultInd2MatrixNr
                                                           y
                                                           nopsIvar
                                                           triangle of ww { DEFAULT ->
                                                    case GHC.Show.$wshowSignedInt
                                                           0#
                                                           ww
                                                           w2 of ww4 { (#,#) ww5 ww6 ->
                                                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                                                   (GHC.Types.[]
                                                      @ GHC.Show.ShowS))) of ww4 { (#,#) ww5 ww6 ->
                                      GHC.Types.: @ GHC.Types.Char ww5 ww6 } })))
                               l }
                          Data.Map.Internal.Tip -> z' }
                    } in
                    case go13
                           (GHC.Types.[] @ GHC.Types.Char)
                           ds `cast` (Pde.N:Pde[0] <Ivar.Ivar GHC.Real.Rational>_N) of wild {
                      [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                      : ds1 xs -> GHC.Base.++ @ GHC.Types.Char xs Pde.print2Maple1 })) -}
81603c8b5e2581ff577f67c1e9310387
  print2Maple1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.print2Maple2) -}
f7a56067f6093fa73afce52148094c40
  print2Maple2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
ebd5d3430153324a8afb31082dd697f0
  print2Maple3 :: GHC.Types.Int
  {- Strictness: x -}
79594a4a082952642433912c8312e745
  print2Maple4 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
89d268ba2f15ba44bef7d4c764720b36
  print2Maple5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.print2Maple6) -}
14caa54861fbd7ce1863f8693da984af
  print2Maple6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\n"#) -}
8d803033e8a6a8242919558365b144ec
  print2Maple7 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '='#) -}
dc6abccb456a0a8dde86b72c677fc3d4
  print2Maple8 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ','#) -}
2695bb83ff396ce00a198bf5c4f57125
  print2Maple9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
2c6e9a9f849fe249f636eeeaeb5bba80
  print2MaplePde ::
    Pde.Pde (Ivar.Ivar GHC.Real.Rational) -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (ds :: Pde.Pde (Ivar.Ivar GHC.Real.Rational)) ->
                 GHC.CString.unpackAppendCString#
                   Pde.print2MaplePde6
                   (case Pde.print2MaplePde_go1
                           (Data.IntMap.Strict.fromListWithKey
                              @ [GHC.Types.Char]
                              Pde.print2MaplePde5
                              (Pde.print2MaplePde_go13
                                 (GHC.Types.[] @ (GHC.Types.Int, [GHC.Types.Char]))
                                 ds
                                   `cast`
                                 (Pde.N:Pde[0] <Ivar.Ivar GHC.Real.Rational>_N))) of wild {
                      DEFAULT
                      -> case Pde.print2MaplePde_go Pde.print2MaplePde3 wild of wild1 {
                           [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                           : ds1 xs -> GHC.Base.++ @ GHC.Types.Char xs Pde.print2MaplePde1 }
                      Data.IntMap.Internal.Bin dt dt1 l r
                      -> case GHC.Prim.<# dt1 0# of lwild {
                           DEFAULT
                           -> case Pde.print2MaplePde_go
                                     (Pde.print2MaplePde_go Pde.print2MaplePde3 r)
                                     l of wild1 {
                                [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                                : ds1 xs -> GHC.Base.++ @ GHC.Types.Char xs Pde.print2MaplePde1 }
                           1#
                           -> case Pde.print2MaplePde_go
                                     (Pde.print2MaplePde_go Pde.print2MaplePde3 l)
                                     r of wild1 {
                                [] -> case GHC.List.scanl2 ret_ty [GHC.Types.Char] of {}
                                : ds1 xs
                                -> GHC.Base.++ @ GHC.Types.Char xs Pde.print2MaplePde1 } } })) -}
ee26b1cf59e8d841f0e9e3c00285e33c
  print2MaplePde1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.print2MaplePde2) -}
e0bbf4533a9e8974aa16c20febd19117
  print2MaplePde2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("]"#) -}
5afda9d3518953257b3a7a2f117d1f2d
  print2MaplePde3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Pde.print2MaplePde4) -}
7cad6db8332bf7bad42ce7132c9de9b1
  print2MaplePde4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
ec5a44d70bd8730aeee2015b4f4695df
  print2MaplePde5 ::
    Data.IntSet.Internal.Key
    -> [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Data.IntSet.Internal.Key)
                   (x :: [GHC.Types.Char])[OneShot]
                   (y :: [GHC.Types.Char])[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n x)
                   (GHC.CString.unpackAppendCString# "+"# y)) -}
fe14fefe733db932b9aa5507617d34e9
  print2MaplePde6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("["#) -}
16375708cfd47b5d5c8286079dc6f4ea
  print2MaplePde_go ::
    [GHC.Types.Char]
    -> Data.IntMap.Internal.IntMap [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U> -}
435c77e42af539c182cc591986059660
  print2MaplePde_go1 ::
    Data.IntMap.Internal.IntMap [GHC.Types.Char]
    -> Data.IntMap.Internal.IntMap [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8b226ecf3bd072489a22c6e09054802c
  print2MaplePde_go13 ::
    [(GHC.Types.Int, [GHC.Types.Char])]
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar GHC.Real.Rational)
    -> [(GHC.Types.Int, [GHC.Types.Char])]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
1e5552a38e4175809118e04085578b7a
  printConstPde :: GHC.Show.Show a => Pde.Pde a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><L,1*U> -}
9e592ca789e71698adecaab8bef6992d
  prolongPde ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    Pde.MultiIndex -> Pde.Pde (Ivar.Ivar a) -> Pde.Pde (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongPde1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <GHC.Classes.Eq a>_R
                 ->_R <Pde.MultiIndex>_R
                 ->_R <Pde.Pde (Ivar.Ivar a)>_R
                 ->_R Sym (Pde.N:Pde[0]) <Ivar.Ivar a>_N) -}
02622eff1068e69510e19ffba3c7e619
  prolongPde1 ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    Pde.MultiIndex
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><L,U><S,U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a)
                   (eta :: Pde.MultiIndex)
                   (eta1 :: Pde.Pde (Ivar.Ivar a)) ->
                 Pde.$sunionWith
                   @ (Ivar.Ivar a)
                   (Ivar.addIvar @ a $dNum $dEq)
                   (Pde.prolongPde2 @ (Ivar.Ivar a) eta eta1)
                   (Pde.$wprolongPdeIvar @ a eta eta1)) -}
f85f99a075e2f7e7763ff86f7e232fae
  prolongPde2 ::
    Pde.MultiIndex
    -> Pde.Pde a
    -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ @ a (mult :: Pde.MultiIndex) (ds :: Pde.Pde a) ->
                 let {
                   lvl51 :: GHC.Types.Int = Pde.multInd2Number1 mult
                 } in
                 letrec {
                   go13 :: [((GHC.Types.Int, Pde.MultiIndex), a)]
                           -> Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a
                           -> [((GHC.Types.Int, Pde.MultiIndex), a)]
                     {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
                   = \ (z' :: [((GHC.Types.Int, Pde.MultiIndex), a)])
                       (ds1 :: Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) a) ->
                     case ds1 of wild {
                       Data.Map.Internal.Bin dt kx x l r
                       -> case kx of wild1 { (,) x1 y ->
                          go13
                            (GHC.Types.:
                               @ ((GHC.Types.Int, Pde.MultiIndex), a)
                               ((case lvl51 of wild2 { GHC.Types.I# y1 ->
                                 case x1 of wild3 { GHC.Types.I# y2 ->
                                 GHC.Types.I# (GHC.Prim.+# (GHC.Prim.*# 136# y1) y2) } },
                                 (Pde.addMultiInds1 mult y) `cast` (Sym (Pde.N:MultiIndex[0]))),
                                x)
                               (go13 z' r))
                            l }
                       Data.Map.Internal.Tip -> z' }
                 } in
                 Pde.$sfromList2
                   @ a
                   (go13
                      (GHC.Types.[] @ ((GHC.Types.Int, Pde.MultiIndex), a))
                      ds `cast` (Pde.N:Pde[0] <a>_N))) -}
43bab96c96476c7e8ba02fd20ac8d6b3
  prolongPdeAll ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    [Pde.MultiIndex] -> Pde.Pde (Ivar.Ivar a) -> Pde.Pde (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongPdeAll1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <GHC.Classes.Eq a>_R
                 ->_R <[Pde.MultiIndex]>_R
                 ->_R <Pde.Pde (Ivar.Ivar a)>_R
                 ->_R Sym (Pde.N:Pde[0]) <Ivar.Ivar a>_N) -}
cf6d683723394853cfd17f2c4c23bf7c
  prolongPdeAll1 ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    [Pde.MultiIndex]
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><S,1*U><L,U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a)
                   (mults :: [Pde.MultiIndex])
                   (pde :: Pde.Pde (Ivar.Ivar a)) ->
                 Pde.prolongPdeAll2
                   @ a
                   (Data.Map.Internal.Tip
                      @ (GHC.Types.Int, Pde.MultiIndex)
                      @ (Ivar.Ivar a))
                   (GHC.Base.map
                      @ Pde.MultiIndex
                      @ (Data.Map.Internal.Map
                           (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a))
                      (\ (x :: Pde.MultiIndex) -> Pde.prolongPde1 @ a $dNum $dEq x pde)
                      mults)) -}
ed20075dc90052f1bbcf315137dc371c
  prolongPdeAll2 ::
    Data.Map.Internal.Map (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
    -> [Data.Map.Internal.Map
          (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)]
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
e19caaf3aff30c882d9ba374e4833ad3
  prolongPdeAllBlock1 ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    [Pde.MultiIndex] -> Pde.Pde (Ivar.Ivar a) -> Pde.Pde (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongPdeAllBlock2
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <GHC.Classes.Eq a>_R
                 ->_R <[Pde.MultiIndex]>_R
                 ->_R <Pde.Pde (Ivar.Ivar a)>_R
                 ->_R Sym (Pde.N:Pde[0]) <Ivar.Ivar a>_N) -}
264c908524288bc900cf6c829c2e9900
  prolongPdeAllBlock2 ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    [Pde.MultiIndex]
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,U(A,C(C1(U)))><S,1*U><L,U> -}
0863a33dce16ff4f47e07a23cf3c5567
  prolongPdeConst :: Pde.MultiIndex -> Pde.Pde a -> Pde.Pde a
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongPde2
                  `cast`
                (forall (a :: <*>_N).
                 <Pde.MultiIndex>_R
                 ->_R <Pde.Pde a>_R
                 ->_R Sym (Pde.N:Pde[0]) <a>_N) -}
772ed1bf5dd700d0907299b8bd6b3f21
  prolongPdeIvar ::
    GHC.Num.Num a =>
    Pde.MultiIndex -> Pde.Pde (Ivar.Ivar a) -> Pde.Pde (Ivar.Ivar a)
  {- Arity: 3, Strictness: <L,A><L,U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongPdeIvar1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <Pde.MultiIndex>_R
                 ->_R <Pde.Pde (Ivar.Ivar a)>_R
                 ->_R Sym (Pde.N:Pde[0]) <Ivar.Ivar a>_N) -}
a427ac11de873e3ac3f96d08cb94e2eb
  prolongPdeIvar1 ::
    GHC.Num.Num a =>
    Pde.MultiIndex
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 3, Strictness: <L,A><L,U><S,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Pde.MultiIndex)
                   (w2 :: Pde.Pde (Ivar.Ivar a)) ->
                 Pde.$wprolongPdeIvar @ a w1 w2) -}
f9e821a7dde83785d472353fe3e187e2
  prolongSymbolAll ::
    GHC.Num.Num a =>
    [Pde.MultiIndex] -> Pde.Pde (Ivar.Ivar a) -> Pde.Pde (Ivar.Ivar a)
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Pde.prolongSymbolAll1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Num.Num a>_R
                 ->_R <[Pde.MultiIndex]>_R
                 ->_R <Pde.Pde (Ivar.Ivar a)>_R
                 ->_R Sym (Pde.N:Pde[0]) <Ivar.Ivar a>_N) -}
f58f2b2a6ba8bee57d21dbe8b801c757
  prolongSymbolAll1 ::
    GHC.Num.Num a =>
    [Pde.MultiIndex]
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) -> Pde.prolongSymbolAll2 @ a) -}
1efb9b0cf0fb95c02bce78922072f660
  prolongSymbolAll2 ::
    [Pde.MultiIndex]
    -> Pde.Pde (Ivar.Ivar a)
    -> Data.Map.Internal.Map
         (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a)
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ @ a
                   (mults :: [Pde.MultiIndex])
                   (pde :: Pde.Pde (Ivar.Ivar a)) ->
                 Pde.prolongPdeAll2
                   @ a
                   (Data.Map.Internal.Tip
                      @ (GHC.Types.Int, Pde.MultiIndex)
                      @ (Ivar.Ivar a))
                   (GHC.Base.map
                      @ Pde.MultiIndex
                      @ (Data.Map.Internal.Map
                           (GHC.Types.Int, Pde.MultiIndex) (Ivar.Ivar a))
                      (\ (x :: Pde.MultiIndex) -> Pde.prolongPde2 @ (Ivar.Ivar a) x pde)
                      mults)) -}
5bea8461d5a5ab5c3c07217eb50efa4d
  triangleMap ::
    GHC.Types.Int
    -> Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Pde.$wtriangleMap ww1 }) -}
c5279563f5d77eff814dfc838f074c5d
  triangleMap1 :: Data.Map.Internal.Map [GHC.Types.Int] GHC.Types.Int
  {- Unfolding: (Pde.$sfromList
                   @ GHC.Types.Int
                   (GHC.Types.[] @ ([GHC.Types.Int], GHC.Types.Int))) -}
390cd4e6263600a132edbd3eccba9d78
  triangleMap2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 9223372036854775807#) -}
instance GHC.Classes.Eq [Pde.MultiIndex] = Pde.$fEqMultiIndex
instance GHC.Classes.Ord [Pde.MultiIndex] = Pde.$fOrdMultiIndex
instance GHC.Show.Show [Pde.MultiIndex] = Pde.$fShowMultiIndex
instance GHC.Show.Show [Pde.Pde] = Pde.$fShowPde
"SPEC/Pde $fEq(,) @ Int @ Natural" [orphan] forall (v1 :: GHC.Classes.Eq
                                                            GHC.Natural.Natural)
                                                   (v :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ GHC.Natural.Natural v v1
  = Pde.$fOrdMultiIndex_$s$fEq(,)
"SPEC/Pde $fEq(,)_$c/= @ Int @ Natural" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                    GHC.Natural.Natural)
                                                        ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,)_$c/= @ GHC.Types.Int
                           @ GHC.Natural.Natural
                           $dEq
                           $dEq1
  = Pde.$fOrdMultiIndex_$s$fEq(,)_$c/=
"SPEC/Pde $fOrd(,) @ Int @ Natural" [orphan] forall (v1 :: GHC.Classes.Ord
                                                             GHC.Natural.Natural)
                                                    (v :: GHC.Classes.Ord GHC.Types.Int)
  GHC.Classes.$fOrd(,) @ GHC.Types.Int @ GHC.Natural.Natural v v1
  = Pde.$fOrdMultiIndex_$s$fOrd(,)
"SPEC/Pde $fShow(,) @ Int @ MultiIndex" forall (v1 :: GHC.Show.Show
                                                        Pde.MultiIndex)
                                               (v :: GHC.Show.Show GHC.Types.Int)
  GHC.Show.$fShow(,) @ GHC.Types.Int @ Pde.MultiIndex v v1
  = Pde.$fShowPde_$s$fShow(,)
"SPEC/Pde fromList @ (Int, MultiIndex) _" forall @ a
                                                 ($dOrd :: GHC.Classes.Ord
                                                             (GHC.Types.Int, Pde.MultiIndex))
  Data.Map.Internal.fromList @ (GHC.Types.Int, Pde.MultiIndex)
                             @ a
                             $dOrd
  = Pde.$sfromList2 @ a
"SPEC/Pde fromList @ [Int] _" [orphan] forall @ a
                                              ($dOrd :: GHC.Classes.Ord [GHC.Types.Int])
  Data.Map.Strict.Internal.fromList @ [GHC.Types.Int] @ a $dOrd
  = Pde.$sfromList @ a
"SPEC/Pde union @ (Int, MultiIndex) _" forall @ a
                                              ($dOrd :: GHC.Classes.Ord
                                                          (GHC.Types.Int, Pde.MultiIndex))
  Data.Map.Internal.union @ (GHC.Types.Int, Pde.MultiIndex) @ a $dOrd
  = Pde.$sunion @ a
"SPEC/Pde unionWith @ (Int, MultiIndex) _" forall @ a
                                                  ($dOrd :: GHC.Classes.Ord
                                                              (GHC.Types.Int, Pde.MultiIndex))
  Data.Map.Strict.Internal.unionWith @ (GHC.Types.Int,
                                        Pde.MultiIndex)
                                     @ a
                                     $dOrd
  = Pde.$sunionWith @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

