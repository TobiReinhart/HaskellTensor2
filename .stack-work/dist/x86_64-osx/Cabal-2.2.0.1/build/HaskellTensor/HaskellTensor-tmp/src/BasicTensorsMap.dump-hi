
==================== FINAL INTERFACE ====================
2019-01-14 16:36:14.437604 UTC

interface main:BasicTensorsMap [hpc] 8043
  interface hash: 69c75a172afb06b538f04e3e32b0926b
  ABI hash: 75d21f2608040f93618324a3cfa3685a
  export-list hash: f11f33b579adbf52a43cc286764e25da
  orphan hash: a90424266e34e7deac7e6090127141cc
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  BasicTensorsMap.aSymI_2
  BasicTensorsMap.areaDoFList
  BasicTensorsMap.canonicalizeArea
  BasicTensorsMap.delta_19
  BasicTensorsMap.delta_20
  BasicTensorsMap.delta_3
  BasicTensorsMap.delta_9
  BasicTensorsMap.epsilon
  BasicTensorsMap.eta
  BasicTensorsMap.etaAbs
  BasicTensorsMap.flatArea
  BasicTensorsMap.flatAreaMap
  BasicTensorsMap.flatAreaST
  BasicTensorsMap.interArea
  BasicTensorsMap.interAreanoFactor
  BasicTensorsMap.interEqn1_2
  BasicTensorsMap.interEqn1_3
  BasicTensorsMap.interF_IArea
  BasicTensorsMap.interI_2
  BasicTensorsMap.interI_3
  BasicTensorsMap.interI_Area
  BasicTensorsMap.interJ_2
  BasicTensorsMap.interJ_2noFactor
  BasicTensorsMap.interJ_3
  BasicTensorsMap.interJ_Area
  BasicTensorsMap.interJ_AreanoFactor
  BasicTensorsMap.interMetric
  BasicTensorsMap.interMetricnoFactor
  BasicTensorsMap.invEta
  BasicTensorsMap.invEtaAbs
  BasicTensorsMap.isZeroArea
  BasicTensorsMap.ivar1
  BasicTensorsMap.ivar1FM
  BasicTensorsMap.ivar1M
  BasicTensorsMap.ivar2
  BasicTensorsMap.ivar2FM
  BasicTensorsMap.ivar2M
  BasicTensorsMap.ivar3
  BasicTensorsMap.ivar3FM
  BasicTensorsMap.ivar3M
  BasicTensorsMap.symI_2
  BasicTensorsMap.symI_3
  BasicTensorsMap.symI_Area
  BasicTensorsMap.triangleMap2
  BasicTensorsMap.triangleMap3
  BasicTensorsMap.triangleMapArea
module dependencies: IndexMap Ivar TensorMap
package dependencies: array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0 primitive-0.6.3.0 random-1.1 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.Proxy a80a60a2fdceabfeb4d110d23b808844
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.TypeNats 8f7c6aed0d8e1900cac5f62a9bc0fd0b
import  -/  base-4.11.1.0:Numeric.Natural da273ddb373e0510fde98e17e4aa338f
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.IntMap.Internal ef73a09d9589b16c95e337bc0715aa57
import  -/  containers-0.5.11.0:Data.IntMap.Strict 79a3c61ca2c76eb71c4304029717e288
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Map.Strict 40ac55e8c7db7b7f0f7e3d9769233909
import  -/  containers-0.5.11.0:Data.Map.Strict.Internal 372117aaabc2f1ff2039eaf324fdb5c6
import  -/  containers-0.5.11.0:Data.Sequence 21c58838329d44e2dc13db7c04e3a8d8
import  -/  containers-0.5.11.0:Data.Sequence.Internal a2eae372f67713826bf16d410fc6cd8f
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  IndexMap 438c96a9a6428851d66472fc4b3b6738
  exports: 1c4d19ee8308ed3048f95fb40de51f02
  Ind f52c1471ce6ab3f29b68f26b804e0935
  Index e477a65c7af813883b830a5c77e6006a
  Lind_19 dc8f477e71d6d64e686133f652245c19
  Lind_20 dc439f33c826f473353339adde440632
  Lind_9 a0e7e758ce0071ad24a57e529bf9d1e1
  Linds_3 7a0fbb2d14a1c709a9c58604ffdcbb13
  Uind_19 ebd042d4af1f0749d1fd5357b320c39b
  Uind_20 ede140fd1043ab263754c3bb275a2999
  Uind_9 1d3d526909c43933fc46030eb19fe9a9
  Uinds_3 92ae5f172c5b4d3da30814e702b8819b
  getValInd 081b2fd8b7d6469a5ad1e2187238dfc3
  indSign2 3d47638ef0bec81451a55dc6f7944428
  indexList 6515518848a3a5e7c7afdfe3024bddd6
  mkInd c04ecfd86160a221bd9f55e0aabba6d7
  sortInd c1b2119218b0dd2f16683ad334df554e
import  -/  Ivar 40f81219a01d4a021d2869f9c4ec8065
  exports: 847b7f62b7be31da91814bf314ffd8e5
  Ivar d9681c195fa242e7d5d49d12895d614f
  number2Ivar 48bcb8c465b2f3335be5f6e5ae3a3885
import  -/  TensorMap e69ccfd02edff4d19e19611983bd6d1b
  exports: abac9992f55ca947390bc6d9a412aeee
  Tensor b7eca17c04d6de813b76794672e81a68
  getVal 77e0cbde3b06ebf74d5331f180d450f3
  mkTensorfromF 154c58c1d749e77395d9604522bb7a36
  mkTensorfromFZeros a5879670e60917e28c2bfed0f27c9d00
  tensorAdd d9673ac71d2543b2c438f6470881b979
  tensorContractWith_3 34828a7c11540fc7598bb46f085aeff7
  tensorProductWith d5036b175c4bea21c778ac15e8cb4d9b
  tensorSMult 727232bc0943ea510e921165f2b2f42f
  tensorSub 37a6a7e91912d65f004757b1bade89a6
  tensorTranspose e610ac078d8c9f84cf723b0fa60d4e05
44f1d576092ca9a0d02221b18977e276
  $sfind9 ::
    IndexMap.Index 0 1 0 0 0 0 0 0
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a -> a
  {- Arity: 2,
     Strictness: <S(S(S)S(S)S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: IndexMap.Index 0 1 0 0 0 0 0 0)
                   (w1 :: Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww1 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 BasicTensorsMap.$wpoly_go4
                   @ a
                   ww10
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w1 } }) -}
649aec8686de581c60df506e9fe07382
  $sfromList ::
    [(IndexMap.Index 0 1 0 0 0 0 0 0, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
bf75d35b8da2069c7875b8b7c799cf20
  $sfromList1 ::
    [(IndexMap.Index 0 1 0 0 0 0 0 1, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
bfb642cda401bd2f59fab43ad03ab3e8
  $sfromList2 ::
    [(IndexMap.Index 0 1 0 0 0 1 0 0, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 1 0 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
afe5a53a42709f72ff3a228b633cf490
  $sfromList3 ::
    [(IndexMap.Index 0 0 0 0 0 1 0 0, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
4dd09634a7da8802ddf45696e2a1044a
  $sfromList4 ::
    [(IndexMap.Index 0 0 0 0 0 1 0 1, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
a67a85cfc89f8aa32d79ea94cc56a7a7
  $sfromList5 ::
    [(IndexMap.Index 0 0 0 0 0 2 0 0, a)]
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 2 0 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
fd626a3f2d28a840ad403cc312fe2dde
  $smember1 ::
    IndexMap.Index 0 1 0 0 0 0 0 0
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: IndexMap.Index 0 1 0 0 0 0 0 0)
                   (w1 :: Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 BasicTensorsMap.$wpoly_go7
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w1 }) -}
6366c62a94a947770e9a87ab52c8ecd6
  $smkTensorfromFZeros1 :: GHC.Natural.Natural
  {- Unfolding: (case BasicTensorsMap.$smkTensorfromFZeros2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt2
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt2)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt2 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt2
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt2 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
470a97ff0b71e80c3f3ebc3dcf5ef097
  $smkTensorfromFZeros2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
d8297258f85adaf5526a696f0cc45f86
  $smkTensorfromFZeros3 :: GHC.Natural.Natural
  {- Unfolding: (case BasicTensorsMap.$smkTensorfromFZeros4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt2
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt2)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt2 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt2
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt2 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
b8219fbea9fd4d2579c4e1aa8641a1ac
  $smkTensorfromFZeros4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
412224bee84825b54c103abb8c743248
  $smkTensorfromFZeros6 :: GHC.Natural.Natural
  {- Unfolding: (case BasicTensorsMap.$smkTensorfromFZeros7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt2
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt2)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt2 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt2
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt2 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
f54284c68955a77e3f7a71ca0a1b344f
  $smkTensorfromFZeros7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
b87a9aed5fdef8d23546f8183e866635
  $stensorContractWith_1 :: GHC.Natural.Natural
  {- Unfolding: (case BasicTensorsMap.$stensorContractWith_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt2
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt2)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt2 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt2
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt2 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
d4880402254c19556a3a89cb7d7e9a69
  $stensorContractWith_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
4902419b046764c05306a63adf4e6ad4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   BasicTensorsMap.$trModule3
                   BasicTensorsMap.$trModule1) -}
f60d204ec1b6dc3088a755b8aa2a73a1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS BasicTensorsMap.$trModule2) -}
4f6a20d89b9a7c914b54d999f64f1607
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BasicTensorsMap"#) -}
82085bedd0e2f8c5f6741accddd9e818
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS BasicTensorsMap.$trModule4) -}
ff9ffe273ad448e4addcdaca8860cb23
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
cca1d14573d7045f34a1f803bab20dc9
  $w$scanonicalizeArea ::
    IndexMap.Ind 4 IndexMap.Uind_3
    -> (# IndexMap.Ind 4 IndexMap.Uind_3, GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [0] -}
9b11b68de0c1594f7d68f8bd1cc2c4c4
  $w$scanonicalizeArea1 ::
    IndexMap.Ind 4 IndexMap.Lind_3
    -> (# IndexMap.Ind 4 IndexMap.Lind_3, GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,U(U)>, Inline: [0] -}
2883b3cd0d800e6e0526e6b652ec6cde
  $w$sgo1 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 1
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 0
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 1
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 1) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 1) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
aec4f0fc363a5d293ac3f6af3f9bda54
  $w$sgo2 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 1
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 1
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 1 0 0) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 1 0 0) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
504c9569fba6f305694a3e09e0a4164e
  $w$sgo3 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 0
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 1
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 0) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 0) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
e939cc62851d2894cae6731e93170a84
  $w$sgo4 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 0
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 1
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 1
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 1) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 1 0 1) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
be0621ac2d3072f38fb5218f0c4577ab
  $w$sgo5 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 0
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 2
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 2 0 0) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 0 0 0 0 2 0 0) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
16d0163858fcdf0eb932a2a59442faee
  $w$sgo8 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 1
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 0
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a1
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a1
  {- Arity: 10,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,U(U)><S,1*U><S,1*U>,
     Inline: [0] -}
c47fa17e9a1db1726635eb3ea471f55f
  $w$sisZeroArea ::
    Data.IntMap.Internal.IntMap IndexMap.Lind_3 -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.IntMap.Internal.IntMap
                            IndexMap.Lind_3) ->
                 let {
                   eta3 :: IndexMap.Ind 4 IndexMap.Lind_3
                   = IndexMap.UnsafemkInd @ 4 @ IndexMap.Lind_3 ww
                 } in
                 {__scc {main:BasicTensorsMap.isZeroArea} True True} {__scc {main:IndexMap.==} True False} case {__scc {main:BasicTensorsMap.isZeroArea.a} True True} {__scc {main:IndexMap.getValInd} True False} eta3 of wild { IndexMap.UnsafemkInd s ->
                                                                                                           case {__scc {main:BasicTensorsMap.isZeroArea.a} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                      @ IndexMap.Lind_3
                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                      s of wild1 {
                                                                                                             GHC.Base.Nothing
                                                                                                             -> case Data.Maybe.fromJust1
                                                                                                                ret_ty GHC.Types.Bool
                                                                                                                of {}
                                                                                                             GHC.Base.Just x
                                                                                                             -> let {
                                                                                                                  $j :: GHC.Types.Bool
                                                                                                                    <join 0>
                                                                                                                  = let {
                                                                                                                      ds :: IndexMap.Lind_3
                                                                                                                      = {__scc {main:BasicTensorsMap.isZeroArea.c} True True} {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                                 2#
                                                                                                                                                                                                                                 s of wild2 {
                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                            -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                            GHC.Base.Just x1
                                                                                                                                                                                                                            -> x1 }
                                                                                                                    } in
                                                                                                                    let {
                                                                                                                      ds1 :: IndexMap.Lind_3
                                                                                                                      = {__scc {main:BasicTensorsMap.isZeroArea.d} True True} {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                                 3#
                                                                                                                                                                                                                                 s of wild2 {
                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                            -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                            GHC.Base.Just x1
                                                                                                                                                                                                                            -> x1 }
                                                                                                                    } in
                                                                                                                    {__scc {main:IndexMap.==} True True} case ds of wild2 {
                                                                                                                                                           IndexMap.L0_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.L0_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.L1_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.L1_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.L2_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.L2_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.L3_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.L3_3
                                                                                                                                                                -> GHC.Types.True } }
                                                                                                                } in
                                                                                                                case x of wild2 {
                                                                                                                  IndexMap.L0_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Lind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.L0_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.L1_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Lind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.L1_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.L2_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Lind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.L2_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.L3_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Lind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.L3_3
                                                                                                                            -> GHC.Types.True } } } } } }) -}
34f33a9a4b7022b3d4a0bea875aa144c
  $w$sisZeroArea1 ::
    Data.IntMap.Internal.IntMap IndexMap.Uind_3 -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.IntMap.Internal.IntMap
                            IndexMap.Uind_3) ->
                 let {
                   eta3 :: IndexMap.Ind 4 IndexMap.Uind_3
                   = IndexMap.UnsafemkInd @ 4 @ IndexMap.Uind_3 ww
                 } in
                 {__scc {main:BasicTensorsMap.isZeroArea} True True} {__scc {main:IndexMap.==} True False} case {__scc {main:BasicTensorsMap.isZeroArea.a} True True} {__scc {main:IndexMap.getValInd} True False} eta3 of wild { IndexMap.UnsafemkInd s ->
                                                                                                           case {__scc {main:BasicTensorsMap.isZeroArea.a} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                      @ IndexMap.Uind_3
                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                      s of wild1 {
                                                                                                             GHC.Base.Nothing
                                                                                                             -> case Data.Maybe.fromJust1
                                                                                                                ret_ty GHC.Types.Bool
                                                                                                                of {}
                                                                                                             GHC.Base.Just x
                                                                                                             -> let {
                                                                                                                  $j :: GHC.Types.Bool
                                                                                                                    <join 0>
                                                                                                                  = let {
                                                                                                                      ds :: IndexMap.Uind_3
                                                                                                                      = {__scc {main:BasicTensorsMap.isZeroArea.c} True True} {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                 @ IndexMap.Uind_3
                                                                                                                                                                                                                                 2#
                                                                                                                                                                                                                                 s of wild2 {
                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                            -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                 @ IndexMap.Uind_3
                                                                                                                                                                                                                            GHC.Base.Just x1
                                                                                                                                                                                                                            -> x1 }
                                                                                                                    } in
                                                                                                                    let {
                                                                                                                      ds1 :: IndexMap.Uind_3
                                                                                                                      = {__scc {main:BasicTensorsMap.isZeroArea.d} True True} {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                 @ IndexMap.Uind_3
                                                                                                                                                                                                                                 3#
                                                                                                                                                                                                                                 s of wild2 {
                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                            -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                 @ IndexMap.Uind_3
                                                                                                                                                                                                                            GHC.Base.Just x1
                                                                                                                                                                                                                            -> x1 }
                                                                                                                    } in
                                                                                                                    {__scc {main:IndexMap.==} True True} case ds of wild2 {
                                                                                                                                                           IndexMap.U0_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.U0_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.U1_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.U1_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.U2_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.U2_3
                                                                                                                                                                -> GHC.Types.True }
                                                                                                                                                           IndexMap.U3_3
                                                                                                                                                           -> case ds1 of wild3 {
                                                                                                                                                                DEFAULT
                                                                                                                                                                -> GHC.Types.False
                                                                                                                                                                IndexMap.U3_3
                                                                                                                                                                -> GHC.Types.True } }
                                                                                                                } in
                                                                                                                case x of wild2 {
                                                                                                                  IndexMap.U0_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Uind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.U0_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.U1_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Uind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.U1_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.U2_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Uind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.U2_3
                                                                                                                            -> GHC.Types.True } } }
                                                                                                                  IndexMap.U3_3
                                                                                                                  -> case {__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True False} wild of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                                                                     case {__scc {main:BasicTensorsMap.isZeroArea.b} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                @ IndexMap.Uind_3
                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                s1 of wild4 {
                                                                                                                       GHC.Base.Nothing
                                                                                                                       -> case Data.Maybe.fromJust1
                                                                                                                          ret_ty GHC.Types.Bool
                                                                                                                          of {}
                                                                                                                       GHC.Base.Just x1
                                                                                                                       -> case x1 of wild5 {
                                                                                                                            DEFAULT
                                                                                                                            -> $j
                                                                                                                            IndexMap.U3_3
                                                                                                                            -> GHC.Types.True } } } } } }) -}
40688ed88e234f0e2d44732659e4d2e0
  $w$spermSignN :: [GHC.Types.Int] -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
e5c053304e5b9e9e352cb200de08c4ee
  $wareaDoFList ::
    (GHC.Enum.Enum a, GHC.Classes.Ord a) =>
    [Data.IntMap.Internal.IntMap a]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(C(S))L),U(C(U),A,C(U),A,A,A,C(C1(U)),A)><L,U(1*U(C(C1(U)),A),A,A,A,C(C1(U)),A,A,A)>,
     Inline: [0] -}
9975e23f5898b2fc0b854721460f39d7
  $wcanonicalizeArea ::
    GHC.Classes.Ord a =>
    IndexMap.Ind 4 a -> (# IndexMap.Ind 4 a, GHC.Real.Rational #)
  {- Arity: 2,
     Strictness: <L,U(1*U(1*C1(C1(U)),A),A,C(C1(U)),1*C1(C1(U)),C(C1(U)),A,A,A)><L,U(U)>,
     Inline: [0] -}
be4b178c619469f9b8981aa0e2a011fe
  $wepsilon_F ::
    Data.IntMap.Internal.IntMap IndexMap.Lind_3
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.IntMap.Internal.IntMap
                            IndexMap.Lind_3) ->
                 {__scc {main:BasicTensorsMap.epsilon_F} True False} case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.epsilon_F.a} True True} let {
                                                                                                                                                                                     a :: IndexMap.Lind_3
                                                                                                                                                                                     = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                          @ IndexMap.Lind_3
                                                                                                                                                                                                                                          0#
                                                                                                                                                                                                                                          ww of wild1 {
                                                                                                                                                                                                                                     GHC.Base.Nothing
                                                                                                                                                                                                                                     -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                          @ IndexMap.Lind_3
                                                                                                                                                                                                                                     GHC.Base.Just x
                                                                                                                                                                                                                                     -> x }
                                                                                                                                                                                   } in
                                                                                                                                                                                   {__scc {main:IndexMap.fromEnum} True True} case a of wild {
                                                                                                                                                                                                                                IndexMap.L0_3
                                                                                                                                                                                                                                -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                                IndexMap.L1_3
                                                                                                                                                                                                                                -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                                IndexMap.L2_3
                                                                                                                                                                                                                                -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                                IndexMap.L3_3
                                                                                                                                                                                                                                -> BasicTensorsMap.epsilon1 } of wild { GHC.Types.I# x ->
                                                                     case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.epsilon_F.b} True True} let {
                                                                                                                                                                                     a :: IndexMap.Lind_3
                                                                                                                                                                                     = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                          @ IndexMap.Lind_3
                                                                                                                                                                                                                                          1#
                                                                                                                                                                                                                                          ww of wild1 {
                                                                                                                                                                                                                                     GHC.Base.Nothing
                                                                                                                                                                                                                                     -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                          @ IndexMap.Lind_3
                                                                                                                                                                                                                                     GHC.Base.Just x1
                                                                                                                                                                                                                                     -> x1 }
                                                                                                                                                                                   } in
                                                                                                                                                                                   {__scc {main:IndexMap.fromEnum} True True} case a of wild1 {
                                                                                                                                                                                                                                IndexMap.L0_3
                                                                                                                                                                                                                                -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                                IndexMap.L1_3
                                                                                                                                                                                                                                -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                                IndexMap.L2_3
                                                                                                                                                                                                                                -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                                IndexMap.L3_3
                                                                                                                                                                                                                                -> BasicTensorsMap.epsilon1 } of wild1 { GHC.Types.I# y ->
                                                                     case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                x
                                                                                                                                y of lwild {
                                                                       DEFAULT
                                                                       -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.epsilon_F.c} True True} let {
                                                                                                                                                                                          a :: IndexMap.Lind_3
                                                                                                                                                                                          = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                               @ IndexMap.Lind_3
                                                                                                                                                                                                                                               2#
                                                                                                                                                                                                                                               ww of wild2 {
                                                                                                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                                                                                                          -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                               @ IndexMap.Lind_3
                                                                                                                                                                                                                                          GHC.Base.Just x1
                                                                                                                                                                                                                                          -> x1 }
                                                                                                                                                                                        } in
                                                                                                                                                                                        {__scc {main:IndexMap.fromEnum} True True} case a of wild2 {
                                                                                                                                                                                                                                     IndexMap.L0_3
                                                                                                                                                                                                                                     -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                                     IndexMap.L1_3
                                                                                                                                                                                                                                     -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                                     IndexMap.L2_3
                                                                                                                                                                                                                                     -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                                     IndexMap.L3_3
                                                                                                                                                                                                                                     -> BasicTensorsMap.epsilon1 } of wild2 { GHC.Types.I# y1 ->
                                                                          case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                     x
                                                                                                                                     y1 of lwild1 {
                                                                            DEFAULT
                                                                            -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.epsilon_F.d} True True} let {
                                                                                                                                                                                               a :: IndexMap.Lind_3
                                                                                                                                                                                               = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                    @ IndexMap.Lind_3
                                                                                                                                                                                                                                                    3#
                                                                                                                                                                                                                                                    ww of wild3 {
                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                               -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                                    @ IndexMap.Lind_3
                                                                                                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                                                                                                               -> x1 }
                                                                                                                                                                                             } in
                                                                                                                                                                                             {__scc {main:IndexMap.fromEnum} True True} case a of wild3 {
                                                                                                                                                                                                                                          IndexMap.L0_3
                                                                                                                                                                                                                                          -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                                          IndexMap.L1_3
                                                                                                                                                                                                                                          -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                                          IndexMap.L2_3
                                                                                                                                                                                                                                          -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                                          IndexMap.L3_3
                                                                                                                                                                                                                                          -> BasicTensorsMap.epsilon1 } of wild3 { GHC.Types.I# y2 ->
                                                                               case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                          x
                                                                                                                                          y2 of lwild2 {
                                                                                 DEFAULT
                                                                                 -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                               y
                                                                                                                                               y1 of lwild3 {
                                                                                      DEFAULT
                                                                                      -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                                    y
                                                                                                                                                    y2 of lwild4 {
                                                                                           DEFAULT
                                                                                           -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Prim.==#
                                                                                                                                                         y1
                                                                                                                                                         y2 of lwild5 {
                                                                                                DEFAULT
                                                                                                -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} let {
                                                                                                                                                              l :: [GHC.Types.Int]
                                                                                                                                                              = GHC.Types.:
                                                                                                                                                                  @ GHC.Types.Int
                                                                                                                                                                  wild3
                                                                                                                                                                  (GHC.Types.[]
                                                                                                                                                                     @ GHC.Types.Int)
                                                                                                                                                            } in
                                                                                                                                                            let {
                                                                                                                                                              l1 :: [GHC.Types.Int]
                                                                                                                                                              = GHC.Types.:
                                                                                                                                                                  @ GHC.Types.Int
                                                                                                                                                                  wild2
                                                                                                                                                                  l
                                                                                                                                                            } in
                                                                                                                                                            let {
                                                                                                                                                              l2 :: [GHC.Types.Int]
                                                                                                                                                              = GHC.Types.:
                                                                                                                                                                  @ GHC.Types.Int
                                                                                                                                                                  wild1
                                                                                                                                                                  l1
                                                                                                                                                            } in
                                                                                                                                                            let {
                                                                                                                                                              l3 :: [GHC.Types.Int]
                                                                                                                                                              = GHC.Types.:
                                                                                                                                                                  @ GHC.Types.Int
                                                                                                                                                                  wild
                                                                                                                                                                  l2
                                                                                                                                                            } in
                                                                                                                                                            {__scc {main:BasicTensorsMap.permSign} True True} BasicTensorsMap.$w$spermSignN
                                                                                                                                                                                                                l3 of ww1 { DEFAULT ->
                                                                                                   case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.permSign} False True} GHC.Prim.<#
                                                                                                                                                                                                                 ww1
                                                                                                                                                                                                                 0# of lwild6 {
                                                                                                     DEFAULT
                                                                                                     -> case ww1 of wild4 {
                                                                                                          DEFAULT
                                                                                                          -> case {__scc {main:BasicTensorsMap.epsilon_F} False True} {__scc {main:BasicTensorsMap.permSign} False True} GHC.Real.$wf1
                                                                                                                                                                                                                           -1#
                                                                                                                                                                                                                           wild4 of ww4 { DEFAULT ->
                                                                                                             case {__scc {main:BasicTensorsMap.epsilon_F} False True} GHC.Integer.Type.smallInteger
                                                                                                                                                                        ww4 of dt2 { DEFAULT ->
                                                                                                             (# dt2,
                                                                                                                GHC.Real.$fEnumRatio1 #) } }
                                                                                                          0#
                                                                                                          -> (# BasicTensorsMap.$smkTensorfromFZeros7,
                                                                                                                GHC.Real.$fEnumRatio1 #) }
                                                                                                     1#
                                                                                                     -> case GHC.Real.^2
                                                                                                        ret_ty (# GHC.Integer.Type.Integer,
                                                                                                                  GHC.Integer.Type.Integer #)
                                                                                                        of {} } }
                                                                                                1#
                                                                                                -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                                                      GHC.Real.$fEnumRatio1 #) }
                                                                                           1#
                                                                                           -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                                                 GHC.Real.$fEnumRatio1 #) }
                                                                                      1#
                                                                                      -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                                            GHC.Real.$fEnumRatio1 #) }
                                                                                 1#
                                                                                 -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                                       GHC.Real.$fEnumRatio1 #) } }
                                                                            1#
                                                                            -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                                  GHC.Real.$fEnumRatio1 #) } }
                                                                       1#
                                                                       -> (# BasicTensorsMap.$smkTensorfromFZeros4,
                                                                             GHC.Real.$fEnumRatio1 #) } } }) -}
7de2e92d1ea2344916a568ed05111d77
  $wetaAbs ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 0 0 0 0 0 1 0 0) GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case ({__scc {main:BasicTensorsMap.etaAbs} True True} {__scc {main:BasicTensorsMap.etaAbs.t1} True True} TensorMap.tensorProductWith
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            @ GHC.Real.Rational
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 2
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 0
                                                                                                                            @ 1
                                                                                                                            @ 2
                                                                                                                            @ 0
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                            BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                              `cast`
                                                                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                      <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                            GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                            BasicTensorsMap.eta
                                                                                                                            (BasicTensorsMap.interJ_2
                                                                                                                               w))
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.etaAbs} False True} TensorMap.$wtensorContractWith_3
                                                                         @ 1
                                                                         @ 1
                                                                         @ GHC.Real.Rational
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 1
                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                         BasicTensorsMap.etaAbs2
                                                                         GHC.Real.$fEnumRatio_$s$c+
                                                                         ww1 of ww2 { Unit# ww3 ->
                 {__scc {main:BasicTensorsMap.etaAbs} False True} TensorMap.$wtensorContractWith_3
                                                                    @ 0
                                                                    @ 0
                                                                    @ GHC.Real.Rational
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 1
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.etaAbs1
                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                    ww3
                                                                      `cast`
                                                                    (Data.Map.Internal.Map
                                                                       ((,,,,,,,)
                                                                          <IndexMap.Ind
                                                                             0 IndexMap.Uind_20>_N
                                                                          <IndexMap.Ind
                                                                             0 IndexMap.Lind_20>_N
                                                                          <IndexMap.Ind
                                                                             0 IndexMap.Uind_19>_N
                                                                          <IndexMap.Ind
                                                                             0 IndexMap.Lind_19>_N
                                                                          <IndexMap.Ind
                                                                             0 IndexMap.Uind_9>_N
                                                                          <IndexMap.Ind
                                                                             1 IndexMap.Lind_9>_N
                                                                          (IndexMap.Ind
                                                                             (Sym (Add0L (<1>_N)))
                                                                             <IndexMap.Uind_3>_N)_N
                                                                          (IndexMap.Ind
                                                                             (Sym (Add0L (<1>_N)))
                                                                             <IndexMap.Lind_3>_N)_N)_N
                                                                       <GHC.Real.Rational>_R)_R } }) -}
027b20352b05aaa2ba7a7b6644fcef71
  $wflatArea ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case ({__scc {main:BasicTensorsMap.flatArea} True True} {__scc {main:BasicTensorsMap.flatArea.prod} True True} TensorMap.tensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 4
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 4
                                                                                                                                  @ 0
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.epsilon6
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.epsilon6
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  BasicTensorsMap.flatAreaST
                                                                                                                                  (BasicTensorsMap.interJ_Area
                                                                                                                                     w))
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         (Add0R (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.flatArea} False True} TensorMap.$wtensorContractWith_3
                                                                           @ 3
                                                                           @ 3
                                                                           @ GHC.Real.Rational
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           BasicTensorsMap.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                           BasicTensorsMap.$stensorContractWith_1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                           BasicTensorsMap.flatArea2
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww1 of ww2 { Unit# ww3 ->
                 case {__scc {main:BasicTensorsMap.flatArea} False True} TensorMap.$wtensorContractWith_3
                                                                           @ 2
                                                                           @ 2
                                                                           @ GHC.Real.Rational
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           BasicTensorsMap.$smkTensorfromFZeros1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           BasicTensorsMap.$smkTensorfromFZeros1
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                           BasicTensorsMap.flatArea1
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww3
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_20>_N
                                                                                 <IndexMap.Ind
                                                                                    1
                                                                                    IndexMap.Lind_20>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_19>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Lind_19>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_9>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Lind_9>_N
                                                                                 (IndexMap.Ind
                                                                                    (Sym (AddDef (<2>_N,
                                                                                                  <1>_N)))
                                                                                    <IndexMap.Uind_3>_N)_N
                                                                                 (IndexMap.Ind
                                                                                    (Sym (AddDef (<2>_N,
                                                                                                  <1>_N)))
                                                                                    <IndexMap.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R of ww4 { Unit# ww5 ->
                 case {__scc {main:BasicTensorsMap.flatArea} False True} TensorMap.$wtensorContractWith_3
                                                                           @ 1
                                                                           @ 1
                                                                           @ GHC.Real.Rational
                                                                           @ 0
                                                                           @ 1
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           @ 0
                                                                           BasicTensorsMap.$smkTensorfromFZeros6
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           BasicTensorsMap.$smkTensorfromFZeros6
                                                                             `cast`
                                                                           (Sym (GHC.TypeNats.N:SNat[0]
                                                                                     <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                           BasicTensorsMap.etaAbs2
                                                                           GHC.Real.$fEnumRatio_$s$c+
                                                                           ww5
                                                                             `cast`
                                                                           (Data.Map.Internal.Map
                                                                              ((,,,,,,,)
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_20>_N
                                                                                 <IndexMap.Ind
                                                                                    1
                                                                                    IndexMap.Lind_20>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_19>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Lind_19>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Uind_9>_N
                                                                                 <IndexMap.Ind
                                                                                    0
                                                                                    IndexMap.Lind_9>_N
                                                                                 (IndexMap.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <IndexMap.Uind_3>_N)_N
                                                                                 (IndexMap.Ind
                                                                                    (Sym (AddDef (<1>_N,
                                                                                                  <1>_N)))
                                                                                    <IndexMap.Lind_3>_N)_N)_N
                                                                              <GHC.Real.Rational>_R)_R of ww6 { Unit# ww7 ->
                 {__scc {main:BasicTensorsMap.flatArea} False True} TensorMap.$wtensorContractWith_3
                                                                      @ 0
                                                                      @ 0
                                                                      @ GHC.Real.Rational
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.etaAbs1
                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                      ww7
                                                                        `cast`
                                                                      (Data.Map.Internal.Map
                                                                         ((,,,,,,,)
                                                                            <IndexMap.Ind
                                                                               0 IndexMap.Uind_20>_N
                                                                            <IndexMap.Ind
                                                                               1 IndexMap.Lind_20>_N
                                                                            <IndexMap.Ind
                                                                               0 IndexMap.Uind_19>_N
                                                                            <IndexMap.Ind
                                                                               0 IndexMap.Lind_19>_N
                                                                            <IndexMap.Ind
                                                                               0 IndexMap.Uind_9>_N
                                                                            <IndexMap.Ind
                                                                               0 IndexMap.Lind_9>_N
                                                                            (IndexMap.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <IndexMap.Uind_3>_N)_N
                                                                            (IndexMap.Ind
                                                                               (Sym (Add0L (<1>_N)))
                                                                               <IndexMap.Lind_3>_N)_N)_N
                                                                         <GHC.Real.Rational>_R)_R } } } }) -}
60124117cdc31ba4562020a0c9d4d9b6
  $winterArea ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case {__scc {main:BasicTensorsMap.interArea} True True} {__scc {main:BasicTensorsMap.interArea.i} True True} BasicTensorsMap.interI_Area
                                                                                                                                w of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.interArea} False True} {__scc {main:BasicTensorsMap.interArea.j} True True} BasicTensorsMap.interJ_Area
                                                                                                                                 w1 of ww2 { TensorMap.Tensor ww3 ->
                 case ({__scc {main:BasicTensorsMap.interArea} False True} {__scc {main:BasicTensorsMap.interArea.prod} True True} TensorMap.tensorProductWith
                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                     @ 1
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 4
                                                                                                                                     @ 0
                                                                                                                                     @ 1
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 0
                                                                                                                                     @ 4
                                                                                                                                     @ 0
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.epsilon6
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     BasicTensorsMap.epsilon6
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                       `cast`
                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                     GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                     ww
                                                                                                                                     ww2)
                        `cast`
                      (TensorMap.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         (Add0R (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww4 { TensorMap.Tensor ww5 ->
                 case {__scc {main:BasicTensorsMap.interArea} False True} TensorMap.$wtensorContractWith_3
                                                                            @ 3
                                                                            @ 3
                                                                            @ GHC.Real.Rational
                                                                            @ 1
                                                                            @ 1
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            BasicTensorsMap.$stensorContractWith_1
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                            BasicTensorsMap.$stensorContractWith_1
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                            BasicTensorsMap.flatArea2
                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                            ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:BasicTensorsMap.interArea} False True} TensorMap.$wtensorContractWith_3
                                                                            @ 2
                                                                            @ 2
                                                                            @ GHC.Real.Rational
                                                                            @ 1
                                                                            @ 1
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            BasicTensorsMap.$smkTensorfromFZeros1
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                            BasicTensorsMap.$smkTensorfromFZeros1
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                            BasicTensorsMap.flatArea1
                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                            ww7
                                                                              `cast`
                                                                            (Data.Map.Internal.Map
                                                                               ((,,,,,,,)
                                                                                  <IndexMap.Ind
                                                                                     1
                                                                                     IndexMap.Uind_20>_N
                                                                                  <IndexMap.Ind
                                                                                     1
                                                                                     IndexMap.Lind_20>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Uind_19>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Lind_19>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Uind_9>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Lind_9>_N
                                                                                  (IndexMap.Ind
                                                                                     (Sym (AddDef (<2>_N,
                                                                                                   <1>_N)))
                                                                                     <IndexMap.Uind_3>_N)_N
                                                                                  (IndexMap.Ind
                                                                                     (Sym (AddDef (<2>_N,
                                                                                                   <1>_N)))
                                                                                     <IndexMap.Lind_3>_N)_N)_N
                                                                               <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:BasicTensorsMap.interArea} False True} TensorMap.$wtensorContractWith_3
                                                                            @ 1
                                                                            @ 1
                                                                            @ GHC.Real.Rational
                                                                            @ 1
                                                                            @ 1
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            BasicTensorsMap.$smkTensorfromFZeros6
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                            BasicTensorsMap.$smkTensorfromFZeros6
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                            BasicTensorsMap.etaAbs2
                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                            ww9
                                                                              `cast`
                                                                            (Data.Map.Internal.Map
                                                                               ((,,,,,,,)
                                                                                  <IndexMap.Ind
                                                                                     1
                                                                                     IndexMap.Uind_20>_N
                                                                                  <IndexMap.Ind
                                                                                     1
                                                                                     IndexMap.Lind_20>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Uind_19>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Lind_19>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Uind_9>_N
                                                                                  <IndexMap.Ind
                                                                                     0
                                                                                     IndexMap.Lind_9>_N
                                                                                  (IndexMap.Ind
                                                                                     (Sym (AddDef (<1>_N,
                                                                                                   <1>_N)))
                                                                                     <IndexMap.Uind_3>_N)_N
                                                                                  (IndexMap.Ind
                                                                                     (Sym (AddDef (<1>_N,
                                                                                                   <1>_N)))
                                                                                     <IndexMap.Lind_3>_N)_N)_N
                                                                               <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:BasicTensorsMap.interArea} False True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                     ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.interArea_go8
                                                                                                                                                                                                                                                                 ww11) of ww12 { TensorMap.Tensor ww13 ->
                 (# ww13 #) } } } } } } }) -}
a16efc3c5e6b9822651426e7889cefc2
  $winterAreanoFactor ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} True True} {__scc {main:BasicTensorsMap.interAreanoFactor.i} True True} BasicTensorsMap.interI_Area
                                                                                                                                                w of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} False True} {__scc {main:BasicTensorsMap.interAreanoFactor.j} True True} BasicTensorsMap.interJ_AreanoFactor
                                                                                                                                                 w1 of ww2 { TensorMap.Tensor ww3 ->
                 case ({__scc {main:BasicTensorsMap.interAreanoFactor} False True} {__scc {main:BasicTensorsMap.interAreanoFactor.prod} True True} TensorMap.tensorProductWith
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 4
                                                                                                                                                     @ 0
                                                                                                                                                     @ 1
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 0
                                                                                                                                                     @ 4
                                                                                                                                                     @ 0
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.epsilon6
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     BasicTensorsMap.epsilon6
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                       `cast`
                                                                                                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                     GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                     ww
                                                                                                                                                     ww2)
                        `cast`
                      (TensorMap.Tensor
                         (Add0R (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         (Add0R (<4>_N) ; Sym (AddDef (<3>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww4 { TensorMap.Tensor ww5 ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} False True} TensorMap.$wtensorContractWith_3
                                                                                    @ 3
                                                                                    @ 3
                                                                                    @ GHC.Real.Rational
                                                                                    @ 1
                                                                                    @ 1
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    BasicTensorsMap.$stensorContractWith_1
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                    BasicTensorsMap.$stensorContractWith_1
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                                    BasicTensorsMap.flatArea2
                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                    ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} False True} TensorMap.$wtensorContractWith_3
                                                                                    @ 2
                                                                                    @ 2
                                                                                    @ GHC.Real.Rational
                                                                                    @ 1
                                                                                    @ 1
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    BasicTensorsMap.$smkTensorfromFZeros1
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                    BasicTensorsMap.$smkTensorfromFZeros1
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                    BasicTensorsMap.flatArea1
                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                    ww7
                                                                                      `cast`
                                                                                    (Data.Map.Internal.Map
                                                                                       ((,,,,,,,)
                                                                                          <IndexMap.Ind
                                                                                             1
                                                                                             IndexMap.Uind_20>_N
                                                                                          <IndexMap.Ind
                                                                                             1
                                                                                             IndexMap.Lind_20>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Uind_19>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Lind_19>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Uind_9>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Lind_9>_N
                                                                                          (IndexMap.Ind
                                                                                             (Sym (AddDef (<2>_N,
                                                                                                           <1>_N)))
                                                                                             <IndexMap.Uind_3>_N)_N
                                                                                          (IndexMap.Ind
                                                                                             (Sym (AddDef (<2>_N,
                                                                                                           <1>_N)))
                                                                                             <IndexMap.Lind_3>_N)_N)_N
                                                                                       <GHC.Real.Rational>_R)_R of ww8 { Unit# ww9 ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} False True} TensorMap.$wtensorContractWith_3
                                                                                    @ 1
                                                                                    @ 1
                                                                                    @ GHC.Real.Rational
                                                                                    @ 1
                                                                                    @ 1
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    @ 0
                                                                                    BasicTensorsMap.$smkTensorfromFZeros6
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                    BasicTensorsMap.$smkTensorfromFZeros6
                                                                                      `cast`
                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                              <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                    BasicTensorsMap.etaAbs2
                                                                                    GHC.Real.$fEnumRatio_$s$c+
                                                                                    ww9
                                                                                      `cast`
                                                                                    (Data.Map.Internal.Map
                                                                                       ((,,,,,,,)
                                                                                          <IndexMap.Ind
                                                                                             1
                                                                                             IndexMap.Uind_20>_N
                                                                                          <IndexMap.Ind
                                                                                             1
                                                                                             IndexMap.Lind_20>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Uind_19>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Lind_19>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Uind_9>_N
                                                                                          <IndexMap.Ind
                                                                                             0
                                                                                             IndexMap.Lind_9>_N
                                                                                          (IndexMap.Ind
                                                                                             (Sym (AddDef (<1>_N,
                                                                                                           <1>_N)))
                                                                                             <IndexMap.Uind_3>_N)_N
                                                                                          (IndexMap.Ind
                                                                                             (Sym (AddDef (<1>_N,
                                                                                                           <1>_N)))
                                                                                             <IndexMap.Lind_3>_N)_N)_N
                                                                                       <GHC.Real.Rational>_R)_R of ww10 { Unit# ww11 ->
                 case {__scc {main:BasicTensorsMap.interAreanoFactor} False True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                                                                             ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.interArea_go8
                                                                                                                                                                                                                                                                         ww11) of ww12 { TensorMap.Tensor ww13 ->
                 (# ww13 #) } } } } } } }) -}
d1a1221452307f05d553bede1cf983b4
  $winterEqn1_2 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case {__scc {main:BasicTensorsMap.interEqn1_2} True True} {__scc {main:BasicTensorsMap.interEqn1_2.int1} True True} BasicTensorsMap.$winterArea
                                                                                                                                       w
                                                                                                                                       w1 of ww { Unit# ww1 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_2} False True} {__scc {main:BasicTensorsMap.interEqn1_2.int1} False True} TensorMap.tensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         (TensorMap.Tensor
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            ww1)
                                                                                                                                         BasicTensorsMap.delta_3 of ww2 { TensorMap.Tensor ww3 ->
                 case ({__scc {main:BasicTensorsMap.interEqn1_2} False True} {__scc {main:BasicTensorsMap.interEqn1_2.intTotal} True False} BasicTensorsMap.interEqn1_1)
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<2>_N))
                         (Add0R (<2>_N))
                         <GHC.Real.Rational>_R)_R of ww4 { TensorMap.Tensor ww5 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_2} False True} {__scc {main:BasicTensorsMap.interEqn1_2.intTotal} False True} {__scc {main:TensorMap.tensorSub} True True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                   @ 2
                                                                                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                   ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.interEqn1_2_go8
                                                                                                                                                                                                                                                                                                                                                                               ww5) of ww6 { TensorMap.Tensor ww7 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_2} False True} {__scc {main:BasicTensorsMap.interEqn1_2.intTotal} False True} {__scc {main:TensorMap.tensorSub} False True} {__scc {main:TensorMap.tensorAdd} True False} TensorMap.Tensor
                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                         @ 1
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 0
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ 2
                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                         ({__scc {main:TensorMap.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                          @ (IndexMap.Index
                                                                                                                                                                                                                                                                                               1
                                                                                                                                                                                                                                                                                               1
                                                                                                                                                                                                                                                                                               0
                                                                                                                                                                                                                                                                                               0
                                                                                                                                                                                                                                                                                               0
                                                                                                                                                                                                                                                                                               0
                                                                                                                                                                                                                                                                                               2
                                                                                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                          (TensorMap.aSymTensor3
                                                                                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                                                                                             @ 1
                                                                                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                                                                                             @ 0
                                                                                                                                                                                                                                                                                             @ 2
                                                                                                                                                                                                                                                                                             @ 2)
                                                                                                                                                                                                                                                                                          BasicTensorsMap.flatAreaST_lvl24
                                                                                                                                                                                                                                                                                          ww3
                                                                                                                                                                                                                                                                                            `cast`
                                                                                                                                                                                                                                                                                          (Data.Map.Internal.Map
                                                                                                                                                                                                                                                                                             ((,,,,,,,)
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Uind_20>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0R (<1>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Lind_20>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Uind_19>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Lind_19>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Uind_9>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (Add0L (<0>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Lind_9>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Uind_3>_N)_N
                                                                                                                                                                                                                                                                                                (IndexMap.Ind
                                                                                                                                                                                                                                                                                                   (AddDef (<1>_N,
                                                                                                                                                                                                                                                                                                            <1>_N))
                                                                                                                                                                                                                                                                                                   <IndexMap.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                                                                             <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                                                                          ww7) of ww8 { TensorMap.Tensor ww9 ->
                 (# ww9 #) } } } } }) -}
b107d55e955c89f7a3a3d43abe3693f2
  $winterEqn1_3 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20)
                   (w2 :: Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w3 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case {__scc {main:BasicTensorsMap.interEqn1_3} True True} {__scc {main:BasicTensorsMap.interEqn1_3.int1} True True} BasicTensorsMap.$winterArea
                                                                                                                                       w
                                                                                                                                       w1 of ww { Unit# ww1 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_3} False True} {__scc {main:BasicTensorsMap.interEqn1_3.int1} False True} TensorMap.tensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         (TensorMap.Tensor
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            ww1)
                                                                                                                                         BasicTensorsMap.delta_9 of ww2 { TensorMap.Tensor ww3 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_3} False True} {__scc {main:BasicTensorsMap.interEqn1_3.int2} True True} BasicTensorsMap.$winterMetric
                                                                                                                                        w2
                                                                                                                                        w3 of ww4 { Unit# ww5 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_3} False True} {__scc {main:BasicTensorsMap.interEqn1_3.int2} False True} TensorMap.tensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         (TensorMap.Tensor
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 0
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ 1
                                                                                                                                            @ GHC.Real.Rational
                                                                                                                                            ww5)
                                                                                                                                         BasicTensorsMap.delta_20 of ww6 { TensorMap.Tensor ww7 ->
                 case {__scc {main:BasicTensorsMap.interEqn1_3} False True} {__scc {main:BasicTensorsMap.interEqn1_3.intTotal} True True} {__scc {main:TensorMap.tensorAdd} True False} TensorMap.Tensor
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ 0
                                                                                                                                                                                          @ 0
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ 1
                                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                                          ({__scc {main:TensorMap.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                           @ (IndexMap.Index
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                1)
                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                           (TensorMap.aSymTensor3
                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                              @ 1)
                                                                                                                                                                                                                                           BasicTensorsMap.flatAreaST_lvl24
                                                                                                                                                                                                                                           ww3
                                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_20>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_20>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_19>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_19>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_9>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_9>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_3>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R
                                                                                                                                                                                                                                           ww7
                                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                                           (Data.Map.Internal.Map
                                                                                                                                                                                                                                              ((,,,,,,,)
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_20>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_20>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_19>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0L (<0>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_19>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_9>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_9>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Uind_3>_N)_N
                                                                                                                                                                                                                                                 (IndexMap.Ind
                                                                                                                                                                                                                                                    (Add0R (<1>_N))
                                                                                                                                                                                                                                                    <IndexMap.Lind_3>_N)_N)_N
                                                                                                                                                                                                                                              <GHC.Real.Rational>_R)_R) of ww8 { TensorMap.Tensor ww9 ->
                 (# ww9 #) } } } } }) -}
7a29d9f9f4b0b877592ba7ef157fc883
  $winterF_IArea ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> IndexMap.Uinds_20 1
    -> Data.IntMap.Internal.IntMap IndexMap.Lind_3
    -> GHC.Real.Rational
  {- Arity: 3, Strictness: <L,1*U><L,1*U(1*U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (ww :: IndexMap.Uinds_20 1)
                   (ww1 :: Data.IntMap.Internal.IntMap IndexMap.Lind_3) ->
                 let {
                   ds :: IndexMap.Ind 4 IndexMap.Lind_3
                   = IndexMap.UnsafemkInd @ 4 @ IndexMap.Lind_3 ww1
                 } in
                 {__scc {main:BasicTensorsMap.interF_IArea} True True} case BasicTensorsMap.$w$sisZeroArea
                                                                              ww1 of wild {
                                                                         GHC.Types.False
                                                                         -> case {__scc {main:BasicTensorsMap.interF_IArea.sortY} True True} BasicTensorsMap.$w$scanonicalizeArea1
                                                                                                                                               ds of ww2 { (#,#) ww3 ww4 ->
                                                                            {__scc {main:IndexMap.==} True False} {__scc {main:BasicTensorsMap.interF_IArea.indI} True False} case ww3 of ww5 { IndexMap.UnsafemkInd ww6 ->
                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_IArea.indI} False True} BasicTensorsMap.$wpoly_go6
                                                                                                                                                                                                                                                 @ IndexMap.Uind_20
                                                                                                                                                                                                                                                 ww6
                                                                                                                                                                                                                                                 w of x1 { DEFAULT ->
                                                                                                                                                                              case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                           @ IndexMap.Uind_20
                                                                                                                                                                                                                           x1 of a# { DEFAULT ->
                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_IArea.xVal} True True} {__scc {main:IndexMap.getValInd} True False} ww of wild1 { IndexMap.UnsafemkInd s ->
                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_IArea.xVal} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                              @ IndexMap.Uind_20
                                                                                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                                                                                              s of wild2 {
                                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                                -> case Data.Maybe.fromJust1
                                                                                                                                                                                   ret_ty GHC.Real.Rational
                                                                                                                                                                                   of {}
                                                                                                                                                                                GHC.Base.Just x
                                                                                                                                                                                -> case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                @ IndexMap.Uind_20
                                                                                                                                                                                                                                x of b# { DEFAULT ->
                                                                                                                                                                                   case {__scc {main:IndexMap.==} False True} GHC.Prim.tagToEnum#
                                                                                                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                                                                                                (GHC.Prim.==#
                                                                                                                                                                                                                                   a#
                                                                                                                                                                                                                                   b#) of wild3 {
                                                                                                                                                                                     GHC.Types.False
                                                                                                                                                                                     -> BasicTensorsMap.interF_IArea1
                                                                                                                                                                                     GHC.Types.True
                                                                                                                                                                                     -> ww4 } } } } } } } }
                                                                         GHC.Types.True
                                                                         -> BasicTensorsMap.interF_IArea1 }) -}
75dcc8063813cc8888d921b3bb65b061
  $winterMetric ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case {__scc {main:BasicTensorsMap.interMetric} True True} {__scc {main:BasicTensorsMap.interMetric.i} True True} BasicTensorsMap.interI_2
                                                                                                                                    w of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.interMetric} False True} {__scc {main:BasicTensorsMap.interMetric.j} True True} BasicTensorsMap.interJ_2
                                                                                                                                     w1 of ww2 { TensorMap.Tensor ww3 ->
                 case ({__scc {main:BasicTensorsMap.interMetric} False True} {__scc {main:BasicTensorsMap.interMetric.prod} True True} TensorMap.tensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 2
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 2
                                                                                                                                         @ 0
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         ww
                                                                                                                                         ww2)
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww4 { TensorMap.Tensor ww5 ->
                 case {__scc {main:BasicTensorsMap.interMetric} False True} TensorMap.$wtensorContractWith_3
                                                                              @ 1
                                                                              @ 1
                                                                              @ GHC.Real.Rational
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 0
                                                                              @ 1
                                                                              @ 1
                                                                              BasicTensorsMap.$smkTensorfromFZeros6
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                              BasicTensorsMap.$smkTensorfromFZeros6
                                                                                `cast`
                                                                              (Sym (GHC.TypeNats.N:SNat[0]
                                                                                        <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                              BasicTensorsMap.etaAbs1
                                                                              GHC.Real.$fEnumRatio_$s$c+
                                                                              ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:BasicTensorsMap.interMetric} False True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                       ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.interEqn1_3_go8
                                                                                                                                                                                                                                                                   ww7) of ww8 { TensorMap.Tensor ww9 ->
                 (# ww9 #) } } } } }) -}
57b90ef699e9af666d3e4b44132630ee
  $winterMetricnoFactor ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case {__scc {main:BasicTensorsMap.interMetricnoFactor} True True} {__scc {main:BasicTensorsMap.interMetricnoFactor.i} True True} BasicTensorsMap.interI_2
                                                                                                                                                    w of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.interMetricnoFactor} False True} {__scc {main:BasicTensorsMap.interMetricnoFactor.j} True True} BasicTensorsMap.interJ_2noFactor
                                                                                                                                                     w1 of ww2 { TensorMap.Tensor ww3 ->
                 case ({__scc {main:BasicTensorsMap.interMetricnoFactor} False True} {__scc {main:BasicTensorsMap.interMetricnoFactor.prod} True True} TensorMap.tensorProductWith
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 2
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 0
                                                                                                                                                         @ 1
                                                                                                                                                         @ 2
                                                                                                                                                         @ 0
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                           `cast`
                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                                         ww
                                                                                                                                                         ww2)
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0R (<1>_N))
                         (Add0L (<1>_N))
                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww4 { TensorMap.Tensor ww5 ->
                 case {__scc {main:BasicTensorsMap.interMetricnoFactor} False True} TensorMap.$wtensorContractWith_3
                                                                                      @ 1
                                                                                      @ 1
                                                                                      @ GHC.Real.Rational
                                                                                      @ 0
                                                                                      @ 0
                                                                                      @ 0
                                                                                      @ 0
                                                                                      @ 1
                                                                                      @ 1
                                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                                        `cast`
                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                                        `cast`
                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                      BasicTensorsMap.etaAbs1
                                                                                      GHC.Real.$fEnumRatio_$s$c+
                                                                                      ww5 of ww6 { Unit# ww7 ->
                 case {__scc {main:BasicTensorsMap.interMetricnoFactor} False True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ 1
                                                                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                                                                               ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.interEqn1_3_go8
                                                                                                                                                                                                                                                                           ww7) of ww8 { TensorMap.Tensor ww9 ->
                 (# ww9 #) } } } } }) -}
dc03bc8f540d73132d8d5b5cdbeebae8
  $winvEtaAbs ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> (# Data.Map.Internal.Map
            (IndexMap.Index 0 0 0 0 1 0 0 0) GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9) ->
                 case ({__scc {main:BasicTensorsMap.invEtaAbs} True True} {__scc {main:BasicTensorsMap.invEtaAbs.t1} True True} TensorMap.tensorProductWith
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 1
                                                                                                                                  @ 0
                                                                                                                                  @ 0
                                                                                                                                  @ 2
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                  BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                    `cast`
                                                                                                                                  (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                            <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                  GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                  BasicTensorsMap.invEta
                                                                                                                                  (BasicTensorsMap.interI_2
                                                                                                                                     w))
                        `cast`
                      (TensorMap.Tensor
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<0>_N))
                         (Add0L (<1>_N))
                         (Add0L (<0>_N))
                         (Add0R (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         (Add0L (<2>_N) ; Sym (AddDef (<1>_N, <1>_N)))
                         <GHC.Real.Rational>_R)_R of ww { TensorMap.Tensor ww1 ->
                 case {__scc {main:BasicTensorsMap.invEtaAbs} False True} TensorMap.$wtensorContractWith_3
                                                                            @ 1
                                                                            @ 1
                                                                            @ GHC.Real.Rational
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 0
                                                                            @ 1
                                                                            @ 0
                                                                            BasicTensorsMap.$smkTensorfromFZeros6
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                            BasicTensorsMap.$smkTensorfromFZeros6
                                                                              `cast`
                                                                            (Sym (GHC.TypeNats.N:SNat[0]
                                                                                      <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                            BasicTensorsMap.etaAbs2
                                                                            GHC.Real.$fEnumRatio_$s$c+
                                                                            ww1 of ww2 { Unit# ww3 ->
                 {__scc {main:BasicTensorsMap.invEtaAbs} False True} TensorMap.$wtensorContractWith_3
                                                                       @ 0
                                                                       @ 0
                                                                       @ GHC.Real.Rational
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 0
                                                                       @ 1
                                                                       @ 0
                                                                       BasicTensorsMap.$smkTensorfromFZeros3
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                       BasicTensorsMap.$smkTensorfromFZeros3
                                                                         `cast`
                                                                       (Sym (GHC.TypeNats.N:SNat[0]
                                                                                 <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                       BasicTensorsMap.etaAbs1
                                                                       GHC.Real.$fEnumRatio_$s$c+
                                                                       ww3
                                                                         `cast`
                                                                       (Data.Map.Internal.Map
                                                                          ((,,,,,,,)
                                                                             <IndexMap.Ind
                                                                                0
                                                                                IndexMap.Uind_20>_N
                                                                             <IndexMap.Ind
                                                                                0
                                                                                IndexMap.Lind_20>_N
                                                                             <IndexMap.Ind
                                                                                0
                                                                                IndexMap.Uind_19>_N
                                                                             <IndexMap.Ind
                                                                                0
                                                                                IndexMap.Lind_19>_N
                                                                             <IndexMap.Ind
                                                                                1 IndexMap.Uind_9>_N
                                                                             <IndexMap.Ind
                                                                                0 IndexMap.Lind_9>_N
                                                                             (IndexMap.Ind
                                                                                (Sym (Add0L (<1>_N)))
                                                                                <IndexMap.Uind_3>_N)_N
                                                                             (IndexMap.Ind
                                                                                (Sym (Add0L (<1>_N)))
                                                                                <IndexMap.Lind_3>_N)_N)_N
                                                                          <GHC.Real.Rational>_R)_R } }) -}
b0cbedf9ac5d0dab45f6f5c752ef70d3
  $wisZeroArea ::
    GHC.Classes.Ord a => IndexMap.Ind 4 a -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(C(C(S))L)LLLLLLL),1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Classes.Ord a)
                   (w1 :: IndexMap.Ind 4 a) ->
                 let {
                   $dEq :: GHC.Classes.Eq a = GHC.Classes.$p1Ord @ a w
                 } in
                 {__scc {main:BasicTensorsMap.isZeroArea} True True} case GHC.Classes.==
                                                                            @ a
                                                                            $dEq
                                                                            ({__scc {main:BasicTensorsMap.isZeroArea.a} True True} {__scc {main:IndexMap.getValInd} True True} case w1 of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                               case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                      @ a
                                                                                                                                                                                      0#
                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                 -> Data.Maybe.fromJust1
                                                                                                                                                                                      @ a
                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                 -> x } })
                                                                            ({__scc {main:BasicTensorsMap.isZeroArea.b} True True} {__scc {main:IndexMap.getValInd} True True} case w1 of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                               case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                      @ a
                                                                                                                                                                                      1#
                                                                                                                                                                                      s of wild1 {
                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                 -> Data.Maybe.fromJust1
                                                                                                                                                                                      @ a
                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                 -> x } }) of wild {
                                                                       GHC.Types.False
                                                                       -> GHC.Classes.==
                                                                            @ a
                                                                            $dEq
                                                                            ({__scc {main:BasicTensorsMap.isZeroArea.c} True True} {__scc {main:IndexMap.getValInd} True True} case w1 of wild1 { IndexMap.UnsafemkInd s ->
                                                                                                                                                                               case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                      @ a
                                                                                                                                                                                      2#
                                                                                                                                                                                      s of wild2 {
                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                 -> Data.Maybe.fromJust1
                                                                                                                                                                                      @ a
                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                 -> x } })
                                                                            ({__scc {main:BasicTensorsMap.isZeroArea.d} True True} {__scc {main:IndexMap.getValInd} True True} case w1 of wild1 { IndexMap.UnsafemkInd s ->
                                                                                                                                                                               case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                      @ a
                                                                                                                                                                                      3#
                                                                                                                                                                                      s of wild2 {
                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                 -> Data.Maybe.fromJust1
                                                                                                                                                                                      @ a
                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                 -> x } })
                                                                       GHC.Types.True
                                                                       -> GHC.Types.True }) -}
d079b2081b11204d559076e17ae45d20
  $wivar2F ::
    IndexMap.Linds_20 1
    -> IndexMap.Linds_3 1
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,1*U(1*U)><L,1*U(1*U)>, Inline: [0],
     Unfolding: (\ (ww :: IndexMap.Linds_20 1)
                   (ww1 :: IndexMap.Linds_3 1) ->
                 {__scc {main:BasicTensorsMap.ivar2F} True False} case {__scc {main:BasicTensorsMap.ivar2F} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                     BasicTensorsMap.ivar11
                                                                                                                                                                     ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                               case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                   @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                   0#
                                                                                                                                                                                                                                                                                                                   s of wild1 {
                                                                                                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                    ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                              GHC.Real.Rational)
                                                                                                                                                                                                                                                                    of {}
                                                                                                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                                                                                                 -> {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                             case ww1 of wild2 { IndexMap.UnsafemkInd s1 ->
                                                                                                                                                                                                                                                                                                                                                             case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                 0#
                                                                                                                                                                                                                                                                                                                                                                                                                 s1 of wild3 {
                                                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                  ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                                                                                                            GHC.Real.Rational)
                                                                                                                                                                                                                                                                                                                                                                  of {}
                                                                                                                                                                                                                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                                                                                                                                                                                                                               -> case x1 of wild4 {
                                                                                                                                                                                                                                                                                                                                                                    IndexMap.L0_3
                                                                                                                                                                                                                                                                                                                                                                    -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                            22#
                                                                                                                                                                                                                                                                                                                                                                            (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                               a#
                                                                                                                                                                                                                                                                                                                                                                               4#))
                                                                                                                                                                                                                                                                                                                                                                         BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                    IndexMap.L1_3
                                                                                                                                                                                                                                                                                                                                                                    -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                               22#
                                                                                                                                                                                                                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                  a#
                                                                                                                                                                                                                                                                                                                                                                                  4#))
                                                                                                                                                                                                                                                                                                                                                                            1#)
                                                                                                                                                                                                                                                                                                                                                                         BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                    IndexMap.L2_3
                                                                                                                                                                                                                                                                                                                                                                    -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                               22#
                                                                                                                                                                                                                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                  a#
                                                                                                                                                                                                                                                                                                                                                                                  4#))
                                                                                                                                                                                                                                                                                                                                                                            2#)
                                                                                                                                                                                                                                                                                                                                                                         BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                    IndexMap.L3_3
                                                                                                                                                                                                                                                                                                                                                                    -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                            (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                               22#
                                                                                                                                                                                                                                                                                                                                                                               (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                  a#
                                                                                                                                                                                                                                                                                                                                                                                  4#))
                                                                                                                                                                                                                                                                                                                                                                            3#)
                                                                                                                                                                                                                                                                                                                                                                         BasicTensorsMap.ivar10 } } } } } }) of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                  (# ww3, ww4 #) }) -}
2aa038059dbc3811ffd25c0a9dd81d14
  $wivar2FM ::
    IndexMap.Linds_9 1
    -> IndexMap.Linds_3 1
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,1*U(1*U)><L,1*U(1*U)>, Inline: [0],
     Unfolding: (\ (ww :: IndexMap.Linds_9 1)
                   (ww1 :: IndexMap.Linds_3 1) ->
                 {__scc {main:BasicTensorsMap.ivar2FM} True False} case {__scc {main:BasicTensorsMap.ivar2FM} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                       BasicTensorsMap.ivar11
                                                                                                                                                                       ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                                 case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                     @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                     0#
                                                                                                                                                                                                                                                                                                                     s of wild1 {
                                                                                                                                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                      ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                GHC.Real.Rational)
                                                                                                                                                                                                                                                                      of {}
                                                                                                                                                                                                                                                                   GHC.Base.Just x
                                                                                                                                                                                                                                                                   -> {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                  @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                  x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                               case ww1 of wild2 { IndexMap.UnsafemkInd s1 ->
                                                                                                                                                                                                                                                                                                                                                               case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                   @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                   0#
                                                                                                                                                                                                                                                                                                                                                                                                                   s1 of wild3 {
                                                                                                                                                                                                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                    ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                                                                                                              GHC.Real.Rational)
                                                                                                                                                                                                                                                                                                                                                                    of {}
                                                                                                                                                                                                                                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                                                                                                                                                                                                                                 -> case x1 of wild4 {
                                                                                                                                                                                                                                                                                                                                                                      IndexMap.L0_3
                                                                                                                                                                                                                                                                                                                                                                      -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                              11#
                                                                                                                                                                                                                                                                                                                                                                              (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                 a#
                                                                                                                                                                                                                                                                                                                                                                                 4#))
                                                                                                                                                                                                                                                                                                                                                                           BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                      IndexMap.L1_3
                                                                                                                                                                                                                                                                                                                                                                      -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                                 11#
                                                                                                                                                                                                                                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                    a#
                                                                                                                                                                                                                                                                                                                                                                                    4#))
                                                                                                                                                                                                                                                                                                                                                                              1#)
                                                                                                                                                                                                                                                                                                                                                                           BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                      IndexMap.L2_3
                                                                                                                                                                                                                                                                                                                                                                      -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                                 11#
                                                                                                                                                                                                                                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                    a#
                                                                                                                                                                                                                                                                                                                                                                                    4#))
                                                                                                                                                                                                                                                                                                                                                                              2#)
                                                                                                                                                                                                                                                                                                                                                                           BasicTensorsMap.ivar10
                                                                                                                                                                                                                                                                                                                                                                      IndexMap.L3_3
                                                                                                                                                                                                                                                                                                                                                                      -> Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                           (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                              (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                                 11#
                                                                                                                                                                                                                                                                                                                                                                                 (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                                    a#
                                                                                                                                                                                                                                                                                                                                                                                    4#))
                                                                                                                                                                                                                                                                                                                                                                              3#)
                                                                                                                                                                                                                                                                                                                                                                           BasicTensorsMap.ivar10 } } } } } }) of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                   (# ww3, ww4 #) }) -}
5025ab9b37c3b07fabd80bf4424d6b6a
  $wivar3F ::
    IndexMap.Linds_20 1
    -> IndexMap.Linds_9 1
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,1*U(1*U)><L,1*U(1*U)>, Inline: [0],
     Unfolding: (\ (ww :: IndexMap.Linds_20 1)
                   (ww1 :: IndexMap.Linds_9 1) ->
                 {__scc {main:BasicTensorsMap.ivar3F} True False} case {__scc {main:BasicTensorsMap.ivar3F} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                     BasicTensorsMap.ivar11
                                                                                                                                                                     ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                               case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                   @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                   0#
                                                                                                                                                                                                                                                                                                                   s of wild1 {
                                                                                                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                    ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                              GHC.Real.Rational)
                                                                                                                                                                                                                                                                    of {}
                                                                                                                                                                                                                                                                 GHC.Base.Just x
                                                                                                                                                                                                                                                                 -> {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                                                x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                             case ww1 of wild2 { IndexMap.UnsafemkInd s1 ->
                                                                                                                                                                                                                                                                                                                                                             case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                 @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                 0#
                                                                                                                                                                                                                                                                                                                                                                                                                 s1 of wild3 {
                                                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                               -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                  ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                                                                                                            GHC.Real.Rational)
                                                                                                                                                                                                                                                                                                                                                                  of {}
                                                                                                                                                                                                                                                                                                                                                               GHC.Base.Just x1
                                                                                                                                                                                                                                                                                                                                                               -> case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                     @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                     x1 of a#1 { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                                  Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                    (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                       (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                          106#
                                                                                                                                                                                                                                                                                                                                                                          (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                             a#
                                                                                                                                                                                                                                                                                                                                                                             10#))
                                                                                                                                                                                                                                                                                                                                                                       a#1)
                                                                                                                                                                                                                                                                                                                                                                    BasicTensorsMap.ivar10 } } } } } }) of ww2 { Ivar.Ivar ww3 ww4 ->
                                                                  (# ww3, ww4 #) }) -}
31774dd310375d6ea0992d7a9b3dfb9a
  $wivar3FM ::
    IndexMap.Linds_9 2
    -> (# GHC.Real.Rational,
          Data.IntMap.Internal.IntMap GHC.Real.Rational #)
  {- Arity: 1, Strictness: <L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: IndexMap.Linds_9 2) ->
                 {__scc {main:BasicTensorsMap.ivar3FM} True False} case {__scc {main:BasicTensorsMap.ivar3FM} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                       BasicTensorsMap.ivar11
                                                                                                                                                                       ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                                 case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                     @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                     0#
                                                                                                                                                                                                                                                                                                                     s of wild1 {
                                                                                                                                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                                                                                                                                   -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                      ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                GHC.Real.Rational)
                                                                                                                                                                                                                                                                      of {}
                                                                                                                                                                                                                                                                   GHC.Base.Just x
                                                                                                                                                                                                                                                                   -> {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                  @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                  x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                               case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                                                   @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                                                                                                                                                                   s of wild2 {
                                                                                                                                                                                                                                                                                                                                                                 GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                                 -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                                                                                                                    ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                                                                                                                              GHC.Real.Rational)
                                                                                                                                                                                                                                                                                                                                                                    of {}
                                                                                                                                                                                                                                                                                                                                                                 GHC.Base.Just x1
                                                                                                                                                                                                                                                                                                                                                                 -> case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                                                                                                                       @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                                                                                                                       x1 of a#1 { DEFAULT ->
                                                                                                                                                                                                                                                                                                                                                                    Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                      (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                         (GHC.Prim.+#
                                                                                                                                                                                                                                                                                                                                                                            51#
                                                                                                                                                                                                                                                                                                                                                                            (GHC.Prim.*#
                                                                                                                                                                                                                                                                                                                                                                               a#
                                                                                                                                                                                                                                                                                                                                                                               10#))
                                                                                                                                                                                                                                                                                                                                                                         a#1)
                                                                                                                                                                                                                                                                                                                                                                      BasicTensorsMap.ivar10 } } } } }) of ww1 { Ivar.Ivar ww2 ww3 ->
                                                                   (# ww2, ww3 #) }) -}
9704bb5ab5969e64a3f6c91758742462
  $wpoly_go1 ::
    Data.IntMap.Internal.IntMap IndexMap.Uind_3
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
3841c6052d0f2eef4fc791eafff83310
  $wpoly_go13 ::
    Data.IntMap.Internal.IntMap IndexMap.Lind_3
    -> Data.Map.Internal.Map (IndexMap.Linds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
fa5b38d78e237a31ced657b6e9b1868a
  $wpoly_go2 ::
    Data.IntMap.Internal.IntMap IndexMap.Lind_3
    -> Data.Map.Internal.Map (IndexMap.Linds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
45804509bcac9011476ab3e8197ef534
  $wpoly_go3 ::
    Data.IntMap.Internal.IntMap IndexMap.Uind_3
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
84f0c1cde355cbd50a9540ecff0a1176
  $wpoly_go4 ::
    Data.IntMap.Internal.IntMap IndexMap.Uind_20
    -> IndexMap.Linds_20 1
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 0
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a
    -> a
  {- Arity: 9,
     Strictness: <S,U><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,1*U>,
     Inline: [0] -}
52716446098fd17b80f0f2dd8a5bb385
  $wpoly_go5 ::
    Data.IntMap.Internal.IntMap IndexMap.Uind_3
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
02d76044a194d4b579e9f1816e18fa83
  $wpoly_go6 ::
    Data.IntMap.Internal.IntMap IndexMap.Lind_3
    -> Data.Map.Internal.Map (IndexMap.Linds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
bd00b5595755f622f8793371d71e7c6e
  $wpoly_go7 ::
    IndexMap.Uinds_20 0
    -> IndexMap.Linds_20 1
    -> IndexMap.Uinds_19 0
    -> IndexMap.Linds_19 0
    -> IndexMap.Uinds_9 0
    -> IndexMap.Linds_9 0
    -> IndexMap.Uinds_3 0
    -> IndexMap.Linds_3 0
    -> Data.Map.Internal.Map (IndexMap.Index 0 1 0 0 0 0 0 0) a
    -> GHC.Types.Bool
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,1*U>,
     Inline: [0] -}
f16e8ea7f05e62632ebca52209445d7e
  $wsymIndListL ::
    GHC.Enum.Enum a => GHC.Prim.Int# -> GHC.Types.Int -> [[a]]
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><S,U><L,U>,
     Inline: [0] -}
7d1334bac214097f5cbdf12a5518ff8b
  aSymI_2 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> TensorMap.Tensor 0 0 0 0 1 0 0 2 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
60b7d073ef8d783c86fc8fa4dfd8f8ca
  areaDoFList ::
    (GHC.Enum.Enum a, GHC.Classes.Eq a, GHC.Classes.Ord a) =>
    [Data.IntMap.Internal.IntMap a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLLLC(C(S))L),U(C(U),A,C(U),A,A,A,C(C1(U)),A)><L,A><L,U(U(C(C1(U)),A),A,A,A,C(C1(U)),A,A,A)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Enum.Enum a)
                   (w1 :: GHC.Classes.Eq a)
                   (w2 :: GHC.Classes.Ord a) ->
                 BasicTensorsMap.$wareaDoFList @ a w w2) -}
12453116e8e5c348be9164d912c72b41
  canonicalizeArea ::
    (GHC.Classes.Eq a, GHC.Classes.Ord a, GHC.Enum.Enum a) =>
    IndexMap.Ind 4 a -> (IndexMap.Ind 4 a, GHC.Real.Rational)
  {- Arity: 4,
     Strictness: <L,A><L,U(U(C(C1(U)),A),A,C(C1(U)),C(C1(U)),C(C1(U)),A,A,A)><L,A><L,U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Classes.Ord a)
                   (w2 :: GHC.Enum.Enum a)
                   (w3 :: IndexMap.Ind 4 a) ->
                 case BasicTensorsMap.$wcanonicalizeArea
                        @ a
                        w1
                        w3 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
aaaf6ff7fca30da2909ef1f04f81143e
  delta_1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_2, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
d411d3ed899e7ab5409542be5de30d95
  delta_10 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_3} False True} TensorMap.mkTensorfromF
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 1
                                                                     @ GHC.Real.Rational
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                     GHC.Real.$fOrdRatio_$s$fEqRatio) -}
09686c37e948b434a93cd4030babf759
  delta_11 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_2, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
5b0dca3cdffe9db922f30dad3415b1f0
  delta_12 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_9} False True} TensorMap.mkTensorfromF
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ GHC.Real.Rational
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros6
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                     GHC.Real.$fOrdRatio_$s$fEqRatio) -}
1e0220f1e49e5f06bdd5cd917ee574b6
  delta_19 :: TensorMap.Tensor 0 0 1 1 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_19} True True} BasicTensorsMap.delta_5
                                                                     BasicTensorsMap.delta_1
                                                                     BasicTensorsMap.delta_19F) -}
dff67333b0b9ed0fa05bb4ba520f9e0b
  delta_19F :: IndexMap.Index 0 0 1 1 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLS(S)S(S)LLLL),1*U(A,A,1*U(1*U),1*U(1*U),A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 1 1 0 0 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww3 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 case ww4 of ww11 { IndexMap.UnsafemkInd ww12 ->
                 let {
                   ds :: IndexMap.Ind 1 IndexMap.Uind_19
                   = IndexMap.UnsafemkInd @ 1 @ IndexMap.Uind_19 ww10
                 } in
                 {__scc {main:BasicTensorsMap.delta_19F} True False} case {__scc {main:BasicTensorsMap.delta_19F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds of wild { IndexMap.UnsafemkInd s ->
                                                                     case {__scc {main:BasicTensorsMap.delta_19F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                             @ IndexMap.Uind_19
                                                                                                                                                                             0#
                                                                                                                                                                             s of wild1 {
                                                                       GHC.Base.Nothing
                                                                       -> case Data.Maybe.fromJust1
                                                                          ret_ty (GHC.Real.Ratio
                                                                                    GHC.Integer.Type.Integer)
                                                                          of {}
                                                                       GHC.Base.Just x
                                                                       -> case {__scc {main:BasicTensorsMap.delta_19F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                          @ IndexMap.Uind_19
                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                          case {__scc {main:BasicTensorsMap.delta_19F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                  @ IndexMap.Lind_19
                                                                                                                                                                                  0#
                                                                                                                                                                                  ww12 of wild2 {
                                                                            GHC.Base.Nothing
                                                                            -> case Data.Maybe.fromJust1
                                                                               ret_ty (GHC.Real.Ratio
                                                                                         GHC.Integer.Type.Integer)
                                                                               of {}
                                                                            GHC.Base.Just x1
                                                                            -> case {__scc {main:BasicTensorsMap.delta_19F} False True} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                      @ IndexMap.Lind_19
                                                                                                                                                                                      x1 of a#1 { DEFAULT ->
                                                                               case {__scc {main:BasicTensorsMap.delta_19F} False True} GHC.Prim.==#
                                                                                                                                          a#
                                                                                                                                          a#1 of lwild {
                                                                                 DEFAULT
                                                                                 -> GHC.Real.:%
                                                                                      @ GHC.Integer.Type.Integer
                                                                                      BasicTensorsMap.$smkTensorfromFZeros4
                                                                                      GHC.Real.$fEnumRatio1
                                                                                 1#
                                                                                 -> GHC.Real.:%
                                                                                      @ GHC.Integer.Type.Integer
                                                                                      BasicTensorsMap.$smkTensorfromFZeros7
                                                                                      GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
a2e8c9c87a618f3392ebd2f8c3015c75
  delta_2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
bf4f80a83b70e83e6f72ec7d614393b9
  delta_20 :: TensorMap.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_20} True True} BasicTensorsMap.delta_7
                                                                     BasicTensorsMap.delta_6
                                                                     BasicTensorsMap.delta_20F) -}
1f372b416398b0f4a131597a0d83f586
  delta_20F :: IndexMap.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(S(S)S(S)LLLLLL),1*U(1*U(1*U),1*U(1*U),A,A,A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 1 1 0 0 0 0 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww1 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 case ww2 of ww11 { IndexMap.UnsafemkInd ww12 ->
                 let {
                   ds :: IndexMap.Ind 1 IndexMap.Uind_20
                   = IndexMap.UnsafemkInd @ 1 @ IndexMap.Uind_20 ww10
                 } in
                 {__scc {main:BasicTensorsMap.delta_20F} True False} case {__scc {main:BasicTensorsMap.delta_20F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds of wild { IndexMap.UnsafemkInd s ->
                                                                     case {__scc {main:BasicTensorsMap.delta_20F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                             @ IndexMap.Uind_20
                                                                                                                                                                             0#
                                                                                                                                                                             s of wild1 {
                                                                       GHC.Base.Nothing
                                                                       -> case Data.Maybe.fromJust1
                                                                          ret_ty (GHC.Real.Ratio
                                                                                    GHC.Integer.Type.Integer)
                                                                          of {}
                                                                       GHC.Base.Just x
                                                                       -> case {__scc {main:BasicTensorsMap.delta_20F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                          @ IndexMap.Uind_20
                                                                                                                                                                                                                                                                          x of a# { DEFAULT ->
                                                                          case {__scc {main:BasicTensorsMap.delta_20F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                  @ IndexMap.Lind_20
                                                                                                                                                                                  0#
                                                                                                                                                                                  ww12 of wild2 {
                                                                            GHC.Base.Nothing
                                                                            -> case Data.Maybe.fromJust1
                                                                               ret_ty (GHC.Real.Ratio
                                                                                         GHC.Integer.Type.Integer)
                                                                               of {}
                                                                            GHC.Base.Just x1
                                                                            -> case {__scc {main:BasicTensorsMap.delta_20F} False True} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                      @ IndexMap.Lind_20
                                                                                                                                                                                      x1 of a#1 { DEFAULT ->
                                                                               case {__scc {main:BasicTensorsMap.delta_20F} False True} GHC.Prim.==#
                                                                                                                                          a#
                                                                                                                                          a#1 of lwild {
                                                                                 DEFAULT
                                                                                 -> GHC.Real.:%
                                                                                      @ GHC.Integer.Type.Integer
                                                                                      BasicTensorsMap.$smkTensorfromFZeros4
                                                                                      GHC.Real.$fEnumRatio1
                                                                                 1#
                                                                                 -> GHC.Real.:%
                                                                                      @ GHC.Integer.Type.Integer
                                                                                      BasicTensorsMap.$smkTensorfromFZeros7
                                                                                      GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
c9a618e39e8d610f453c3270045c9cf5
  delta_3 :: TensorMap.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_3} True True} BasicTensorsMap.delta_10
                                                                    BasicTensorsMap.delta_8
                                                                    BasicTensorsMap.delta_3F) -}
0b0871d3833340ee696c8b59a485f48d
  delta_3F :: IndexMap.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLS(S)S(S)),1*U(A,A,A,A,A,A,1*U(1*U),1*U(1*U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww7 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 case ww8 of ww11 { IndexMap.UnsafemkInd ww12 ->
                 let {
                   ds :: IndexMap.Ind 1 IndexMap.Uind_3
                   = IndexMap.UnsafemkInd @ 1 @ IndexMap.Uind_3 ww10
                 } in
                 let {
                   ds1 :: IndexMap.Ind 1 IndexMap.Lind_3
                   = IndexMap.UnsafemkInd @ 1 @ IndexMap.Lind_3 ww12
                 } in
                 {__scc {main:BasicTensorsMap.delta_3F} True False} case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds of wild { IndexMap.UnsafemkInd s ->
                                                                    case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                           @ IndexMap.Uind_3
                                                                                                                                                                           0#
                                                                                                                                                                           s of wild1 {
                                                                      GHC.Base.Nothing
                                                                      -> case Data.Maybe.fromJust1
                                                                         ret_ty (GHC.Real.Ratio
                                                                                   GHC.Integer.Type.Integer)
                                                                         of {}
                                                                      GHC.Base.Just x
                                                                      -> case x of wild2 {
                                                                           IndexMap.U0_3
                                                                           -> case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds1 of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                              case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                     @ IndexMap.Lind_3
                                                                                                                                                                                     0#
                                                                                                                                                                                     s1 of wild4 {
                                                                                GHC.Base.Nothing
                                                                                -> case Data.Maybe.fromJust1
                                                                                   ret_ty (GHC.Real.Ratio
                                                                                             GHC.Integer.Type.Integer)
                                                                                   of {}
                                                                                GHC.Base.Just x1
                                                                                -> case x1 of wild5 {
                                                                                     IndexMap.L0_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros7
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L1_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L2_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L3_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1 } } }
                                                                           IndexMap.U1_3
                                                                           -> case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds1 of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                              case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                     @ IndexMap.Lind_3
                                                                                                                                                                                     0#
                                                                                                                                                                                     s1 of wild4 {
                                                                                GHC.Base.Nothing
                                                                                -> case Data.Maybe.fromJust1
                                                                                   ret_ty (GHC.Real.Ratio
                                                                                             GHC.Integer.Type.Integer)
                                                                                   of {}
                                                                                GHC.Base.Just x1
                                                                                -> case x1 of wild5 {
                                                                                     DEFAULT
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L1_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros7
                                                                                          GHC.Real.$fEnumRatio1 } } }
                                                                           IndexMap.U2_3
                                                                           -> case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds1 of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                              case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                     @ IndexMap.Lind_3
                                                                                                                                                                                     0#
                                                                                                                                                                                     s1 of wild4 {
                                                                                GHC.Base.Nothing
                                                                                -> case Data.Maybe.fromJust1
                                                                                   ret_ty (GHC.Real.Ratio
                                                                                             GHC.Integer.Type.Integer)
                                                                                   of {}
                                                                                GHC.Base.Just x1
                                                                                -> case x1 of wild5 {
                                                                                     DEFAULT
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L2_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros7
                                                                                          GHC.Real.$fEnumRatio1 } } }
                                                                           IndexMap.U3_3
                                                                           -> case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds1 of wild3 { IndexMap.UnsafemkInd s1 ->
                                                                              case {__scc {main:BasicTensorsMap.delta_3F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                     @ IndexMap.Lind_3
                                                                                                                                                                                     0#
                                                                                                                                                                                     s1 of wild4 {
                                                                                GHC.Base.Nothing
                                                                                -> case Data.Maybe.fromJust1
                                                                                   ret_ty (GHC.Real.Ratio
                                                                                             GHC.Integer.Type.Integer)
                                                                                   of {}
                                                                                GHC.Base.Just x1
                                                                                -> case x1 of wild5 {
                                                                                     DEFAULT
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros4
                                                                                          GHC.Real.$fEnumRatio1
                                                                                     IndexMap.L3_3
                                                                                     -> GHC.Real.:%
                                                                                          @ GHC.Integer.Type.Integer
                                                                                          BasicTensorsMap.$smkTensorfromFZeros7
                                                                                          GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
ff72f68803fcb1b23cd53b90e3a3aa13
  delta_4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
78c3cc51592741a4133930eebe4320c7
  delta_5 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 1 1 0 0 0 0 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 1 1 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_19} False True} TensorMap.mkTensorfromF
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 1
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ GHC.Real.Rational
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                      GHC.Real.$fOrdRatio_$s$fEqRatio) -}
2da9e7d40afa3c9cc262db301f4ca18f
  delta_6 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_2, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
97e40eb1a7c259e59a5bcafceb89d899
  delta_7 ::
    TensorMap.Rank
    -> (IndexMap.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> TensorMap.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_20} False True} TensorMap.mkTensorfromF
                                                                      @ 1
                                                                      @ 1
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ GHC.Real.Rational
                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                      GHC.Real.$fOrdRatio_$s$fEqRatio) -}
540b50c42959f441b497d87587ea78de
  delta_8 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_2, BasicTensorsMap.delta_2)) -}
e806d51edc978ec5c18be3c63bceb30c
  delta_9 :: TensorMap.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.delta_9} True True} BasicTensorsMap.delta_12
                                                                    BasicTensorsMap.delta_11
                                                                    BasicTensorsMap.delta_9F) -}
6d5f3fa604ce17ca3b318b2e0d86a9c7
  delta_9F :: IndexMap.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLS(S)S(S)LL),1*U(A,A,A,A,1*U(1*U),1*U(1*U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 1 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww5 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 case ww6 of ww11 { IndexMap.UnsafemkInd ww12 ->
                 let {
                   ds :: IndexMap.Ind 1 IndexMap.Uind_9
                   = IndexMap.UnsafemkInd @ 1 @ IndexMap.Uind_9 ww10
                 } in
                 {__scc {main:BasicTensorsMap.delta_9F} True False} case {__scc {main:BasicTensorsMap.delta_9F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} ds of wild { IndexMap.UnsafemkInd s ->
                                                                    case {__scc {main:BasicTensorsMap.delta_9F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                           @ IndexMap.Uind_9
                                                                                                                                                                           0#
                                                                                                                                                                           s of wild1 {
                                                                      GHC.Base.Nothing
                                                                      -> case Data.Maybe.fromJust1
                                                                         ret_ty (GHC.Real.Ratio
                                                                                   GHC.Integer.Type.Integer)
                                                                         of {}
                                                                      GHC.Base.Just x
                                                                      -> case {__scc {main:BasicTensorsMap.delta_9F} False True} {__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                        @ IndexMap.Uind_9
                                                                                                                                                                                                                                                                        x of a# { DEFAULT ->
                                                                         case {__scc {main:BasicTensorsMap.delta_9F} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                @ IndexMap.Lind_9
                                                                                                                                                                                0#
                                                                                                                                                                                ww12 of wild2 {
                                                                           GHC.Base.Nothing
                                                                           -> case Data.Maybe.fromJust1
                                                                              ret_ty (GHC.Real.Ratio
                                                                                        GHC.Integer.Type.Integer)
                                                                              of {}
                                                                           GHC.Base.Just x1
                                                                           -> case {__scc {main:BasicTensorsMap.delta_9F} False True} {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                    @ IndexMap.Lind_9
                                                                                                                                                                                    x1 of a#1 { DEFAULT ->
                                                                              case {__scc {main:BasicTensorsMap.delta_9F} False True} GHC.Prim.==#
                                                                                                                                        a#
                                                                                                                                        a#1 of lwild {
                                                                                DEFAULT
                                                                                -> GHC.Real.:%
                                                                                     @ GHC.Integer.Type.Integer
                                                                                     BasicTensorsMap.$smkTensorfromFZeros4
                                                                                     GHC.Real.$fEnumRatio1
                                                                                1#
                                                                                -> GHC.Real.:%
                                                                                     @ GHC.Integer.Type.Integer
                                                                                     BasicTensorsMap.$smkTensorfromFZeros7
                                                                                     GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
835c06653e123defbaa9c31ac001ed0d
  epsilon :: TensorMap.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.epsilon} True True} BasicTensorsMap.epsilon5
                                                                    BasicTensorsMap.epsilon3
                                                                    BasicTensorsMap.epsilon_F) -}
ff697fd990813f4c6e5527dbad5fd90a
  epsilon1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
392f3be2456ba88520cdc31fb636e013
  epsilon2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
f0623de00c68c956058d64a9ad6a9e52
  epsilon3 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.epsilon4)) -}
6910bc55871d108d0b8235d1a0107ddd
  epsilon4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
471ce5c1398d30dcadc715ddb7f7a44f
  epsilon5 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.epsilon} False True} TensorMap.mkTensorfromF
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 4
                                                                     @ GHC.Real.Rational
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.$smkTensorfromFZeros3
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                     BasicTensorsMap.epsilon6
                                                                       `cast`
                                                                     (Sym (GHC.TypeNats.N:SNat[0]
                                                                               <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                     GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                     GHC.Real.$fOrdRatio_$s$fEqRatio) -}
8982d98d7ffee4cb6f4f17b615f79fcd
  epsilon6 :: GHC.Natural.Natural
  {- Unfolding: (case BasicTensorsMap.epsilon7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt2
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt2)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt2 of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt2
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt2 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
cac531e784cd1838b44015b9f703d388
  epsilon7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
be4191941982d2093da6bf868a4f5617
  epsilon_F :: IndexMap.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(S)),1*U(A,A,A,A,A,A,A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 0 0 4) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww8 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 case BasicTensorsMap.$wepsilon_F ww10 of ww11 { (#,#) ww12 ww13 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww12 ww13 } } }) -}
e86763d73be79e33bc63dd49094c2cf9
  eta :: TensorMap.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.eta} True True} BasicTensorsMap.eta2
                                                                BasicTensorsMap.eta1
                                                                BasicTensorsMap.eta_F) -}
01cde7803be70ff353d615c8a38bc318
  eta1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.epsilon2)) -}
8b5bf18bb94eea388f6100c3e0206d24
  eta2 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.eta} False True} TensorMap.mkTensorfromF
                                                                 @ 0
                                                                 @ 0
                                                                 @ 0
                                                                 @ 0
                                                                 @ 0
                                                                 @ 0
                                                                 @ 0
                                                                 @ 2
                                                                 @ GHC.Real.Rational
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                 BasicTensorsMap.$smkTensorfromFZeros1
                                                                   `cast`
                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                           <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                 GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                 GHC.Real.$fOrdRatio_$s$fEqRatio) -}
5582be7d01704656eab53663db8228c0
  etaAbs ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 0 0 0 0 0 1 0 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case BasicTensorsMap.$wetaAbs w of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
cf0bc424c8f3801009d9a3871610776e
  etaAbs1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
335dbf166ed1e933834a905d96131cfb
  etaAbs2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_2, BasicTensorsMap.delta_2)) -}
c1ce386a1fabb7c0dd200c0b9bef4bda
  eta_F :: IndexMap.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(S)),1*U(A,A,A,A,A,A,A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 0 0 2) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww8 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 {__scc {main:BasicTensorsMap.eta_F} True False} case {__scc {main:BasicTensorsMap.eta_F} False True} {__scc {main:BasicTensorsMap.eta_F.x} True True} let {
                                                                                                                                                                         a :: IndexMap.Lind_3
                                                                                                                                                                         = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                              @ IndexMap.Lind_3
                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                              ww10 of wild1 {
                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                              @ IndexMap.Lind_3
                                                                                                                                                                                                                         GHC.Base.Just x
                                                                                                                                                                                                                         -> x }
                                                                                                                                                                       } in
                                                                                                                                                                       {__scc {main:IndexMap.fromEnum} True True} case a of wild {
                                                                                                                                                                                                                    IndexMap.L0_3
                                                                                                                                                                                                                    -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                    IndexMap.L1_3
                                                                                                                                                                                                                    -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                    IndexMap.L2_3
                                                                                                                                                                                                                    -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                    IndexMap.L3_3
                                                                                                                                                                                                                    -> BasicTensorsMap.epsilon1 } of wild { GHC.Types.I# x ->
                                                                 case {__scc {main:BasicTensorsMap.eta_F} False True} {__scc {main:BasicTensorsMap.eta_F.y} True True} let {
                                                                                                                                                                         a :: IndexMap.Lind_3
                                                                                                                                                                         = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                              @ IndexMap.Lind_3
                                                                                                                                                                                                                              1#
                                                                                                                                                                                                                              ww10 of wild1 {
                                                                                                                                                                                                                         GHC.Base.Nothing
                                                                                                                                                                                                                         -> Data.Maybe.fromJust1
                                                                                                                                                                                                                              @ IndexMap.Lind_3
                                                                                                                                                                                                                         GHC.Base.Just x1
                                                                                                                                                                                                                         -> x1 }
                                                                                                                                                                       } in
                                                                                                                                                                       {__scc {main:IndexMap.fromEnum} True True} case a of wild1 {
                                                                                                                                                                                                                    IndexMap.L0_3
                                                                                                                                                                                                                    -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                    IndexMap.L1_3
                                                                                                                                                                                                                    -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                    IndexMap.L2_3
                                                                                                                                                                                                                    -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                    IndexMap.L3_3
                                                                                                                                                                                                                    -> BasicTensorsMap.epsilon1 } of wild1 { GHC.Types.I# y ->
                                                                 case {__scc {main:BasicTensorsMap.eta_F} False True} GHC.Prim.==#
                                                                                                                        x
                                                                                                                        y of lwild {
                                                                   DEFAULT
                                                                   -> case {__scc {main:BasicTensorsMap.eta_F} False True} GHC.Prim.==#
                                                                                                                             x
                                                                                                                             y of lwild1 {
                                                                        DEFAULT
                                                                        -> GHC.Real.:%
                                                                             @ GHC.Integer.Type.Integer
                                                                             BasicTensorsMap.$smkTensorfromFZeros4
                                                                             GHC.Real.$fEnumRatio1
                                                                        1#
                                                                        -> GHC.Real.:%
                                                                             @ GHC.Integer.Type.Integer
                                                                             BasicTensorsMap.eta_dt
                                                                             GHC.Real.$fEnumRatio1 }
                                                                   1#
                                                                   -> case x of wild2 {
                                                                        DEFAULT
                                                                        -> case {__scc {main:BasicTensorsMap.eta_F} False True} GHC.Prim.==#
                                                                                                                                  wild2
                                                                                                                                  y of lwild1 {
                                                                             DEFAULT
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  BasicTensorsMap.$smkTensorfromFZeros4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             1#
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  BasicTensorsMap.eta_dt
                                                                                  GHC.Real.$fEnumRatio1 }
                                                                        0#
                                                                        -> GHC.Real.:%
                                                                             @ GHC.Integer.Type.Integer
                                                                             BasicTensorsMap.$smkTensorfromFZeros7
                                                                             GHC.Real.$fEnumRatio1 } } } } } }) -}
aa8ebfc1b8564ffe1810ef13966fea48
  eta_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
2534ceb272666da3121d3bc559e9bf50
  flatArea ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 0 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case BasicTensorsMap.$wflatArea w of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
3c6e09d4d7855b368860e765539edbd8
  flatArea1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.epsilon2,
                  BasicTensorsMap.epsilon2)) -}
881acba1e16b06ff8f29e9a0d6557d62
  flatArea2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.epsilon1,
                  BasicTensorsMap.epsilon1)) -}
fedc77ba3f4f2eaeeda8e7d5ba6bd018
  flatAreaMap ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> Data.IntMap.Internal.IntMap GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 {__scc {main:BasicTensorsMap.flatAreaMap} True True} let {
                                                                        flatAreaT :: TensorMap.Tensor
                                                                                       0
                                                                                       1
                                                                                       0
                                                                                       0
                                                                                       0
                                                                                       0
                                                                                       0
                                                                                       0
                                                                                       GHC.Real.Rational
                                                                        = {__scc {main:BasicTensorsMap.flatAreaMap.flatAreaT} True True} BasicTensorsMap.flatArea
                                                                                                                                           map1
                                                                      } in
                                                                      Data.IntMap.Strict.fromList1
                                                                        @ GHC.Types.Int
                                                                        (Data.IntMap.Internal.Nil
                                                                           @ GHC.Types.Int)
                                                                        (BasicTensorsMap.flatAreaMap_go1
                                                                           1#
                                                                           ({__scc {main:BasicTensorsMap.flatAreaMap.valList} True True} GHC.Base.map
                                                                                                                                           @ (IndexMap.Uinds_20
                                                                                                                                                0,
                                                                                                                                              IndexMap.Linds_20
                                                                                                                                                1,
                                                                                                                                              IndexMap.Uinds_19
                                                                                                                                                0,
                                                                                                                                              IndexMap.Linds_19
                                                                                                                                                0,
                                                                                                                                              IndexMap.Uinds_9
                                                                                                                                                0,
                                                                                                                                              IndexMap.Linds_9
                                                                                                                                                0,
                                                                                                                                              IndexMap.Uinds_3
                                                                                                                                                0,
                                                                                                                                              IndexMap.Linds_3
                                                                                                                                                0)
                                                                                                                                           @ GHC.Types.Int
                                                                                                                                           (\ (x :: (IndexMap.Uinds_20
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Linds_20
                                                                                                                                                       1,
                                                                                                                                                     IndexMap.Uinds_19
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Linds_19
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Uinds_9
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Linds_9
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Uinds_3
                                                                                                                                                       0,
                                                                                                                                                     IndexMap.Linds_3
                                                                                                                                                       0)) ->
                                                                                                                                            {__scc {main:TensorMap.getVal} True False} case flatAreaT of wild { TensorMap.Tensor map2 ->
                                                                                                                                                                                       case {__scc {main:TensorMap.getVal} False True} BasicTensorsMap.$smember1
                                                                                                                                                                                                                                         @ (GHC.Real.Ratio
                                                                                                                                                                                                                                              GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                         x
                                                                                                                                                                                                                                         map2 of wild1 {
                                                                                                                                                                                         GHC.Types.False
                                                                                                                                                                                         -> BasicTensorsMap.flatAreaMap1
                                                                                                                                                                                              TensorMap.cyclicSymTensor1
                                                                                                                                                                                              GHC.Real.$fEnumRatio1
                                                                                                                                                                                         GHC.Types.True
                                                                                                                                                                                         -> case {__scc {main:TensorMap.getVal} False True} BasicTensorsMap.$sfind9
                                                                                                                                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                              x
                                                                                                                                                                                                                                              map2 of wild2 { GHC.Real.:% x1 y ->
                                                                                                                                                                                            BasicTensorsMap.flatAreaMap1
                                                                                                                                                                                              x1
                                                                                                                                                                                              y } } })
                                                                                                                                           BasicTensorsMap.flatAreaMap_inds))) -}
f78a481732f20b6bfc0249dfc57f8d13
  flatAreaMap1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,U><S,U>m,
     Unfolding: (\ (x1 :: GHC.Integer.Type.Integer)[OneShot]
                   (y :: GHC.Integer.Type.Integer)[OneShot] ->
                 case GHC.Integer.Type.eqInteger#
                        y
                        BasicTensorsMap.$smkTensorfromFZeros4 of wild1 {
                   DEFAULT
                   -> case GHC.Integer.Type.quotRemInteger
                             x1
                             y of ds { (#,#) ipv ipv1 ->
                      case GHC.Integer.Type.integerToInt ipv of wild { DEFAULT ->
                      GHC.Types.I# wild } }
                   1# -> case GHC.Real.divZeroError ret_ty GHC.Types.Int of {} }) -}
2c9b4ab3df584f4f768f4b3110b5cc3c
  flatAreaMap_go ::
    GHC.Prim.Int#
    -> [(IndexMap.Uinds_20 0, IndexMap.Linds_20 1, IndexMap.Uinds_19 0,
         IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 0,
         IndexMap.Uinds_3 0, IndexMap.Linds_3 0)]
  {- Arity: 1, Strictness: <L,U>m2 -}
a243b67205611885d66425ca620d9fd7
  flatAreaMap_go1 ::
    GHC.Prim.Int#
    -> [GHC.Types.Int] -> [(Data.IntSet.Internal.Key, GHC.Types.Int)]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
348438bca43d63d4126fb8979db8faf9
  flatAreaMap_inds :: [IndexMap.Index 0 1 0 0 0 0 0 0]
  {- Unfolding: ({__scc {main:BasicTensorsMap.flatAreaMap} False True} {__scc {main:BasicTensorsMap.flatAreaMap.inds} True True} BasicTensorsMap.flatAreaMap_go
                                                                                                                                   0#) -}
08e3a69bff1b58a6c6bd743b453b25a8
  flatAreaST :: TensorMap.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.flatAreaST} True True} {__scc {main:BasicTensorsMap.flatAreaST.etaProd1} True False} case BasicTensorsMap.flatAreaST5
                                                                                                                                          `cast`
                                                                                                                                        (TensorMap.Tensor
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (Add0L (<0>_N))
                                                                                                                                           (AddDef (<2>_N,
                                                                                                                                                    <2>_N))
                                                                                                                                           <GHC.Real.Rational>_R)_R of ww { TensorMap.Tensor ww1 ->
                                                                                                                                   case {__scc {main:BasicTensorsMap.flatAreaST.etaProd1} False True} TensorMap.$wtensorTranspose
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 4
                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                        BasicTensorsMap.flatAreaST4
                                                                                                                                                                                                        BasicTensorsMap.flatAreaST3
                                                                                                                                                                                                        ww1 of ww2 { Unit# ww3 ->
                                                                                                                                   {__scc {main:BasicTensorsMap.flatAreaST.etaProd2} True False} case {__scc {main:BasicTensorsMap.flatAreaST.etaProd2} False True} TensorMap.$wtensorTranspose
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 4
                                                                                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                                                                                      BasicTensorsMap.flatAreaST4
                                                                                                                                                                                                                                                                      BasicTensorsMap.flatAreaST2
                                                                                                                                                                                                                                                                      ww1 of ww4 { Unit# ww5 ->
                                                                                                                                                                                                 case {__scc {main:BasicTensorsMap.flatAreaST.etaProd2} False True} TensorMap.$wtensorTranspose
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                                                                                      @ 4
                                                                                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                                                                                      BasicTensorsMap.flatAreaST4
                                                                                                                                                                                                                                                                      BasicTensorsMap.flatAreaST1
                                                                                                                                                                                                                                                                      ww5 of ww6 { Unit# ww7 ->
                                                                                                                                                                                                 case {__scc {main:TensorMap.tensorSub} True True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 4
                                                                                                                                                                                                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                                              ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.flatAreaST_go8
                                                                                                                                                                                                                                                                                                                                                                                                                                          ww7) of ww8 { TensorMap.Tensor ww9 ->
                                                                                                                                                                                                 case {__scc {main:TensorMap.tensorSub} False True} {__scc {main:TensorMap.tensorAdd} True False} TensorMap.Tensor
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                    @ 4
                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                    ({__scc {main:TensorMap.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                     @ (IndexMap.Index
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                          4)
                                                                                                                                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                     (TensorMap.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                        @ 4)
                                                                                                                                                                                                                                                                                                                                                     BasicTensorsMap.flatAreaST_lvl24
                                                                                                                                                                                                                                                                                                                                                     ww3
                                                                                                                                                                                                                                                                                                                                                     ww9) of ww10 { TensorMap.Tensor ww11 ->
                                                                                                                                                                                                 case BasicTensorsMap.epsilon of ww12 { TensorMap.Tensor ww13 ->
                                                                                                                                                                                                 case {__scc {main:TensorMap.tensorSub} True True} {__scc {main:TensorMap.tensorSMult} True False} {__scc {main:TensorMap.tensorSMult} False True} {__scc {main:TensorMap.fmap} True False} TensorMap.Tensor
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                                                                              @ 4
                                                                                                                                                                                                                                                                                                                                                                                              @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                                              ({__scc {main:TensorMap.fmap} False True} BasicTensorsMap.flatAreaST_go8
                                                                                                                                                                                                                                                                                                                                                                                                                                          ww13) of ww14 { TensorMap.Tensor ww15 ->
                                                                                                                                                                                                 {__scc {main:TensorMap.tensorSub} False True} {__scc {main:TensorMap.tensorAdd} True False} TensorMap.Tensor
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 0
                                                                                                                                                                                                                                                                                               @ 4
                                                                                                                                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                               ({__scc {main:TensorMap.tensorAdd} False True} Data.Map.Strict.Internal.unionWith
                                                                                                                                                                                                                                                                                                                                                @ (IndexMap.Index
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     0
                                                                                                                                                                                                                                                                                                                                                     4)
                                                                                                                                                                                                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                (TensorMap.aSymTensor3
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                                                                                                                                   @ 4)
                                                                                                                                                                                                                                                                                                                                                BasicTensorsMap.flatAreaST_lvl24
                                                                                                                                                                                                                                                                                                                                                ww11
                                                                                                                                                                                                                                                                                                                                                ww15) } } } } } } } }) -}
16d0cc4820986d8bbedb377036972516
  flatAreaST1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_2, BasicTensorsMap.epsilon1)) -}
000ffc05728e8d1c77ca1f6cbefc6c9e
  flatAreaST2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.epsilon2,
                  BasicTensorsMap.epsilon1)) -}
9f8950004681903ddcf9b3b28f675313
  flatAreaST3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_2, BasicTensorsMap.epsilon2)) -}
b216002e1fdabc8f07c443b6193ba92e
  flatAreaST4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
e9f2518014e82512aac2d712d21f7811
  flatAreaST5 ::
    TensorMap.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 2)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.flatAreaST} False True} {__scc {main:BasicTensorsMap.flatAreaST.etaProd} True True} TensorMap.tensorProductWith
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 0
                                                                                                                                    @ 2
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                    BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                      `cast`
                                                                                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                              <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                    GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                    BasicTensorsMap.eta
                                                                                                                                    BasicTensorsMap.eta) -}
def8087b54d3a7e7c3b67cac9b6ccff6
  flatAreaST_go8 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (IndexMap.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
636203347b062bb6c657602d1ed61e9c
  flatAreaST_lvl24 ::
    GHC.Real.Rational -> GHC.Real.Rational -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorMap.tensorAdd} False True} GHC.Real.$fEnumRatio_$s$c+) -}
79a38bf84dc22a2afabfcc0be1c9f9f9
  interArea ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case BasicTensorsMap.$winterArea w w1 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
1ee88b30a2571b62c11f5eda69eaf0bc
  interArea_go8 ::
    Data.Map.Internal.Map
      (IndexMap.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (IndexMap.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
44f8307f2d7b019180e6af8089b585c8
  interAreanoFactor ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 1 1 0 0 0 0 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case BasicTensorsMap.$winterAreanoFactor w w1 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
65656631cbff8f878657ee6d2946186f
  interEqn1_1 ::
    TensorMap.Tensor
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.interEqn1_2} False True} {__scc {main:BasicTensorsMap.interEqn1_2.int2} True True} case (TensorMap.tensorProductWith
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 0
                                                                                                                                         @ 1
                                                                                                                                         @ 1
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                           `cast`
                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                         GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                         BasicTensorsMap.delta_3
                                                                                                                                         BasicTensorsMap.delta_3)
                                                                                                                                        `cast`
                                                                                                                                      (TensorMap.Tensor
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (Add0L (<0>_N))
                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                  <1>_N))
                                                                                                                                         (AddDef (<1>_N,
                                                                                                                                                  <1>_N))
                                                                                                                                         <GHC.Real.Rational>_R)_R of ww { TensorMap.Tensor ww1 ->
                                                                                                                                 case TensorMap.$wtensorTranspose
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 0
                                                                                                                                        @ 2
                                                                                                                                        @ 2
                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                        BasicTensorsMap.flatAreaST4
                                                                                                                                        BasicTensorsMap.interEqn1_5
                                                                                                                                        ww1 of ww2 { Unit# ww3 ->
                                                                                                                                 TensorMap.tensorProductWith
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 2
                                                                                                                                   @ 2
                                                                                                                                   @ 1
                                                                                                                                   @ 1
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   @ 0
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                     `cast`
                                                                                                                                   (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                   GHC.Real.$fFractionalRatio_$s$c*
                                                                                                                                   (TensorMap.Tensor
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 0
                                                                                                                                      @ 2
                                                                                                                                      @ 2
                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                      ww3)
                                                                                                                                   BasicTensorsMap.delta_20 } }) -}
a738333442ab921c9b51150541fa1787
  interEqn1_2 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 1 1 0 0 0 0 2 2 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 case BasicTensorsMap.$winterEqn1_2 w w1 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww1 }) -}
82a38c4c63b700b52d14eba03dd074ef
  interEqn1_2_go8 ::
    Data.Map.Internal.Map
      (IndexMap.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (IndexMap.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
67945f4be33a89db40b750dc65996e07
  interEqn1_3 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20)
                   (w2 :: Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w3 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case BasicTensorsMap.$winterEqn1_3 w w1 w2 w3 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
f8b6bb7d1e15f6728430b74c9b73b49c
  interEqn1_3_go8 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (IndexMap.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U> -}
5de589e5cc632d7eeecb1e5bcf9101e8
  interEqn1_5 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_2)) -}
76789677e5fb2069e0ed107d6735e322
  interF_IArea ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> IndexMap.Index 1 0 0 0 0 0 0 4 -> GHC.Real.Rational
  {- Arity: 2,
     Strictness: <L,1*U><S(LLLLLLLS(S)),1*U(1*U(1*U),A,A,A,A,A,A,1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 4) IndexMap.Uind_20)
                   (w1 :: IndexMap.Index 1 0 0 0 0 0 0 4) ->
                 case w1 of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww8 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 BasicTensorsMap.$winterF_IArea w ww1 ww10 } }) -}
3c11587f184b1c60667cbcd42e631209
  interF_IArea1 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   BasicTensorsMap.$smkTensorfromFZeros4
                   GHC.Real.$fEnumRatio1) -}
f5ebc646628bd1fb4ba16b01aad01ebd
  interI_1 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   BasicTensorsMap.$smkTensorfromFZeros7
                   GHC.Real.$fEnumRatio1) -}
63bb9016743725567948be4e564b72d0
  interI_2 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> TensorMap.Tensor 0 0 0 0 1 0 0 2 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
f1a98d5c58ea827380e4d3967e69fed0
  interI_3 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 3) IndexMap.Uind_19
    -> TensorMap.Tensor 0 0 1 0 0 0 0 3 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (IndexMap.Linds_3 3) IndexMap.Uind_19) ->
                 {__scc {main:BasicTensorsMap.interI_3} True True} BasicTensorsMap.interI_6
                                                                     BasicTensorsMap.interI_5
                                                                     (\ (ds :: (IndexMap.Uinds_20 0,
                                                                                IndexMap.Linds_20 0,
                                                                                IndexMap.Uinds_19 1,
                                                                                IndexMap.Linds_19 0,
                                                                                IndexMap.Uinds_9 0,
                                                                                IndexMap.Linds_9 0,
                                                                                IndexMap.Uinds_3 0,
                                                                                IndexMap.Linds_3
                                                                                  3)) ->
                                                                      {__scc {main:BasicTensorsMap.interF_I3} True True} case ds of wild { (,,,,,,,) ds1 ds2 x ds3 ds4 ds5 ds6 y ->
                                                                                                                         {__scc {main:IndexMap.==} True False} {__scc {main:BasicTensorsMap.interF_I3.indI} True False} case y of ww { IndexMap.UnsafemkInd ww1 ->
                                                                                                                                                                                                                        case {__scc {main:BasicTensorsMap.interF_I3.indI} False True} {__scc {main:IndexMap.sortInd} True False} BasicTensorsMap.$wpoly_go2
                                                                                                                                                                                                                                                                                                                                   @ IndexMap.Uind_19
                                                                                                                                                                                                                                                                                                                                   ({__scc {main:IndexMap.sortInd} False True} Data.IntMap.Strict.fromList1
                                                                                                                                                                                                                                                                                                                                                                                 @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                 (Data.IntMap.Internal.Nil
                                                                                                                                                                                                                                                                                                                                                                                    @ IndexMap.Lind_3)
                                                                                                                                                                                                                                                                                                                                                                                 (IndexMap.getRangeList2
                                                                                                                                                                                                                                                                                                                                                                                    @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                                                                                                                                                                    ({__scc {main:IndexMap.sortInd.elemsSort} True True} Data.OldList.sortBy
                                                                                                                                                                                                                                                                                                                                                                                                                                           @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                                           IndexMap.$fOrdLind_3_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                                                                           (Data.IntMap.Internal.elems
                                                                                                                                                                                                                                                                                                                                                                                                                                              @ IndexMap.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                                              ww1))))
                                                                                                                                                                                                                                                                                                                                   map1 of x1 { DEFAULT ->
                                                                                                                                                                                                                        case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                     @ IndexMap.Uind_19
                                                                                                                                                                                                                                                                     x1 of a# { DEFAULT ->
                                                                                                                                                                                                                        case {__scc {main:BasicTensorsMap.interF_I3.xVal} True True} {__scc {main:IndexMap.getValInd} True False} x of wild1 { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                        case {__scc {main:BasicTensorsMap.interF_I3.xVal} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                     @ IndexMap.Uind_19
                                                                                                                                                                                                                                                                                                                                     0#
                                                                                                                                                                                                                                                                                                                                     s of wild2 {
                                                                                                                                                                                                                          GHC.Base.Nothing
                                                                                                                                                                                                                          -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                             ret_ty GHC.Real.Rational
                                                                                                                                                                                                                             of {}
                                                                                                                                                                                                                          GHC.Base.Just x2
                                                                                                                                                                                                                          -> case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                          @ IndexMap.Uind_19
                                                                                                                                                                                                                                                                          x2 of b# { DEFAULT ->
                                                                                                                                                                                                                             case {__scc {main:IndexMap.==} False True} GHC.Prim.tagToEnum#
                                                                                                                                                                                                                                                                          @ GHC.Types.Bool
                                                                                                                                                                                                                                                                          (GHC.Prim.==#
                                                                                                                                                                                                                                                                             a#
                                                                                                                                                                                                                                                                             b#) of wild3 {
                                                                                                                                                                                                                               GHC.Types.False
                                                                                                                                                                                                                               -> BasicTensorsMap.interF_IArea1
                                                                                                                                                                                                                               GHC.Types.True
                                                                                                                                                                                                                               -> BasicTensorsMap.interI_1 } } } } } } } })) -}
7b96b94662a00c3028ded4cbf0748251
  interI_5 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_2, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.epsilon1)) -}
98d5a58e421b6be9c4d9e3f31a40801a
  interI_6 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 1 0 0 0 0 3 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 1 0 0 0 0 3 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.interI_3} False True} TensorMap.mkTensorfromF
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 3
                                                                      @ GHC.Real.Rational
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros6
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$smkTensorfromFZeros3
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                      BasicTensorsMap.$stensorContractWith_1
                                                                        `cast`
                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                <3>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <3>_N)
                                                                      GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                      GHC.Real.$fOrdRatio_$s$fEqRatio) -}
c682f8c4ac19f236d12d06faf6ec3889
  interI_Area ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> TensorMap.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (IndexMap.Linds_3 4) IndexMap.Uind_20) ->
                 {__scc {main:BasicTensorsMap.interI_Area} True True} BasicTensorsMap.interI_Area2
                                                                        BasicTensorsMap.interI_Area1
                                                                        (BasicTensorsMap.interF_IArea
                                                                           map1)) -}
b43dfddb25be0eb86b0858eec53175a2
  interI_Area1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_2, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.epsilon4)) -}
005794ee3f4dd4bcfea6cf1599490954
  interI_Area2 ::
    TensorMap.Rank
    -> (IndexMap.Index 1 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> TensorMap.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.interI_Area} False True} TensorMap.mkTensorfromF
                                                                         @ 1
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 0
                                                                         @ 4
                                                                         @ GHC.Real.Rational
                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                         BasicTensorsMap.epsilon6
                                                                           `cast`
                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                   <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                         GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                         GHC.Real.$fOrdRatio_$s$fEqRatio) -}
aca22e65ca5db70f70637d604628e5c1
  interJ_2 ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 0 0 0 0 0 1 2 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
1a51272e7c25f6e3b9ca35286718f32f
  interJ_2noFactor ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 0 0 0 0 0 1 2 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
6325c2daf18b4d6b35ca76acdc37d76c
  interJ_3 ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 3) IndexMap.Lind_19
    -> TensorMap.Tensor 0 0 0 1 0 0 3 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
2a1fc206bff716587c8bf15772bf857b
  interJ_Area ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 0 1 0 0 0 0 4 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
fbaa39c885a4c3bf81183914793723e6
  interJ_AreanoFactor ::
    Data.Map.Internal.Map (IndexMap.Uinds_3 4) IndexMap.Lind_20
    -> TensorMap.Tensor 0 1 0 0 0 0 4 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (map1 :: Data.Map.Internal.Map
                              (IndexMap.Uinds_3 4) IndexMap.Lind_20) ->
                 {__scc {main:BasicTensorsMap.interJ_AreanoFactor} True True} BasicTensorsMap.interJ_AreanoFactor2
                                                                                BasicTensorsMap.interJ_AreanoFactor1
                                                                                (\ (ds :: (IndexMap.Uinds_20
                                                                                             0,
                                                                                           IndexMap.Linds_20
                                                                                             1,
                                                                                           IndexMap.Uinds_19
                                                                                             0,
                                                                                           IndexMap.Linds_19
                                                                                             0,
                                                                                           IndexMap.Uinds_9
                                                                                             0,
                                                                                           IndexMap.Linds_9
                                                                                             0,
                                                                                           IndexMap.Uinds_3
                                                                                             4,
                                                                                           IndexMap.Linds_3
                                                                                             0)) ->
                                                                                 {__scc {main:BasicTensorsMap.interF_JAreanoFactor} True True} case ds of wild { (,,,,,,,) ds1 x ds2 ds3 ds4 ds5 y ds6 ->
                                                                                                                                               case y of ww { IndexMap.UnsafemkInd ww1 ->
                                                                                                                                               case BasicTensorsMap.$w$sisZeroArea1
                                                                                                                                                      ww1 of wild1 {
                                                                                                                                                 GHC.Types.False
                                                                                                                                                 -> case {__scc {main:BasicTensorsMap.interF_JAreanoFactor.sortY} True True} BasicTensorsMap.$w$scanonicalizeArea
                                                                                                                                                                                                                               ww of ww2 { (#,#) ww3 ww4 ->
                                                                                                                                                    {__scc {main:IndexMap.==} True False} {__scc {main:BasicTensorsMap.interF_JAreanoFactor.indI} True False} case ww3 of ww5 { IndexMap.UnsafemkInd ww6 ->
                                                                                                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_JAreanoFactor.indI} False True} BasicTensorsMap.$wpoly_go5
                                                                                                                                                                                                                                                                                                                                         @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                                         ww6
                                                                                                                                                                                                                                                                                                                                         map1 of x1 { DEFAULT ->
                                                                                                                                                                                                                                                              case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                           @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                           x1 of a# { DEFAULT ->
                                                                                                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_JAreanoFactor.xVal} True True} {__scc {main:IndexMap.getValInd} True False} x of wild2 { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                              case {__scc {main:BasicTensorsMap.interF_JAreanoFactor.xVal} False True} {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                                                      @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                                                                                      0#
                                                                                                                                                                                                                                                                                                                                                                                      s of wild3 {
                                                                                                                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                                                                                                                -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                   ret_ty GHC.Real.Rational
                                                                                                                                                                                                                                                                   of {}
                                                                                                                                                                                                                                                                GHC.Base.Just x2
                                                                                                                                                                                                                                                                -> case {__scc {main:IndexMap.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                x2 of b# { DEFAULT ->
                                                                                                                                                                                                                                                                   case {__scc {main:IndexMap.==} False True} GHC.Prim.tagToEnum#
                                                                                                                                                                                                                                                                                                                @ GHC.Types.Bool
                                                                                                                                                                                                                                                                                                                (GHC.Prim.==#
                                                                                                                                                                                                                                                                                                                   a#
                                                                                                                                                                                                                                                                                                                   b#) of wild4 {
                                                                                                                                                                                                                                                                     GHC.Types.False
                                                                                                                                                                                                                                                                     -> BasicTensorsMap.interF_IArea1
                                                                                                                                                                                                                                                                     GHC.Types.True
                                                                                                                                                                                                                                                                     -> ww4 } } } } } } } }
                                                                                                                                                 GHC.Types.True
                                                                                                                                                 -> BasicTensorsMap.interF_IArea1 } } })) -}
35a499df646e016f966a03d57356c271
  interJ_AreanoFactor1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.epsilon4, BasicTensorsMap.delta_4)) -}
1ecb98ab1bda11cbbbdd5ce0a2e00932
  interJ_AreanoFactor2 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 1 0 0 0 0 4 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.interJ_AreanoFactor} False True} TensorMap.mkTensorfromF
                                                                                 @ 0
                                                                                 @ 1
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 0
                                                                                 @ 4
                                                                                 @ 0
                                                                                 @ GHC.Real.Rational
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros6
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 BasicTensorsMap.epsilon6
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                                                                                 BasicTensorsMap.$smkTensorfromFZeros3
                                                                                   `cast`
                                                                                 (Sym (GHC.TypeNats.N:SNat[0]
                                                                                           <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                 GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                                 GHC.Real.$fOrdRatio_$s$fEqRatio) -}
27453f03ab8c0e8eca89e5760e1d23bb
  interMetric ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case BasicTensorsMap.$winterMetric w w1 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
c4a3cb632e198fa866347521e6e9be46
  interMetricnoFactor ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> Data.Map.Internal.Map (IndexMap.Uinds_3 2) IndexMap.Lind_9
    -> TensorMap.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9)
                   (w1 :: Data.Map.Internal.Map
                            (IndexMap.Uinds_3 2) IndexMap.Lind_9) ->
                 case BasicTensorsMap.$winterMetricnoFactor
                        w
                        w1 of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   ww1 }) -}
46c8be72f2f873ef87087355759207b9
  invEta :: TensorMap.Tensor 0 0 0 0 0 0 2 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.invEta} True True} BasicTensorsMap.invEta2
                                                                   BasicTensorsMap.invEta1
                                                                   BasicTensorsMap.invEta_F) -}
84a7f5875547020cff244758e82da9c5
  invEta1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.epsilon2, BasicTensorsMap.delta_4)) -}
66030da8268df69cb076bee138552c63
  invEta2 ::
    TensorMap.Rank
    -> (IndexMap.Index 0 0 0 0 0 0 2 0 -> GHC.Real.Rational)
    -> TensorMap.Tensor 0 0 0 0 0 0 2 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:BasicTensorsMap.invEta} False True} TensorMap.mkTensorfromF
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 0
                                                                    @ 2
                                                                    @ 0
                                                                    @ GHC.Real.Rational
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros1
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                    BasicTensorsMap.$smkTensorfromFZeros3
                                                                      `cast`
                                                                    (Sym (GHC.TypeNats.N:SNat[0]
                                                                              <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                    GHC.Real.$fFractionalRatio_$s$fNumRatio
                                                                    GHC.Real.$fOrdRatio_$s$fEqRatio) -}
81d1685d4f956681e16c94c485eb528d
  invEtaAbs ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> TensorMap.Tensor 0 0 0 0 1 0 0 0 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (IndexMap.Linds_3 2) IndexMap.Uind_9) ->
                 case BasicTensorsMap.$winvEtaAbs w of ww { Unit# ww1 ->
                 TensorMap.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   ww1 }) -}
4fa0db597add1c6e3e23478077c63c0c
  invEta_F :: IndexMap.Index 0 0 0 0 0 0 2 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLS(S)L),1*U(A,A,A,A,A,A,1*U(U),A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 0 2 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case ww7 of ww9 { IndexMap.UnsafemkInd ww10 ->
                 {__scc {main:BasicTensorsMap.invEta_F} True False} case {__scc {main:BasicTensorsMap.invEta_F} False True} {__scc {main:BasicTensorsMap.invEta_F.x} True True} let {
                                                                                                                                                                                  a :: IndexMap.Uind_3
                                                                                                                                                                                  = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                       @ IndexMap.Uind_3
                                                                                                                                                                                                                                       0#
                                                                                                                                                                                                                                       ww10 of wild1 {
                                                                                                                                                                                                                                  GHC.Base.Nothing
                                                                                                                                                                                                                                  -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                       @ IndexMap.Uind_3
                                                                                                                                                                                                                                  GHC.Base.Just x
                                                                                                                                                                                                                                  -> x }
                                                                                                                                                                                } in
                                                                                                                                                                                {__scc {main:IndexMap.fromEnum} True True} case a of wild {
                                                                                                                                                                                                                             IndexMap.U0_3
                                                                                                                                                                                                                             -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                             IndexMap.U1_3
                                                                                                                                                                                                                             -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                             IndexMap.U2_3
                                                                                                                                                                                                                             -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                             IndexMap.U3_3
                                                                                                                                                                                                                             -> BasicTensorsMap.epsilon1 } of wild { GHC.Types.I# x ->
                                                                    case {__scc {main:BasicTensorsMap.invEta_F} False True} {__scc {main:BasicTensorsMap.invEta_F.y} True True} let {
                                                                                                                                                                                  a :: IndexMap.Uind_3
                                                                                                                                                                                  = {__scc {main:IndexMap.getValInd} True True} case Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                       @ IndexMap.Uind_3
                                                                                                                                                                                                                                       1#
                                                                                                                                                                                                                                       ww10 of wild1 {
                                                                                                                                                                                                                                  GHC.Base.Nothing
                                                                                                                                                                                                                                  -> Data.Maybe.fromJust1
                                                                                                                                                                                                                                       @ IndexMap.Uind_3
                                                                                                                                                                                                                                  GHC.Base.Just x1
                                                                                                                                                                                                                                  -> x1 }
                                                                                                                                                                                } in
                                                                                                                                                                                {__scc {main:IndexMap.fromEnum} True True} case a of wild1 {
                                                                                                                                                                                                                             IndexMap.U0_3
                                                                                                                                                                                                                             -> BasicTensorsMap.delta_4
                                                                                                                                                                                                                             IndexMap.U1_3
                                                                                                                                                                                                                             -> BasicTensorsMap.delta_2
                                                                                                                                                                                                                             IndexMap.U2_3
                                                                                                                                                                                                                             -> BasicTensorsMap.epsilon2
                                                                                                                                                                                                                             IndexMap.U3_3
                                                                                                                                                                                                                             -> BasicTensorsMap.epsilon1 } of wild1 { GHC.Types.I# y ->
                                                                    case {__scc {main:BasicTensorsMap.invEta_F} False True} GHC.Prim.==#
                                                                                                                              x
                                                                                                                              y of lwild {
                                                                      DEFAULT
                                                                      -> case {__scc {main:BasicTensorsMap.invEta_F} False True} GHC.Prim.==#
                                                                                                                                   x
                                                                                                                                   y of lwild1 {
                                                                           DEFAULT
                                                                           -> GHC.Real.:%
                                                                                @ GHC.Integer.Type.Integer
                                                                                BasicTensorsMap.$smkTensorfromFZeros4
                                                                                GHC.Real.$fEnumRatio1
                                                                           1#
                                                                           -> GHC.Real.:%
                                                                                @ GHC.Integer.Type.Integer
                                                                                BasicTensorsMap.eta_dt
                                                                                GHC.Real.$fEnumRatio1 }
                                                                      1#
                                                                      -> case x of wild2 {
                                                                           DEFAULT
                                                                           -> case {__scc {main:BasicTensorsMap.invEta_F} False True} GHC.Prim.==#
                                                                                                                                        wild2
                                                                                                                                        y of lwild1 {
                                                                                DEFAULT
                                                                                -> GHC.Real.:%
                                                                                     @ GHC.Integer.Type.Integer
                                                                                     BasicTensorsMap.$smkTensorfromFZeros4
                                                                                     GHC.Real.$fEnumRatio1
                                                                                1#
                                                                                -> GHC.Real.:%
                                                                                     @ GHC.Integer.Type.Integer
                                                                                     BasicTensorsMap.eta_dt
                                                                                     GHC.Real.$fEnumRatio1 }
                                                                           0#
                                                                           -> GHC.Real.:%
                                                                                @ GHC.Integer.Type.Integer
                                                                                BasicTensorsMap.$smkTensorfromFZeros7
                                                                                GHC.Real.$fEnumRatio1 } } } } } }) -}
b6312be40b4e362eec1fad67af85fa0e
  isZeroArea ::
    (GHC.Classes.Eq a, GHC.Classes.Ord a, GHC.Enum.Enum a) =>
    IndexMap.Ind 4 a -> GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,A><S(S(C(C(S))L)LLLLLLL),1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)><L,A><L,U(U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Classes.Ord a)
                   (w2 :: GHC.Enum.Enum a)
                   (w3 :: IndexMap.Ind 4 a) ->
                 BasicTensorsMap.$wisZeroArea @ a w1 w3) -}
bde09c9f25e362b500fa2a4bc0452ef5
  ivar1 ::
    TensorMap.Tensor 0 1 0 0 0 0 0 0 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ (Ivar.Ivar
                                                                                                                              GHC.Real.Rational)
                                                                                                                         BasicTensorsMap.ivar4) -}
470069a8d4b60d2550e8781aa9e11052
  ivar10 :: GHC.Real.Rational
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Ivar.constrAllIvars1
                   GHC.Real.$fEnumRatio1) -}
fe41f0597a8d735e9c32bf59ac8ef50e
  ivar11 :: GHC.Real.Rational
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Ivar.addIvar1
                   GHC.Real.$fEnumRatio1) -}
918ada08de494849f2533841a72f812b
  ivar12 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 1 0 0 0 1 0 0) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList2
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          (GHC.List.zip
                                                                                                                             @ (IndexMap.Uinds_20
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_20
                                                                                                                                  1,
                                                                                                                                IndexMap.Uinds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Uinds_9
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_9
                                                                                                                                  1,
                                                                                                                                IndexMap.Uinds_3
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_3
                                                                                                                                  0)
                                                                                                                             @ (Ivar.Ivar
                                                                                                                                  GHC.Real.Rational)
                                                                                                                             BasicTensorsMap.ivar3_indList
                                                                                                                             ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar13))) -}
1611ab7ee06c30c9cd8f6e98ea8c0dd0
  ivar13 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                           @ (IndexMap.Uinds_20
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_20
                                                                                                                                                                                                1,
                                                                                                                                                                                              IndexMap.Uinds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Uinds_9
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_9
                                                                                                                                                                                                1,
                                                                                                                                                                                              IndexMap.Uinds_3
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_3
                                                                                                                                                                                                0)
                                                                                                                                                                                           @ (Ivar.Ivar
                                                                                                                                                                                                GHC.Real.Rational)
                                                                                                                                                                                           BasicTensorsMap.ivar3F
                                                                                                                                                                                           BasicTensorsMap.ivar3_indList) -}
70e79cadd2f115743029dd395b8b5c1c
  ivar14 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
c2a479deb0dc1072fee23f66f25e5590
  ivar1F ::
    IndexMap.Index 0 1 0 0 0 0 0 0 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,1*U(1*U),A,A,A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 1 0 0 0 0 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 {__scc {main:BasicTensorsMap.ivar1F} True False} {__scc {main:BasicTensorsMap.ivar1F} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                (GHC.Real.:%
                                                                                                                                                                   @ GHC.Integer.Type.Integer
                                                                                                                                                                   Ivar.addIvar1
                                                                                                                                                                   GHC.Real.$fEnumRatio1)
                                                                                                                                                                ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww2 of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                          case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                              @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                              0#
                                                                                                                                                                                                                                                                                                              s of wild1 {
                                                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                                                            -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                               ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                         GHC.Real.Rational)
                                                                                                                                                                                                                                                               of {}
                                                                                                                                                                                                                                                            GHC.Base.Just x
                                                                                                                                                                                                                                                            -> case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                  @ IndexMap.Lind_20
                                                                                                                                                                                                                                                                                                                  x of a# { DEFAULT ->
                                                                                                                                                                                                                                                               Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                                                 (GHC.Prim.+#
                                                                                                                                                                                                                                                                    1#
                                                                                                                                                                                                                                                                    a#)
                                                                                                                                                                                                                                                                 (GHC.Real.:%
                                                                                                                                                                                                                                                                    @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                    Ivar.constrAllIvars1
                                                                                                                                                                                                                                                                    GHC.Real.$fEnumRatio1) } } }) }) -}
69c7868daa086e582f29f328cd851cce
  ivar1FM ::
    IndexMap.Index 0 0 0 0 0 1 0 0 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(1*U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 {__scc {main:BasicTensorsMap.ivar1FM} True False} {__scc {main:BasicTensorsMap.ivar1FM} False True} {__scc {main:Ivar.number2Ivar} True False} Ivar.Ivar
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  (GHC.Real.:%
                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                     Ivar.addIvar1
                                                                                                                                                                     GHC.Real.$fEnumRatio1)
                                                                                                                                                                  ({__scc {main:IndexMap.fromEnum} True False} {__scc {main:IndexMap.getValInd} True False} case ww6 of wild { IndexMap.UnsafemkInd s ->
                                                                                                                                                                                                                                                            case {__scc {main:IndexMap.getValInd} False True} Data.IntMap.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                                                                                s of wild1 {
                                                                                                                                                                                                                                                              GHC.Base.Nothing
                                                                                                                                                                                                                                                              -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                                 ret_ty (Data.IntMap.Internal.IntMap
                                                                                                                                                                                                                                                                           GHC.Real.Rational)
                                                                                                                                                                                                                                                                 of {}
                                                                                                                                                                                                                                                              GHC.Base.Just x
                                                                                                                                                                                                                                                              -> case {__scc {main:IndexMap.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                                    @ IndexMap.Lind_9
                                                                                                                                                                                                                                                                                                                    x of a# { DEFAULT ->
                                                                                                                                                                                                                                                                 Data.IntMap.Internal.Tip
                                                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                                                   (GHC.Prim.+#
                                                                                                                                                                                                                                                                      1#
                                                                                                                                                                                                                                                                      a#)
                                                                                                                                                                                                                                                                   (GHC.Real.:%
                                                                                                                                                                                                                                                                      @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                      Ivar.constrAllIvars1
                                                                                                                                                                                                                                                                      GHC.Real.$fEnumRatio1) } } }) }) -}
fd89442f6463d03f6ecd1ea4dcd8c1c8
  ivar1M ::
    TensorMap.Tensor 0 0 0 0 0 1 0 0 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1M} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          BasicTensorsMap.ivar1M1) -}
c7684876caa51a233c5c8e296832d41a
  ivar1M1 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 0 0 0 0 1 0 0) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList3
                                                                                                                           @ (Ivar.Ivar
                                                                                                                                GHC.Real.Rational)
                                                                                                                           (GHC.List.zip
                                                                                                                              @ (IndexMap.Uinds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_9
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_9
                                                                                                                                   1,
                                                                                                                                 IndexMap.Uinds_3
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_3
                                                                                                                                   0)
                                                                                                                              @ (Ivar.Ivar
                                                                                                                                   GHC.Real.Rational)
                                                                                                                              BasicTensorsMap.ivar1M_indList
                                                                                                                              ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar1M2))) -}
9039db4e96672341eac6b7cfa0dbab40
  ivar1M2 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                            @ (IndexMap.Uinds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_9
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_9
                                                                                                                                                                                                 1,
                                                                                                                                                                                               IndexMap.Uinds_3
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_3
                                                                                                                                                                                                 0)
                                                                                                                                                                                            @ (Ivar.Ivar
                                                                                                                                                                                                 GHC.Real.Rational)
                                                                                                                                                                                            BasicTensorsMap.ivar1FM
                                                                                                                                                                                            BasicTensorsMap.ivar1M_indList) -}
24e90fb39ccd40286e1b3be0cbe6177c
  ivar1M3 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
46efa6e6bcfe6f24c3c60cca07f678dc
  ivar1M_indList :: [IndexMap.Index 0 0 0 0 0 1 0 0]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.ivar1M3) -}
0f9e8b09e235f6e8182d4e850bf1787f
  ivar1_indList :: [IndexMap.Index 0 1 0 0 0 0 0 0]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.ivar6) -}
410720a9c8f29a9bbd507577778d2be4
  ivar2 ::
    TensorMap.Tensor 0 1 0 0 0 0 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ (Ivar.Ivar
                                                                                                                              GHC.Real.Rational)
                                                                                                                         BasicTensorsMap.ivar7) -}
e02ac3132517e3cadce4313374bc2552
  ivar2F ::
    IndexMap.Index 0 1 0 0 0 0 0 1 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,1*U(1*U),A,A,A,A,A,1*U(1*U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 1 0 0 0 0 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case BasicTensorsMap.$wivar2F ww2 ww8 of ww9 { (#,#) ww10 ww11 ->
                 Ivar.Ivar @ GHC.Real.Rational ww10 ww11 } }) -}
b39de2b38f93b91ad6ef4e9cc1d8a9b3
  ivar2FM ::
    IndexMap.Index 0 0 0 0 0 1 0 1 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(1*U),A,1*U(1*U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 1 0 1) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case BasicTensorsMap.$wivar2FM ww6 ww8 of ww9 { (#,#) ww10 ww11 ->
                 Ivar.Ivar @ GHC.Real.Rational ww10 ww11 } }) -}
34cedc2f70c587da9ea2472a7b78d258
  ivar2M ::
    TensorMap.Tensor 0 0 0 0 0 1 0 1 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2M} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ 0
                                                                                                                          @ 1
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          BasicTensorsMap.ivar2M1) -}
efe202af2dbd5fb2db4973447e9d1492
  ivar2M1 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 0 0 0 0 1 0 1) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList4
                                                                                                                           @ (Ivar.Ivar
                                                                                                                                GHC.Real.Rational)
                                                                                                                           (GHC.List.zip
                                                                                                                              @ (IndexMap.Uinds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_9
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_9
                                                                                                                                   1,
                                                                                                                                 IndexMap.Uinds_3
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_3
                                                                                                                                   1)
                                                                                                                              @ (Ivar.Ivar
                                                                                                                                   GHC.Real.Rational)
                                                                                                                              BasicTensorsMap.ivar2M_indList
                                                                                                                              ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar2M2))) -}
854cd452965c7c0d20a571a5ebb49758
  ivar2M2 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                            @ (IndexMap.Uinds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_9
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_9
                                                                                                                                                                                                 1,
                                                                                                                                                                                               IndexMap.Uinds_3
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_3
                                                                                                                                                                                                 1)
                                                                                                                                                                                            @ (Ivar.Ivar
                                                                                                                                                                                                 GHC.Real.Rational)
                                                                                                                                                                                            BasicTensorsMap.ivar2FM
                                                                                                                                                                                            BasicTensorsMap.ivar2M_indList) -}
344f20c4647cc7b8ac8bdd2d5edf07fb
  ivar2M3 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_2)) -}
ff3e562e788e3927267747f9c91a8d99
  ivar2M_indList :: [IndexMap.Index 0 0 0 0 0 1 0 1]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 1
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                         BasicTensorsMap.ivar2M3) -}
d533f95ffad96ea193be9e54abb1a3c2
  ivar2_indList :: [IndexMap.Index 0 1 0 0 0 0 0 1]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                        BasicTensorsMap.ivar9) -}
beae13e31158d00f4104747df61c3d32
  ivar3 ::
    TensorMap.Tensor 0 1 0 0 0 1 0 0 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ 1
                                                                                                                         @ 0
                                                                                                                         @ 0
                                                                                                                         @ (Ivar.Ivar
                                                                                                                              GHC.Real.Rational)
                                                                                                                         BasicTensorsMap.ivar12) -}
5dace77f05fff8c20fb24d1b87aad095
  ivar3F ::
    IndexMap.Index 0 1 0 0 0 1 0 0 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,1*U(1*U),A,A,A,1*U(1*U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 1 0 0 0 1 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case BasicTensorsMap.$wivar3F ww2 ww6 of ww9 { (#,#) ww10 ww11 ->
                 Ivar.Ivar @ GHC.Real.Rational ww10 ww11 } }) -}
e3811af0dc2f019344662c8969b3b74e
  ivar3FM ::
    IndexMap.Index 0 0 0 0 0 2 0 0 -> Ivar.Ivar GHC.Real.Rational
  {- Arity: 1, Strictness: <S,1*U(A,A,A,A,A,1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: IndexMap.Index 0 0 0 0 0 2 0 0) ->
                 case w of ww { (,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ->
                 case BasicTensorsMap.$wivar3FM ww6 of ww9 { (#,#) ww10 ww11 ->
                 Ivar.Ivar @ GHC.Real.Rational ww10 ww11 } }) -}
93f88a888beb01b4d4d34f7fbf7b0900
  ivar3M ::
    TensorMap.Tensor 0 0 0 0 0 2 0 0 (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3M} True True} {__scc {main:TensorMap.mkTensorfromFZeros} True False} TensorMap.Tensor
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ 2
                                                                                                                          @ 0
                                                                                                                          @ 0
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          BasicTensorsMap.ivar3M1) -}
20fd5cad581e3d91568b8fd8c25a22f1
  ivar3M1 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 0 0 0 0 2 0 0) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList5
                                                                                                                           @ (Ivar.Ivar
                                                                                                                                GHC.Real.Rational)
                                                                                                                           (GHC.List.zip
                                                                                                                              @ (IndexMap.Uinds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_20
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_19
                                                                                                                                   0,
                                                                                                                                 IndexMap.Uinds_9
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_9
                                                                                                                                   2,
                                                                                                                                 IndexMap.Uinds_3
                                                                                                                                   0,
                                                                                                                                 IndexMap.Linds_3
                                                                                                                                   0)
                                                                                                                              @ (Ivar.Ivar
                                                                                                                                   GHC.Real.Rational)
                                                                                                                              BasicTensorsMap.ivar3M_indList
                                                                                                                              ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar3M2))) -}
f6f902d0b8dfe53175d0998829b60739
  ivar3M2 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                            @ (IndexMap.Uinds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_20
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_19
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Uinds_9
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_9
                                                                                                                                                                                                 2,
                                                                                                                                                                                               IndexMap.Uinds_3
                                                                                                                                                                                                 0,
                                                                                                                                                                                               IndexMap.Linds_3
                                                                                                                                                                                                 0)
                                                                                                                                                                                            @ (Ivar.Ivar
                                                                                                                                                                                                 GHC.Real.Rational)
                                                                                                                                                                                            BasicTensorsMap.ivar3FM
                                                                                                                                                                                            BasicTensorsMap.ivar3M_indList) -}
5a09e83b03a4064518eb74ec329baf8e
  ivar3M3 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.epsilon2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
228b74eb667891eef6b1a0c87d8d396a
  ivar3M_indList :: [IndexMap.Index 0 0 0 0 0 2 0 0]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3M} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 2
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         @ 0
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros1
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                           `cast`
                                                                                                                                                                                         (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                   <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                         BasicTensorsMap.ivar3M3) -}
e1134ab7c63e7c1166b3f30b1bc96a2a
  ivar3_indList :: [IndexMap.Index 0 1 0 0 0 1 0 0]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar3} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.indList} True True} TensorMap.tensorIndList
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 1
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        @ 0
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros6
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.$smkTensorfromFZeros3
                                                                                                                                                                                          `cast`
                                                                                                                                                                                        (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                                                                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                                                                                        BasicTensorsMap.ivar14) -}
0214ab4db87f627660e4acbef7ded6dc
  ivar4 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 1 0 0 0 0 0 0) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          (GHC.List.zip
                                                                                                                             @ (IndexMap.Uinds_20
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_20
                                                                                                                                  1,
                                                                                                                                IndexMap.Uinds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Uinds_9
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_9
                                                                                                                                  0,
                                                                                                                                IndexMap.Uinds_3
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_3
                                                                                                                                  0)
                                                                                                                             @ (Ivar.Ivar
                                                                                                                                  GHC.Real.Rational)
                                                                                                                             BasicTensorsMap.ivar1_indList
                                                                                                                             ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar5))) -}
189f1ece57b8fb4c5d40eacba86e5d5e
  ivar5 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar1} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                           @ (IndexMap.Uinds_20
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_20
                                                                                                                                                                                                1,
                                                                                                                                                                                              IndexMap.Uinds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Uinds_9
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_9
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Uinds_3
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_3
                                                                                                                                                                                                0)
                                                                                                                                                                                           @ (Ivar.Ivar
                                                                                                                                                                                                GHC.Real.Rational)
                                                                                                                                                                                           BasicTensorsMap.ivar1F
                                                                                                                                                                                           BasicTensorsMap.ivar1_indList) -}
8e583222fa74bf07dfffdb5b8bafaf3e
  ivar6 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4)) -}
f0ff598aeed1bd5b23e9ba37e2a9c71b
  ivar7 ::
    Data.Map.Internal.Map
      (IndexMap.Index 0 1 0 0 0 0 0 1) (Ivar.Ivar GHC.Real.Rational)
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} BasicTensorsMap.$sfromList1
                                                                                                                          @ (Ivar.Ivar
                                                                                                                               GHC.Real.Rational)
                                                                                                                          (GHC.List.zip
                                                                                                                             @ (IndexMap.Uinds_20
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_20
                                                                                                                                  1,
                                                                                                                                IndexMap.Uinds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_19
                                                                                                                                  0,
                                                                                                                                IndexMap.Uinds_9
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_9
                                                                                                                                  0,
                                                                                                                                IndexMap.Uinds_3
                                                                                                                                  0,
                                                                                                                                IndexMap.Linds_3
                                                                                                                                  1)
                                                                                                                             @ (Ivar.Ivar
                                                                                                                                  GHC.Real.Rational)
                                                                                                                             BasicTensorsMap.ivar2_indList
                                                                                                                             ({__scc {main:TensorMap.mkTensorfromFZeros.valueList} True False} BasicTensorsMap.ivar8))) -}
ddbf3516e1388c6b4b50dab2263c8b73
  ivar8 :: [Ivar.Ivar GHC.Real.Rational]
  {- Unfolding: ({__scc {main:BasicTensorsMap.ivar2} False True} {__scc {main:TensorMap.mkTensorfromFZeros} False True} {__scc {main:TensorMap.mkTensorfromFZeros.valueList} False True} GHC.Base.map
                                                                                                                                                                                           @ (IndexMap.Uinds_20
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_20
                                                                                                                                                                                                1,
                                                                                                                                                                                              IndexMap.Uinds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_19
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Uinds_9
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_9
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Uinds_3
                                                                                                                                                                                                0,
                                                                                                                                                                                              IndexMap.Linds_3
                                                                                                                                                                                                1)
                                                                                                                                                                                           @ (Ivar.Ivar
                                                                                                                                                                                                GHC.Real.Rational)
                                                                                                                                                                                           BasicTensorsMap.ivar2F
                                                                                                                                                                                           BasicTensorsMap.ivar2_indList) -}
01abee4480b2a6f22aca81a81dac0abf
  ivar9 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((BasicTensorsMap.delta_4, BasicTensorsMap.delta_2,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_4,
                  BasicTensorsMap.delta_4, BasicTensorsMap.delta_2)) -}
eadd6b2bdd226ea39200083aa3284673
  symI_2 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 2) IndexMap.Uind_9
    -> TensorMap.Tensor 0 0 0 0 1 0 0 2 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
a23e554881c9f697e79f81049f03573b
  symI_3 ::
    Data.Map.Internal.Map (IndexMap.Linds_3 3) IndexMap.Uind_19
    -> TensorMap.Tensor 0 0 1 0 0 0 0 3 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
2942da4d4a9b9377b2379f0d7db611ae
  symI_Area ::
    Data.Map.Internal.Map (IndexMap.Linds_3 4) IndexMap.Uind_20
    -> TensorMap.Tensor 1 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
348f82f56aeacf4782bf49d662b182dc
  triangleMap1 :: [a] -> [(GHC.Types.Int, a)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ a (x :: [a]) ->
                 {__scc {main:BasicTensorsMap.symIndList.zList.\} True True} BasicTensorsMap.triangleMap5
                                                                               @ a
                                                                               0#
                                                                               x) -}
df5e4f9a57d1a71ca8067e229bb7a7e3
  triangleMap2 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.IntMap.Internal.IntMap a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),C(C1(U))),C(C1(U)),C(C1(U)),A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   $dOrd1 :: GHC.Classes.Ord (Data.IntMap.Internal.IntMap a)
                   = Data.IntMap.Internal.$fOrdIntMap @ a $dOrd
                 } in
                 {__scc {main:BasicTensorsMap.triangleMap2} True True} Data.Map.Strict.Internal.fromList
                                                                         @ (Data.IntMap.Internal.IntMap
                                                                              a)
                                                                         @ b
                                                                         $dOrd1
                                                                         (GHC.List.zip
                                                                            @ (Data.IntMap.Internal.IntMap
                                                                                 a)
                                                                            @ b
                                                                            ({__scc {main:BasicTensorsMap.symIndList} True True} GHC.Base.map
                                                                                                                                   @ [(Data.IntSet.Internal.Key,
                                                                                                                                       a)]
                                                                                                                                   @ (Data.IntMap.Internal.IntMap
                                                                                                                                        a)
                                                                                                                                   (Data.IntMap.Strict.fromList
                                                                                                                                      @ a)
                                                                                                                                   ({__scc {main:BasicTensorsMap.symIndList.zList} True True} GHC.Base.map
                                                                                                                                                                                                @ [a]
                                                                                                                                                                                                @ [(Data.IntSet.Internal.Key,
                                                                                                                                                                                                    a)]
                                                                                                                                                                                                (BasicTensorsMap.triangleMap1
                                                                                                                                                                                                   @ a)
                                                                                                                                                                                                (BasicTensorsMap.$wsymIndListL
                                                                                                                                                                                                   @ a
                                                                                                                                                                                                   $dEnum
                                                                                                                                                                                                   2#
                                                                                                                                                                                                   BasicTensorsMap.epsilon1)))
                                                                            (GHC.Enum.enumFrom
                                                                               @ b
                                                                               $dEnum1
                                                                               (GHC.Enum.toEnum
                                                                                  @ b
                                                                                  $dEnum1
                                                                                  BasicTensorsMap.delta_4)))) -}
719770f47b009cc408fbd644cb1c589c
  triangleMap3 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.IntMap.Internal.IntMap a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),C(C1(U))),C(C1(U)),C(C1(U)),A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   $dOrd1 :: GHC.Classes.Ord (Data.IntMap.Internal.IntMap a)
                   = Data.IntMap.Internal.$fOrdIntMap @ a $dOrd
                 } in
                 {__scc {main:BasicTensorsMap.triangleMap3} True True} Data.Map.Strict.Internal.fromList
                                                                         @ (Data.IntMap.Internal.IntMap
                                                                              a)
                                                                         @ b
                                                                         $dOrd1
                                                                         (GHC.List.zip
                                                                            @ (Data.IntMap.Internal.IntMap
                                                                                 a)
                                                                            @ b
                                                                            ({__scc {main:BasicTensorsMap.symIndList} True True} GHC.Base.map
                                                                                                                                   @ [(Data.IntSet.Internal.Key,
                                                                                                                                       a)]
                                                                                                                                   @ (Data.IntMap.Internal.IntMap
                                                                                                                                        a)
                                                                                                                                   (Data.IntMap.Strict.fromList
                                                                                                                                      @ a)
                                                                                                                                   ({__scc {main:BasicTensorsMap.symIndList.zList} True True} GHC.Base.map
                                                                                                                                                                                                @ [a]
                                                                                                                                                                                                @ [(Data.IntSet.Internal.Key,
                                                                                                                                                                                                    a)]
                                                                                                                                                                                                (BasicTensorsMap.triangleMap1
                                                                                                                                                                                                   @ a)
                                                                                                                                                                                                (BasicTensorsMap.$wsymIndListL
                                                                                                                                                                                                   @ a
                                                                                                                                                                                                   $dEnum
                                                                                                                                                                                                   3#
                                                                                                                                                                                                   BasicTensorsMap.epsilon1)))
                                                                            (GHC.Enum.enumFrom
                                                                               @ b
                                                                               $dEnum1
                                                                               (GHC.Enum.toEnum
                                                                                  @ b
                                                                                  $dEnum1
                                                                                  BasicTensorsMap.delta_4)))) -}
aa4a2c7036dae72024b9c6d16eb9ebd3
  triangleMap5 :: GHC.Prim.Int# -> [a] -> [(GHC.Types.Int, a)]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
42577d09c28c459adcdf62a6f7eda229
  triangleMapArea ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.IntMap.Internal.IntMap a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(C(U),A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),C(C1(U))),C(C1(U)),C(C1(U)),A,C(C1(U)),A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   $dOrd1 :: GHC.Classes.Ord (Data.IntMap.Internal.IntMap a)
                   = Data.IntMap.Internal.$fOrdIntMap @ a $dOrd
                 } in
                 {__scc {main:BasicTensorsMap.triangleMapArea} True True} Data.Map.Strict.Internal.fromList
                                                                            @ (Data.IntMap.Internal.IntMap
                                                                                 a)
                                                                            @ b
                                                                            $dOrd1
                                                                            (GHC.List.zip
                                                                               @ (Data.IntMap.Internal.IntMap
                                                                                    a)
                                                                               @ b
                                                                               (BasicTensorsMap.$wareaDoFList
                                                                                  @ a
                                                                                  $dEnum
                                                                                  $dOrd)
                                                                               (GHC.Enum.enumFrom
                                                                                  @ b
                                                                                  $dEnum1
                                                                                  (GHC.Enum.toEnum
                                                                                     @ b
                                                                                     $dEnum1
                                                                                     BasicTensorsMap.delta_4)))) -}
"SPEC/BasicTensorsMap fromList @ (Index 0 0 0 0 0 1 0 0) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           0))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 0, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 1,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 0)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList3 @ a
"SPEC/BasicTensorsMap fromList @ (Index 0 0 0 0 0 1 0 1) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           1))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 0, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 1,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 1)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList4 @ a
"SPEC/BasicTensorsMap fromList @ (Index 0 0 0 0 0 2 0 0) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           2
                                                                                           0
                                                                                           0))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 0, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 2,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 0)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList5 @ a
"SPEC/BasicTensorsMap fromList @ (Index 0 1 0 0 0 0 0 0) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 1, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 0,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 0)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList @ a
"SPEC/BasicTensorsMap fromList @ (Index 0 1 0 0 0 0 0 1) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           1))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 1, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 0,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 1)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList1 @ a
"SPEC/BasicTensorsMap fromList @ (Index 0 1 0 0 0 1 0 0) _" [orphan] forall @ a
                                                                            ($dOrd :: GHC.Classes.Ord
                                                                                        (IndexMap.Index
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           0
                                                                                           0
                                                                                           1
                                                                                           0
                                                                                           0))
  Data.Map.Strict.Internal.fromList @ (IndexMap.Uinds_20 0,
                                       IndexMap.Linds_20 1, IndexMap.Uinds_19 0,
                                       IndexMap.Linds_19 0, IndexMap.Uinds_9 0, IndexMap.Linds_9 1,
                                       IndexMap.Uinds_3 0, IndexMap.Linds_3 0)
                                    @ a
                                    $dOrd
  = BasicTensorsMap.$sfromList2 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

