
==================== FINAL INTERFACE ====================
2019-02-01 11:42:59.28843 UTC

interface main:TensorF 8043
  interface hash: 9408d9bd586263a1f5b7900f174c698a
  ABI hash: 09211aeed619ee5c029003195435901f
  export-list hash: 7676159425e41e2657e9c971424f2a73
  orphan hash: c70c06058748e4b1ac84aaee0dd4ad23
  flag hash: 941ef95016433cfd417a6725e52dbf85
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  TensorF.delta_19
  TensorF.delta_20
  TensorF.delta_3
  TensorF.delta_9
  TensorF.epsilonMap
  TensorF.evalFullTensor
  TensorF.evalTensor
  TensorF.flatAreaMap
  TensorF.flatAreaSTMap
  TensorF.flatInterMap
  TensorF.intAIB
  TensorF.interArea
  TensorF.interEqn1_2
  TensorF.interEqn1_3
  TensorF.interMetric
  TensorF.inter_I2Map
  TensorF.inter_I3Map
  TensorF.inter_IAreaMap
  TensorF.inter_J2Map
  TensorF.inter_J3Map
  TensorF.inter_JAreaMap
  TensorF.mkTensorFromMap
  TensorF.tensor2Map
  TensorF.tensorAdd
  TensorF.tensorContract_19
  TensorF.tensorContract_20
  TensorF.tensorContract_3
  TensorF.tensorContract_9
  TensorF.tensorProd
  TensorF.tensorSMult
  TensorF.tensorSub
  TensorF.tensorTranspose
  TensorF.triangleMap2
  TensorF.triangleMap3
  TensorF.triangleMapArea
module dependencies: Index
package dependencies: array-0.5.2.0 base-4.11.1.0*
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Proxy a80a60a2fdceabfeb4d110d23b808844
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.TypeNats 8f7c6aed0d8e1900cac5f62a9bc0fd0b
import  -/  base-4.11.1.0:Numeric.Natural da273ddb373e0510fde98e17e4aa338f
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Sequence 21c58838329d44e2dc13db7c04e3a8d8
import  -/  containers-0.5.11.0:Data.Sequence.Internal a2eae372f67713826bf16d410fc6cd8f
import  -/  containers-0.5.11.0:Data.Sequence.Internal.Sorting 481f0d31b76dfcad90c740727653678b
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Index 846d6195a6d682ebc4b5552893fd0d45
  exports: 57bd4ebf86e1ac997dd2a9c3171f207b
  Ind e0e0296be91c66861dc53e910787f263
  Index f1b2e2d342d299287fa67a4a38056bc6
  Index d1cd1067a874dee8fab194e163b456d3
  Lind_19 d02d3046c8b95b603f04e6b686886b2e
  Lind_20 8ff213bd2e4ee9794357cd73b8656e72
  Lind_9 d899f69b9977ade0529b5015a71fa56c
  Linds_3 c2218f06873d6e75f70ab22fa89ca846
  Uind_19 8473e0b91f5b51c37fb377c28bad490b
  Uind_20 da1c3284cea79be72eb1a0454a6da0ec
  Uind_9 bdc578619f32ac1d154acb21ac900fa3
  Uinds_3 8e007ccb52f8036461e378de4876a33c
  combineIndex a4591e28842467efc69c3b51e77f6344
  contractionIndexList_19 70fbdd266668eedc7e8841de40841bfc
  contractionIndexList_20 90ce68fe567643746c20c3419999c882
  contractionIndexList_3 c2d25c122b30588ff3cc703b371ea3a8
  contractionIndexList_9 0957a80ae995b35bc4094f99c4655eea
  getRangeList 35c271ce9c33d7029e662d493b216f1d
  getSeq aca1e196c4e40fcf8abefe6f95d215d8
  getValInd 2f343080b63386f163ac2db0992f586e
  ind2List 411fe930e2240d8bfeb366e731054a71
  indSign2 9f3acfcf797d45aa9d1618821f711783
  mkInd 0cd61b787d4cebc06b327004b370bff2
  sortInd 3ca5cdef483c9e10cf56745a278555ee
  splitIndex 8ae751a2539fca193de3c36c8aa86dfd
  swapPosIndex d767ccec479716c59cf65fc1599cbeb2
817581428c7478ff29469ee2f877f97f
  $fFunctorTensor ::
    GHC.Base.Functor (TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n1 :: GHC.Types.Nat
                      @ n2 :: GHC.Types.Nat
                      @ n3 :: GHC.Types.Nat
                      @ n4 :: GHC.Types.Nat
                      @ n5 :: GHC.Types.Nat
                      @ n6 :: GHC.Types.Nat
                      @ n7 :: GHC.Types.Nat
                      @ n8 :: GHC.Types.Nat.
                  @ (TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8)
                  (TensorF.$fFunctorTensor_$cfmap
                     @ n1
                     @ n2
                     @ n3
                     @ n4
                     @ n5
                     @ n6
                     @ n7
                     @ n8)
                  (TensorF.$fFunctorTensor_$c<$
                     @ n1
                     @ n2
                     @ n3
                     @ n4
                     @ n5
                     @ n6
                     @ n7
                     @ n8) -}
817581428c7478ff29469ee2f877f97f
  $fFunctorTensor_$c<$ ::
    a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   @ b
                   (x :: a)
                   (eta :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b) ->
                 case eta of wild { TensorF.Tensor g ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   (\ (x1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) -> x) }) -}
817581428c7478ff29469ee2f877f97f
  $fFunctorTensor_$cfmap ::
    (a -> b)
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U(C(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   @ b
                   (f :: a -> b)
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case ds of wild { TensorF.Tensor g ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ b
                   (GHC.Base..
                      @ a
                      @ b
                      @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                      f
                      g) }) -}
fad170bd2d9513f10c8b440c8b4c09a0
  $sfromList ::
    [(Index.Index 1 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 1 0 0 0 0 0 0 4, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 1 0 0 0 0 0 0 4)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 4
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList1
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 0 0 0 0 0 0 4)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go6
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 0 0 0 0 0 0 4)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 0 0 0 0 0 0 4) @ a))
                                  wild2 } } } } } }) -}
ce81a5c9c1e281db26246ed36169bb23
  $sfromList1 ::
    Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
    -> [(Index.Index 1 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
edb454d2f0df3c33c6e2ae017a2eb668
  $sfromList10 ::
    [(Index.Index 1 1 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 1 1 0 0 1 1 1 1, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 1 1 0 0 1 1 1 1)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 1
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 1
                                  @ 1
                                  @ 1
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList11
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 1 1 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go11
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 1 1 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 1 1 1 1) @ a))
                                  wild2 } } } } } }) -}
9fe628124d008d917047e2e23f143430
  $sfromList11 ::
    Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
    -> [(Index.Index 1 1 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
87a1df10e2ae97167e69428d9edcbc76
  $sfromList12 ::
    [(Index.Index 0 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 1 0 0 0 0 1 1, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 1 0 0 0 0 1 1)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 1
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList13
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go12
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 1 1) @ a))
                                  wild2 } } } } } }) -}
1609b0824b879a81b61b2e978685c021
  $sfromList13 ::
    Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
    -> [(Index.Index 0 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
93f5e2c8e4c7b3a9bc0e2a219b2a5794
  $sfromList14 ::
    [(Index.Index 0 1 0 0 0 0 0 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 1 0 0 0 0 0 0, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 1 0 0 0 0 0 0)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList15
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 0 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go14
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 0 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 0 0) @ a))
                                  wild2 } } } } } }) -}
eb420f1e1870c980fac6615a0a3de7fd
  $sfromList15 ::
    Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
    -> [(Index.Index 0 1 0 0 0 0 0 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
9f54b5a4a850ded11a06510fe39dc503
  $sfromList16 ::
    [(Index.Index 0 1 0 0 0 0 4 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 1 0 0 0 0 4 0, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 1 0 0 0 0 4 0)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 4
                                  @ 0
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList17
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 4 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go15
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 1 0 0 0 0 4 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 1 0 0 0 0 4 0) @ a))
                                  wild2 } } } } } }) -}
51b711db81ea91fc67e3b9ab9146b71a
  $sfromList17 ::
    Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
    -> [(Index.Index 0 1 0 0 0 0 4 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1849e041ab96bc0dc7c1855fe0cbb368
  $sfromList18 ::
    [(Index.Index 0 0 0 1 0 0 3 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 0 1 0 0 3 0, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 0 1 0 0 3 0)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 3
                                  @ 0
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList19
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 1 0 0 3 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go16
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 1 0 0 3 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 1 0 0 3 0) @ a))
                                  wild2 } } } } } }) -}
86e93c58dc7b126c22320b6b46299487
  $sfromList19 ::
    Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
    -> [(Index.Index 0 0 0 1 0 0 3 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
94cbed92b1dc94e6aab13d63278d93ce
  $sfromList2 ::
    [(Index.Index 0 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 0 0 0 0 0 4, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 0 0 0 0 0 4)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 4
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList3
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 0 0 0 4)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go7
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 0 0 0 4)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 0 0 4) @ a))
                                  wild2 } } } } } }) -}
12d67835c018cabe4c72d17ceb25cb53
  $sfromList20 ::
    [(Index.Index 0 0 1 0 0 0 0 3, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 1 0 0 0 0 3, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 1 0 0 0 0 3)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 3
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList21
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 1 0 0 0 0 3)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go17
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 1 0 0 0 0 3)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 1 0 0 0 0 3) @ a))
                                  wild2 } } } } } }) -}
7bd21b8b66480c9d8877a0dad21a545f
  $sfromList21 ::
    Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
    -> [(Index.Index 0 0 1 0 0 0 0 3, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
e81f02ee21f6f4ae236f571856604fe4
  $sfromList22 ::
    [(Index.Index 0 0 0 0 0 1 2 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 0 0 0 1 2 0, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 0 0 0 1 2 0)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 2
                                  @ 0
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList23
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 0 1 2 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go18
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 0 1 2 0)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 0 1 2 0) @ a))
                                  wild2 } } } } } }) -}
256828044eaec89342463723aea82384
  $sfromList23 ::
    Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
    -> [(Index.Index 0 0 0 0 0 1 2 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
69476f4fdc91f322021712b1cbb314e3
  $sfromList24 ::
    [(Index.Index 0 0 0 0 1 0 0 2, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 0 0 1 0 0 2, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 0 0 1 0 0 2)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 2
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList25
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 1 0 0 2)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go19
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 1 0 0 2)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 0 0 2) @ a))
                                  wild2 } } } } } }) -}
dfe1831de62327af1b897a5794463b2f
  $sfromList25 ::
    Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
    -> [(Index.Index 0 0 0 0 1 0 0 2, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
ec05782941bc96c474cc645c85348d6d
  $sfromList3 ::
    Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
    -> [(Index.Index 0 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
cfbd2c60deda2d1d306b92c3f6879370
  $sfromList4 ::
    [(Index.Index 1 1 0 0 0 0 2 2, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 1 1 0 0 0 0 2 2, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 1 1 0 0 0 0 2 2)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 1
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 2
                                  @ 2
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList5
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 0 0 2 2)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go8
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 0 0 2 2)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 2 2) @ a))
                                  wild2 } } } } } }) -}
95b4179351ff44dd911d00c22393699a
  $sfromList5 ::
    Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
    -> [(Index.Index 1 1 0 0 0 0 2 2, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
9c0005f79da13e3a9eb697c935272928
  $sfromList6 ::
    [(Index.Index 1 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 1 1 0 0 0 0 1 1, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 1 1 0 0 0 0 1 1)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 1
                                  @ 1
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 1
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList7
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 0 0 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go9
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 1 1 0 0 0 0 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 1 1 0 0 0 0 1 1) @ a))
                                  wild2 } } } } } }) -}
477609b1d596151495c4fc55fce2752b
  $sfromList7 ::
    Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
    -> [(Index.Index 1 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
4b644b111e3b24c8916f55ead17b12eb
  $sfromList8 ::
    [(Index.Index 0 0 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Index.Index 0 0 0 0 1 1 1 1, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Index.Index ipv ipv1 ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ->
                           Data.Map.Internal.Bin
                             @ (Index.Index 0 0 0 0 1 1 1 1)
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a)
                             (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case Index.$fOrdIndex_$c<
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 0
                                  @ 1
                                  @ 1
                                  @ 1
                                  @ 1
                                  kx
                                  ky of wild4 {
                             GHC.Types.False
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$sfromList9
                                  @ a
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 1 1 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case kx of dt { Index.Index ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ipv9 ->
                                TensorF.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Internal.Bin
                                     @ (Index.Index 0 0 0 0 1 1 1 1)
                                     @ a
                                     1#
                                     dt
                                     x
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a)
                                     (Data.Map.Internal.Tip @ (Index.Index 0 0 0 0 1 1 1 1) @ a))
                                  wild2 } } } } } }) -}
ee910e5a9253e8997a8d288b23445147
  $sfromList9 ::
    Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
    -> [(Index.Index 0 0 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
b9bd31f40490caf720d0113e63b0fd77
  $sinsert_$sgo1 ::
    Index.Index 0 0 0 0 0 0 0 4
    -> Index.Index 0 0 0 0 0 0 0 4
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
5ee87d79e5293fd8b069d335fa0fd929
  $sinsert_$sgo10 ::
    Index.Index 0 0 1 0 0 0 0 3
    -> Index.Index 0 0 1 0 0 0 0 3
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
e78c7bdd41c040961df391db944573bb
  $sinsert_$sgo11 ::
    Index.Index 0 0 0 0 0 1 2 0
    -> Index.Index 0 0 0 0 0 1 2 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
f1593c046ddf17f58a19415490b28826
  $sinsert_$sgo12 ::
    Index.Index 0 0 0 0 1 0 0 2
    -> Index.Index 0 0 0 0 1 0 0 2
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
cda246a12d1f32cf3d5efd2a1369b72f
  $sinsert_$sgo13 ::
    Index.Index 1 0 0 0 0 0 0 4
    -> Index.Index 1 0 0 0 0 0 0 4
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a1
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
250b517c9543ca99c3f3dad682317c3e
  $sinsert_$sgo2 ::
    Index.Index 1 1 0 0 0 0 2 2
    -> Index.Index 1 1 0 0 0 0 2 2
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
42cf57e4e1e71c84cda331de158d024a
  $sinsert_$sgo3 ::
    Index.Index 1 1 0 0 0 0 1 1
    -> Index.Index 1 1 0 0 0 0 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
006c0f3a23d924f63ddccd2ca12ac0d4
  $sinsert_$sgo4 ::
    Index.Index 0 0 0 0 1 1 1 1
    -> Index.Index 0 0 0 0 1 1 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
611974d2885375f81b1d18f6e762f15b
  $sinsert_$sgo5 ::
    Index.Index 1 1 0 0 1 1 1 1
    -> Index.Index 1 1 0 0 1 1 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
f84ba6d24822f461e1b778f3955e433b
  $sinsert_$sgo6 ::
    Index.Index 0 1 0 0 0 0 1 1
    -> Index.Index 0 1 0 0 0 0 1 1
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
79adb07e9253d16b50899d2cd182d74c
  $sinsert_$sgo7 ::
    Index.Index 0 1 0 0 0 0 0 0
    -> Index.Index 0 1 0 0 0 0 0 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
7e7d667cf12fa5ed7160870151556746
  $sinsert_$sgo8 ::
    Index.Index 0 1 0 0 0 0 4 0
    -> Index.Index 0 1 0 0 0 0 4 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
46e1762c7e5122525a05e74f20667c07
  $sinsert_$sgo9 ::
    Index.Index 0 0 0 1 0 0 3 0
    -> Index.Index 0 0 0 1 0 0 3 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a1
  {- Arity: 4,
     Strictness: <L,U><S(SSSSSSSS),1*U(U,U,U,U,U,U,U,U)><L,U><S,1*U> -}
522f8482b1d6dd691e86b342d5faf940
  $tc'Tensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9066986265612291277##
                   11625602710013122875##
                   TensorF.$trModule
                   TensorF.$tc'Tensor2
                   9#
                   TensorF.$tc'Tensor1) -}
402b9c44ae31ef8b0d6a4679fa6d236c
  $tc'Tensor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0785b63d08c5ab0f72496aac83bb10d8
  $tc'Tensor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$tc'Tensor3) -}
f916b2319d791ddc8ff2aacf0ef4640e
  $tc'Tensor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tensor"#) -}
7ca9c3b1763cea17874b40b8f1cff03b
  $tcTensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8145205541696845073##
                   2728017174972678941##
                   TensorF.$trModule
                   TensorF.$tcTensor2
                   0#
                   TensorF.$tcTensor1) -}
6065702f6e8c80a0ca98e365aa9cf533
  $tcTensor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2879ce431ff867fac074b19b6aa56e73
  $tcTensor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$tcTensor3) -}
239af9a0b35389f649ac50684593dbbb
  $tcTensor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tensor"#) -}
fa8a7c6c786bfb079bca1aded4e06923
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TensorF.$trModule3
                   TensorF.$trModule1) -}
23f7818e45f6acf6da9dd25a9360f15f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$trModule2) -}
d3e116caf98938f8e248958f59f8fbb6
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TensorF"#) -}
b45d74af8d76f43b41e7dc54b8610ecb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$trModule4) -}
a2b1bbad2af0ee1fbc395ca968ca6962
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
a1b2185bfa0f697d2f1109ab86aacbad
  $w$stensor2Map ::
    (Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 1 0 0 0 0 0 0
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap4 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 0 1 0 0 0 0 0 0]
                   = TensorF.$w$stensorIndList7
                       ww3
                       TensorF.flatAreaMap2
                       ww2
                       ww2
                       ww2
                       ww2
                       ww2
                       ww2
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 1 0 0 0 0 0 0)
                   @ GHC.Real.Rational
                   TensorF.flatAreaMap1
                   (TensorF.$sfromList14
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 1 0 0 0 0 0 0)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 0 1 0 0 0 0 0 0)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
7e3964cbd0c13052639a4067c3d656bf
  $w$stensor2Map1 ::
    (Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 4
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap4 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 0 0 0 0 0 0 0 4]
                   = TensorF.$w$stensorIndList
                       ww3
                       ww2
                       ww2
                       ww2
                       ww2
                       ww2
                       ww2
                       TensorF.flatAreaMap14
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 0 0 0 0 0 0 4)
                   @ GHC.Real.Rational
                   TensorF.flatAreaSTMap1
                   (TensorF.$sfromList2
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 0 0 0 0 0 0 4)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 0 0 0 0 0 0 0 4)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
41fe57dfe6af22d8d55d7a886b3583aa
  $w$stensor2Map2 ::
    (Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 1 0 0 0 0 1 1
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap4 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 0 1 0 0 0 0 1 1]
                   = TensorF.$w$stensorIndList6
                       ww3
                       TensorF.flatAreaMap2
                       ww2
                       ww2
                       ww2
                       ww2
                       TensorF.flatAreaMap2
                       TensorF.flatAreaMap2
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 1 0 0 0 0 1 1)
                   @ GHC.Real.Rational
                   TensorF.flatInterMap1
                   (TensorF.$sfromList12
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 1 0 0 0 0 1 1)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 0 1 0 0 0 0 1 1)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
01284d93faa1f04bb9fc754a65fcb48f
  $w$stensor2Map3 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap2 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 1 1 0 0 0 0 1 1]
                   = TensorF.$w$stensorIndList3
                       ww3
                       ww2
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       ww2
                       ww2
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 1 1 0 0 0 0 1 1)
                   @ GHC.Real.Rational
                   TensorF.interArea1
                   (TensorF.$sfromList6
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 1 1 0 0 0 0 1 1)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 1 1 0 0 0 0 1 1)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
1aad55ac0815d3c09b80465fa6afc416
  $w$stensor2Map4 ::
    (Index.Index 1 1 0 0 0 0 2 2 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 2 2
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap2 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 1 1 0 0 0 0 2 2]
                   = TensorF.$w$stensorIndList2
                       ww3
                       ww2
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       TensorF.interEqn1_5
                       TensorF.interEqn1_5
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 1 1 0 0 0 0 2 2)
                   @ GHC.Real.Rational
                   TensorF.interEqn1_1
                   (TensorF.$sfromList4
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 1 1 0 0 0 0 2 2)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 1 1 0 0 0 0 2 2)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
49593661748965f9155dbe5ab4f3cbaa
  $w$stensor2Map5 ::
    (Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 1 1 1 1
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap2 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 1 1 0 0 1 1 1 1]
                   = TensorF.$w$stensorIndList5
                       ww3
                       ww2
                       TensorF.flatAreaMap4
                       TensorF.flatAreaMap4
                       ww2
                       ww2
                       ww2
                       ww2
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 1 1 0 0 1 1 1 1)
                   @ GHC.Real.Rational
                   TensorF.interEqn1_7
                   (TensorF.$sfromList10
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 1 1 0 0 1 1 1 1)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 1 1 0 0 1 1 1 1)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
49ef2d6dd2e68cd20570ff204b5293e9
  $w$stensor2Map6 ::
    (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 1 1
                          -> GHC.Real.Rational) ->
                 case TensorF.flatAreaMap4 of ww2 { GHC.Types.I# ww3 ->
                 let {
                   indList :: [Index.Index 0 0 0 0 1 1 1 1]
                   = TensorF.$w$stensorIndList4
                       ww3
                       ww2
                       ww2
                       ww2
                       TensorF.flatAreaMap2
                       TensorF.flatAreaMap2
                       TensorF.flatAreaMap2
                       TensorF.flatAreaMap2
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 0 0 0 1 1 1 1)
                   @ GHC.Real.Rational
                   TensorF.interMetric1
                   (TensorF.$sfromList8
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 0 0 0 1 1 1 1)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         indList
                         (GHC.Base.map
                            @ (Index.Index 0 0 0 0 1 1 1 1)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            ww
                            indList))) }) -}
589ffce180308e68f3728e117cc45ea5
  $w$stensorContract_1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 1 1 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 1 1) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_3
                         @ 1
                         @ 1
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
eeb6eb5620fe13f5397049b37b66045a
  $w$stensorContract_2 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 2 2 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 2 2) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_3
                         @ 2
                         @ 2
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
21ad4b9ccd297f3b3ea0247ddedc7f4c
  $w$stensorContract_20 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> GHC.Real.Rational)
    -> (# Index.Index 0 1 n3 n4 n5 n6 n7 n8 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index 0 1 n3 n4 n5 n6 n7 n8) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_20
                         @ 0
                         @ 1
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
c839023cfab761bc05d566cc04b739bb
  $w$stensorContract_3 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 0 0 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 0 0) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_3
                         @ 0
                         @ 0
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
4650fa0a93e770ca59b9208332342fa2
  $w$stensorContract_4 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 3 3 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 3 3) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_3
                         @ 3
                         @ 3
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
b107ab8f3a5e95ee508ee744c8d41441
  $w$stensorContract_5 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> GHC.Real.Rational)
    -> (# Index.Index 1 2 n3 n4 n5 n6 n7 n8 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> GHC.Real.Rational) ->
                 (# \ (i1 :: Index.Index 1 2 n3 n4 n5 n6 n7 n8) ->
                    case w of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      $wgo :: [Index.Index
                                 (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8]
                              -> GHC.Integer.Type.Integer
                              -> GHC.Integer.Type.Integer
                              -> GHC.Real.Rational
                        <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m,
                                    Inline: [0] -}
                      = \ (w1 :: [Index.Index
                                    (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8])
                          (ww15 :: GHC.Integer.Type.Integer)
                          (ww16 :: GHC.Integer.Type.Integer) ->
                        case w1 of wild {
                          [] -> GHC.Real.:% @ GHC.Integer.Type.Integer ww15 ww16
                          : y ys
                          -> case ww y of ww17 { GHC.Real.:% ww18 ww19 ->
                             case GHC.Real.$w$s$c+
                                    ww15
                                    ww16
                                    ww18
                                    ww19 of ww20 { (#,#) ww21 ww22 ->
                             $wgo ys ww21 ww22 } } }
                    } in
                    $wgo
                      (Index.$wcontractionIndexList_20
                         @ 1
                         @ 2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      TensorF.delta_2
                      GHC.Real.$fEnumRatio1 } } #)) -}
53ed5e0773a69fc20f984075c8411927
  $w$stensorIndList ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 0 0 0 4]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
eeaf5fd7bc244f7e4be9042173dbc384
  $w$stensorIndList1 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 0 0 0 0 0 0 4]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
69aadf49779c423a1c35df84d8d1d582
  $w$stensorIndList10 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 1 0 0 0 0 3]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
23133bae0016160bedcb7a6d4e4ea82b
  $w$stensorIndList11 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 0 1 2 0]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
0324d8f12184e485b774ea927d4b3849
  $w$stensorIndList12 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 1 0 0 2]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
f84bcb0417df76650a63bbcafa2cc228
  $w$stensorIndList2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 0 0 2 2]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
2a13e42d450db592989f2342131a364e
  $w$stensorIndList3 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 0 0 1 1]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
72994a38182392a314a3e481dd51649d
  $w$stensorIndList4 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 1 1 1 1]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
2eba50790495cbc197b09c64682e9808
  $w$stensorIndList5 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 1 1 1 1]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
d09250f19efa6ef6eab8ce28fc71b108
  $w$stensorIndList6 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 1 1]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
1bddec1ebf195db6057033c33b5f56d4
  $w$stensorIndList7 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 0 0]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
e76013d854a2bdcc80372581e16717e8
  $w$stensorIndList8 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 4 0]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
27a14cab8dceaa8862d0817387671c43
  $w$stensorIndList9 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 1 0 0 3 0]
  {- Arity: 8,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)><L,1*U(1*U)>,
     Inline: [0] -}
2565b84bb9547ac9f47bb594f861af76
  $w$stensorProd ::
    (Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 4)
            (4 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 4
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 4)
                               (4 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.flatAreaMap_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.flatAreaMap_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
45ec89d4843b8999187e50d8bcdc52cd
  $w$stensorProd1 ::
    (Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 2)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 2
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (2 GHC.TypeNats.+ 2)) ->
                    case ww
                           (case TensorF.flatAreaSTMap_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.flatAreaSTMap_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
6fc3dbe7caef4616c3629b407f989fa8
  $w$stensorProd10 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 1 1 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.tensorProd_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
7729c29f58943adff67e51ea8c31bb6e
  $w$stensorProd11 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.tensorProd_g1 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g1 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
3e3f414920e2fc757d835f5d0b28255d
  $w$stensorProd12 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.tensorProd_g2 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g2 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
505be85aefc51b7e19f8b6fba955b86f
  $w$stensorProd13 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.tensorProd_g3 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g3 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
6ec2e122fa083800f8ccf810e53883cb
  $w$stensorProd14 ::
    (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 0 0
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.tensorProd_g4 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g4 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
a98756b2ab6b7a9f034b47900f8baf80
  $w$stensorProd15 ::
    (Index.Index 2 2 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (2 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 2 2 0 0 1 1 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (2 GHC.TypeNats.+ 0)
                               (2 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.tensorProd_g5 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.tensorProd_g5 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
da4275b9f758619a8b13d9756ce2c6a8
  $w$stensorProd2 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.flatInterMap_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.flatInterMap_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
5b8b3e37b2ad9de3df9397e7ca9a9d90
  $w$stensorProd3 ::
    (Index.Index 1 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 4)
            (4 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 0 0 0 0 0 0 4
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 4)
                               (4 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.interArea_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interArea_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
f60cc14f3e0ceeba632e4c5f1c8959bf
  $w$stensorProd4 ::
    (Index.Index 0 0 0 0 0 0 2 2 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 2 2
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (2 GHC.TypeNats.+ 0)
                               (2 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.interEqn1_2_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interEqn1_2_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
759edb8548abb18e4e3508bbf5c81798
  $w$stensorProd5 ::
    (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.interEqn1_2_g1 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interEqn1_2_g1 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
f6b3d6919377aea3f7d54637b777b8c1
  $w$stensorProd6 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 1)) ->
                    case ww
                           (case TensorF.interEqn1_2_g2 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interEqn1_2_g2 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
0421a7592a5f9bae57ec569c9556ee0d
  $w$stensorProd7 ::
    (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.interEqn1_3_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interEqn1_3_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
c0f266ae823b8729b0946ce63c42e881
  $w$stensorProd8 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 1)
                               (1 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.interEqn1_3_g1 r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interEqn1_3_g1 r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
860ea0735741921c6c05e45d7120271c
  $w$stensorProd9 ::
    (Index.Index 0 0 0 0 1 0 0 2 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 1 2 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 2)
            (2 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 0 0 2
                          -> GHC.Real.Rational)
                   (ww2 :: Index.Index 0 0 0 0 0 1 2 0 -> GHC.Real.Rational) ->
                 (# \ (r1 :: Index.Index
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 0)
                               (1 GHC.TypeNats.+ 0)
                               (0 GHC.TypeNats.+ 1)
                               (0 GHC.TypeNats.+ 2)
                               (2 GHC.TypeNats.+ 0)) ->
                    case ww
                           (case TensorF.interMetric_g r1 of wild { (,) x ds1 ->
                            x }) of wild { GHC.Real.:% a1 a2 ->
                    let {
                      $j :: GHC.Real.Rational <join 0> {- Strictness: m -}
                      = case ww2
                               (case TensorF.interMetric_g r1 of wild1 { (,) ds1 y ->
                                y }) of wild1 { GHC.Real.:% a4 a5 ->
                        case GHC.Integer.Type.eqInteger# a4 TensorF.delta_2 of wild2 {
                          DEFAULT
                          -> case GHC.Real.$w$sreduce
                                    (GHC.Integer.Type.timesInteger a1 a4)
                                    (GHC.Integer.Type.timesInteger a2 a5) of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                          1#
                          -> case GHC.Integer.Type.eqInteger#
                                    a5
                                    GHC.Real.$fEnumRatio1 of wild3 {
                               DEFAULT
                               -> case GHC.Real.$w$sreduce
                                         (GHC.Integer.Type.timesInteger a1 a4)
                                         (GHC.Integer.Type.timesInteger
                                            a2
                                            a5) of ww6 { (#,#) ww7 ww8 ->
                                  GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 }
                               1# -> TensorF.flatAreaMap_d } } }
                    } in
                    case GHC.Integer.Type.eqInteger# a1 TensorF.delta_2 of wild2 {
                      DEFAULT -> $j
                      1#
                      -> case GHC.Integer.Type.eqInteger#
                                a2
                                GHC.Real.$fEnumRatio1 of wild3 {
                           DEFAULT -> $j 1# -> TensorF.flatAreaMap_d } } } #)) -}
983e94de114202f43eeefe4c84c05038
  $wevalFullTensor ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) -> [a]
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (w :: GHC.TypeNats.KnownNat n1)
                   (w1 :: GHC.TypeNats.KnownNat n2)
                   (w2 :: GHC.TypeNats.KnownNat n3)
                   (w3 :: GHC.TypeNats.KnownNat n4)
                   (w4 :: GHC.TypeNats.KnownNat n5)
                   (w5 :: GHC.TypeNats.KnownNat n6)
                   (w6 :: GHC.TypeNats.KnownNat n7)
                   (w7 :: GHC.TypeNats.KnownNat n8)
                   (ww :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) ->
                 case TensorF.$wgetRank
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        @ a
                        w
                        w1
                        w2
                        w3
                        w4
                        w5
                        w6
                        w7 of ww2 { (#,,,,,,,#) ww3 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                 GHC.Base.map
                   @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                   @ a
                   ww
                   (TensorF.tensorIndList
                      @ n1
                      @ n2
                      @ n3
                      @ n4
                      @ n5
                      @ n6
                      @ n7
                      @ n8
                      w
                      w1
                      w2
                      w3
                      w4
                      w5
                      w6
                      w7
                      (ww3, ww5, ww6, ww7, ww8, ww9, ww10, ww11)) }) -}
eb3acc552ce35ec3c3a66dd428014496
  $wgetRank ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    (# GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
       GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 8,
     Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
b39a083d09ddf88a02b3fdb51310d549
  $wintAIB ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> (# Index.Index 1 2 0 0 1 1 2 2 -> GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
a4e94f77161a47702e20fd361081e542
  $wlvl ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww TensorF.delta_2 of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww2
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
ee6b1f8d40e529c9cd17a37cce01580b
  $wlvl1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# TensorF.delta_2 ww of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             GHC.Real.$fEnumRatio1
                             ww2 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
972a975329ab93f7efabc2c89cd28aad
  $wpoly_go1 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
749a2d660048d166a35109b9ff7c43c6
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
    -> [(Index.Index 0 0 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
90cb09cb6d134d4545a5f13f8a868515
  $wpoly_go11 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
    -> [(Index.Index 1 1 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
654c5a1cba2061d61a6bae4929399475
  $wpoly_go12 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
    -> [(Index.Index 0 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
8a16b592c1b07e5b20dd50d26a6cc61e
  $wpoly_go13 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
10410dea1488c8c4ae744abf1013b13b
  $wpoly_go14 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
    -> [(Index.Index 0 1 0 0 0 0 0 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
8a2009a72e6f7a4670f220162101b1c6
  $wpoly_go15 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
    -> [(Index.Index 0 1 0 0 0 0 4 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
9da0f86fa2bb36e413538ba6374be55d
  $wpoly_go16 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
    -> [(Index.Index 0 0 0 1 0 0 3 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
8b739a15104bc6c29664e0be1fe1ae5d
  $wpoly_go17 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
    -> [(Index.Index 0 0 1 0 0 0 0 3, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
75521f3c637f37f281edcccc99cdc4d5
  $wpoly_go18 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
    -> [(Index.Index 0 0 0 0 0 1 2 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
61961843132aa8e8e0859ea0b0f707e1
  $wpoly_go19 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
    -> [(Index.Index 0 0 0 0 1 0 0 2, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a062560e30b7f447d135dcb89141adea
  $wpoly_go2 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
248ad1235f0f94d0604392f56650d2f0
  $wpoly_go3 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
40ed48b7fbf9e7d9a912d699721788f7
  $wpoly_go4 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
c7bb19f3ce2bf047a4e3338afe58c7c0
  $wpoly_go5 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
43ccc7634f19834843fcea5aa47cc6f9
  $wpoly_go6 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
    -> [(Index.Index 1 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
a2ecc3eca0149a4903e6ea2da039c20e
  $wpoly_go7 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
    -> [(Index.Index 0 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
9086313a2f56ab0c789e827414bcd05d
  $wpoly_go8 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
    -> [(Index.Index 1 1 0 0 0 0 2 2, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
5dcc3923ca015a657fc41c17b0593bbf
  $wpoly_go9 ::
    GHC.Prim.Int#
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
    -> [(Index.Index 1 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
cbc5a62f0590a9511c7428f5ea5af2fb
  $wsymIndList ::
    GHC.Enum.Enum a =>
    GHC.Prim.Int# -> GHC.Types.Int -> [Data.Sequence.Internal.Seq a]
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><S,U><L,U>,
     Inline: [0] -}
63b1fa6ae88e372698af3f048f08714a
  $wtensorContract_19 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8
                          -> a) ->
                 let {
                   lvl103 :: a = GHC.Num.fromInteger @ a w TensorF.delta_2
                 } in
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    case w1 of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      go :: [Index.Index
                               n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8]
                            -> a -> a
                        <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                      = \ (ds :: [Index.Index
                                    n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8])
                          (eta :: a) ->
                        case ds of wild {
                          [] -> eta : y ys -> go ys (GHC.Num.+ @ a w eta (ww y)) }
                    } in
                    go
                      (Index.$wcontractionIndexList_19
                         @ n3
                         @ n4
                         @ n1
                         @ n2
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      lvl103 } } #)) -}
7075331fa512c900a35afe1faab40a5c
  $wtensorContract_20 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> a) ->
                 let {
                   lvl103 :: a = GHC.Num.fromInteger @ a w TensorF.delta_2
                 } in
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    case w1 of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      go :: [Index.Index
                               (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8]
                            -> a -> a
                        <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                      = \ (ds :: [Index.Index
                                    (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8])
                          (eta :: a) ->
                        case ds of wild {
                          [] -> eta : y ys -> go ys (GHC.Num.+ @ a w eta (ww y)) }
                    } in
                    go
                      (Index.$wcontractionIndexList_20
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      lvl103 } } #)) -}
391a836b71fc759565025b6ed1ae01d1
  $wtensorContract_3 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)
                          -> a) ->
                 let {
                   lvl103 :: a = GHC.Num.fromInteger @ a w TensorF.delta_2
                 } in
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    case w1 of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      go :: [Index.Index
                               n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)]
                            -> a -> a
                        <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                      = \ (ds :: [Index.Index
                                    n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)])
                          (eta :: a) ->
                        case ds of wild {
                          [] -> eta : y ys -> go ys (GHC.Num.+ @ a w eta (ww y)) }
                    } in
                    go
                      (Index.$wcontractionIndexList_3
                         @ n7
                         @ n8
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      lvl103 } } #)) -}
fbbfe66ffc2a25effda2e60c961894db
  $wtensorContract_9 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8
                          -> a) ->
                 let {
                   lvl103 :: a = GHC.Num.fromInteger @ a w TensorF.delta_2
                 } in
                 (# \ (i1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    case w1 of ww2 { (,) ww3 ww5 ->
                    case i1 of ww6 { Index.Index ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ->
                    letrec {
                      go :: [Index.Index
                               n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8]
                            -> a -> a
                        <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                      = \ (ds :: [Index.Index
                                    n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8])
                          (eta :: a) ->
                        case ds of wild {
                          [] -> eta : y ys -> go ys (GHC.Num.+ @ a w eta (ww y)) }
                    } in
                    go
                      (Index.$wcontractionIndexList_9
                         @ n5
                         @ n6
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n7
                         @ n8
                         ww3
                         ww5
                         ww7
                         ww8
                         ww9
                         ww10
                         ww11
                         ww12
                         ww13
                         ww14)
                      lvl103 } } #)) -}
0ab12d350e41f9e63de54f7bfa03b2f3
  $wtensorSub ::
    GHC.Num.Num a =>
    (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
    -> (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,1*C1(C(U)),1*C1(U),A,A,1*C1(U))><L,C(U)><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (ww :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
                   (ww2 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) ->
                 let {
                   f :: a -> a
                   = GHC.Num.*
                       @ a
                       w
                       (GHC.Num.negate @ a w (GHC.Num.fromInteger @ a w TensorF.delta_1))
                 } in
                 (# \ (r1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    GHC.Num.+ @ a w (ww r1) (f (ww2 r1)) #)) -}
1d52bf15be1eaeb999f31bad7c568521
  type Rank =
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
817581428c7478ff29469ee2f877f97f
  type role Tensor phantom phantom phantom phantom phantom phantom phantom phantom representational
  data Tensor (n1 :: GHC.Types.Nat)
              (n2 :: GHC.Types.Nat)
              (n3 :: GHC.Types.Nat)
              (n4 :: GHC.Types.Nat)
              (n5 :: GHC.Types.Nat)
              (n6 :: GHC.Types.Nat)
              (n7 :: GHC.Types.Nat)
              (n8 :: GHC.Types.Nat)
              a
    = Tensor (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
4eee12b00f4466279c53f492a10c4967
  delta_1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
ec8b23105ee67e78b8f7dab65a94a484
  delta_19 :: TensorF.Tensor 0 0 1 1 0 0 0 0 GHC.Real.Rational
  {- Strictness: m,
     Unfolding: (TensorF.Tensor
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   TensorF.delta_19F) -}
ba4a9313894e0a921b865f6a9ceb3e7d
  delta_19F :: Index.Index 0 0 1 1 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(LLSSLLLL),1*U(A,A,U,U,A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 1 0 0 0 0) ->
                 case w of ww { Index.Index ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case Data.Sequence.Internal.$wlookup
                        @ Index.Uind_19
                        0#
                        ww5 of wild1 {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1
                      ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      of {}
                   GHC.Base.Just x
                   -> case GHC.Prim.dataToTag# @ Index.Uind_19 x of a# { DEFAULT ->
                      case Data.Sequence.Internal.$wlookup
                             @ Index.Lind_19
                             0#
                             ww6 of wild2 {
                        GHC.Base.Nothing
                        -> case Data.Maybe.fromJust1
                           ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           of {}
                        GHC.Base.Just x1
                        -> case GHC.Prim.dataToTag# @ Index.Lind_19 x1 of a#1 { DEFAULT ->
                           case GHC.Prim.==# a# a#1 of lwild {
                             DEFAULT
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_2
                                  GHC.Real.$fEnumRatio1
                             1#
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_1
                                  GHC.Real.$fEnumRatio1 } } } } } }) -}
b8d729de64aa88bcafaf8e863c425f78
  delta_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
f97612d6475ef583f48d38eaa5e03e1e
  delta_20 :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Strictness: m,
     Unfolding: (TensorF.Tensor
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   TensorF.delta_20F) -}
52cc529ba8faf2bb9c805cf5f9da2f3e
  delta_20F :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(SSLLLLLL),1*U(U,U,A,A,A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 0 0) ->
                 case w of ww { Index.Index ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case Data.Sequence.Internal.$wlookup
                        @ Index.Uind_20
                        0#
                        ww2 of wild1 {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1
                      ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      of {}
                   GHC.Base.Just x
                   -> case GHC.Prim.dataToTag# @ Index.Uind_20 x of a# { DEFAULT ->
                      case Data.Sequence.Internal.$wlookup
                             @ Index.Lind_20
                             0#
                             ww3 of wild2 {
                        GHC.Base.Nothing
                        -> case Data.Maybe.fromJust1
                           ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           of {}
                        GHC.Base.Just x1
                        -> case GHC.Prim.dataToTag# @ Index.Lind_20 x1 of a#1 { DEFAULT ->
                           case GHC.Prim.==# a# a#1 of lwild {
                             DEFAULT
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_2
                                  GHC.Real.$fEnumRatio1
                             1#
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_1
                                  GHC.Real.$fEnumRatio1 } } } } } }) -}
27886a7b472faca3c20231280697ecc8
  delta_3 :: TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
  {- Strictness: m,
     Unfolding: (TensorF.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ GHC.Real.Rational
                   TensorF.delta_3F) -}
bf9536544ef291975cbac6cfa7900203
  delta_3F :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(LLLLLLSS),1*U(A,A,A,A,A,A,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 1 1) ->
                 case w of ww { Index.Index ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case Data.Sequence.Internal.$wlookup
                        @ Index.Uind_3
                        0#
                        ww9 of wild1 {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1
                      ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      of {}
                   GHC.Base.Just x
                   -> case Data.Sequence.Internal.$wlookup
                             @ Index.Lind_3
                             0#
                             ww10 of wild2 {
                        GHC.Base.Nothing
                        -> case Data.Maybe.fromJust1
                           ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           of {}
                        GHC.Base.Just x1
                        -> case x1 of wild {
                             Index.L0_3
                             -> case x of wild3 {
                                  Index.U0_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_1
                                       GHC.Real.$fEnumRatio1
                                  Index.U1_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.U2_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.U3_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1 }
                             Index.L1_3
                             -> case x of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.U1_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_1
                                       GHC.Real.$fEnumRatio1 }
                             Index.L2_3
                             -> case x of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.U2_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_1
                                       GHC.Real.$fEnumRatio1 }
                             Index.L3_3
                             -> case x of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.U3_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_1
                                       GHC.Real.$fEnumRatio1 } } } } }) -}
6896071968ab4d74b186ad58a198061f
  delta_9 :: TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
  {- Strictness: m,
     Unfolding: (TensorF.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ GHC.Real.Rational
                   TensorF.delta_9F) -}
577fd50192ba1a75e167a0283d0b77b6
  delta_9F :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(LLLLSSLL),1*U(A,A,A,A,U,U,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 0 0) ->
                 case w of ww { Index.Index ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case Data.Sequence.Internal.$wlookup
                        @ Index.Uind_9
                        0#
                        ww7 of wild1 {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1
                      ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      of {}
                   GHC.Base.Just x
                   -> case GHC.Prim.dataToTag# @ Index.Uind_9 x of a# { DEFAULT ->
                      case Data.Sequence.Internal.$wlookup
                             @ Index.Lind_9
                             0#
                             ww8 of wild2 {
                        GHC.Base.Nothing
                        -> case Data.Maybe.fromJust1
                           ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           of {}
                        GHC.Base.Just x1
                        -> case GHC.Prim.dataToTag# @ Index.Lind_9 x1 of a#1 { DEFAULT ->
                           case GHC.Prim.==# a# a#1 of lwild {
                             DEFAULT
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_2
                                  GHC.Real.$fEnumRatio1
                             1#
                             -> GHC.Real.:%
                                  @ GHC.Integer.Type.Integer
                                  TensorF.delta_1
                                  GHC.Real.$fEnumRatio1 } } } } } }) -}
58741ea7a3ed3252ef36b4e52f7a9761
  epsilonMap ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Unfolding: (Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 0 0 0 0 0 0 4)
                   @ GHC.Real.Rational
                   TensorF.epsilonMap5
                   (TensorF.$sfromList2
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 0 0 0 0 0 0 4)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         TensorF.epsilonMap_inds
                         TensorF.epsilonMap1))) -}
08e6cdd26c8403ee17a058680bcfd4aa
  epsilonMap1 :: [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Unfolding: (GHC.Base.map
                   @ (Index.Index 0 0 0 0 0 0 0 4)
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   TensorF.epsilonMap4
                   TensorF.epsilonMap_inds) -}
726ea51dbd32eabd70457c3b59c196de
  epsilonMap2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
14978bf8011f73c397302da76715849a
  epsilonMap3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
efc991013f6bf5faff8135b07cdea875
  epsilonMap4 :: Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,U)>m -}
342c8dfa5926da869e0f0c50c0c3e34b
  epsilonMap5 ::
    Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Unfolding: (\ (ds :: Index.Index 0 0 0 0 0 0 0 4)
                   (x :: GHC.Real.Rational)[OneShot] ->
                 case x of wild1 { GHC.Real.:% b1 b2 ->
                 case GHC.Integer.Type.eqInteger# TensorF.delta_2 b1 of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             GHC.Real.$fEnumRatio1
                             b2 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } } }) -}
9dbe2fd0eea35d4c2157fff5a1836f94
  epsilonMap_inds :: [Index.Index 0 0 0 0 0 0 0 4]
  {- Unfolding: (TensorF.$w$stensorIndList
                   0#
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap2) -}
a90f6a94ba268d220d0b9ee78de306b7
  eta_F :: Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational
  {- Arity: 1, Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 0 2) ->
                 case w of ww { Index.Index ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 case Data.Sequence.Internal.$wlookup
                        @ Index.Lind_3
                        0#
                        ww10 of wild1 {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1
                      ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      of {}
                   GHC.Base.Just x
                   -> case x of wild {
                        Index.L0_3
                        -> case Data.Sequence.Internal.$wlookup
                                  @ Index.Lind_3
                                  1#
                                  ww10 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Maybe.fromJust1
                                ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                of {}
                             GHC.Base.Just x1
                             -> case x1 of wild3 {
                                  Index.L0_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_1
                                       GHC.Real.$fEnumRatio1
                                  Index.L1_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.L2_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.L3_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1 } }
                        Index.L1_3
                        -> case Data.Sequence.Internal.$wlookup
                                  @ Index.Lind_3
                                  1#
                                  ww10 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Maybe.fromJust1
                                ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                of {}
                             GHC.Base.Just x1
                             -> case x1 of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.L1_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.flatAreaSTMap_dt
                                       GHC.Real.$fEnumRatio1 } }
                        Index.L2_3
                        -> case Data.Sequence.Internal.$wlookup
                                  @ Index.Lind_3
                                  1#
                                  ww10 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Maybe.fromJust1
                                ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                of {}
                             GHC.Base.Just x1
                             -> case x1 of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.L2_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.flatAreaSTMap_dt
                                       GHC.Real.$fEnumRatio1 } }
                        Index.L3_3
                        -> case Data.Sequence.Internal.$wlookup
                                  @ Index.Lind_3
                                  1#
                                  ww10 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Maybe.fromJust1
                                ret_ty (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                of {}
                             GHC.Base.Just x1
                             -> case x1 of wild3 {
                                  DEFAULT
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.delta_2
                                       GHC.Real.$fEnumRatio1
                                  Index.L3_3
                                  -> GHC.Real.:%
                                       @ GHC.Integer.Type.Integer
                                       TensorF.flatAreaSTMap_dt
                                       GHC.Real.$fEnumRatio1 } } } } }) -}
e22bbfd56cdae0ded0c80d66a3b7dea5
  evalFullTensor ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8, GHC.Num.Num a,
     GHC.Classes.Eq a) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a -> [a]
  {- Arity: 11,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A><S,1*U(C(U))>,
     Inline: [0],
     Unfolding: InlineRule (11, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (w :: GHC.TypeNats.KnownNat n1)
                   (w1 :: GHC.TypeNats.KnownNat n2)
                   (w2 :: GHC.TypeNats.KnownNat n3)
                   (w3 :: GHC.TypeNats.KnownNat n4)
                   (w4 :: GHC.TypeNats.KnownNat n5)
                   (w5 :: GHC.TypeNats.KnownNat n6)
                   (w6 :: GHC.TypeNats.KnownNat n7)
                   (w7 :: GHC.TypeNats.KnownNat n8)
                   (w8 :: GHC.Num.Num a)
                   (w9 :: GHC.Classes.Eq a)
                   (w10 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w10 of ww { TensorF.Tensor ww2 ->
                 TensorF.$wevalFullTensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   w
                   w1
                   w2
                   w3
                   w4
                   w5
                   w6
                   w7
                   ww2 }) -}
67bbd2754e66b0e245e79cf8b650d27c
  evalTensor ::
    Index.Index n1 n2 n3 n4 n5 n6 n7 n8
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ m1)
         (n2 GHC.TypeNats.+ m2)
         (n3 GHC.TypeNats.+ m3)
         (n4 GHC.TypeNats.+ m4)
         (n5 GHC.TypeNats.+ m5)
         (n6 GHC.TypeNats.+ m6)
         (n7 GHC.TypeNats.+ m7)
         (n8 GHC.TypeNats.+ m8)
         a
    -> TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U,U,U,U,U,U,U,U)><S,1*U(C(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ m1 :: GHC.Types.Nat
                   @ m2 :: GHC.Types.Nat
                   @ m3 :: GHC.Types.Nat
                   @ m4 :: GHC.Types.Nat
                   @ m5 :: GHC.Types.Nat
                   @ m6 :: GHC.Types.Nat
                   @ m7 :: GHC.Types.Nat
                   @ m8 :: GHC.Types.Nat
                   @ a
                   (ind :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                   (ds :: TensorF.Tensor
                            (n1 GHC.TypeNats.+ m1)
                            (n2 GHC.TypeNats.+ m2)
                            (n3 GHC.TypeNats.+ m3)
                            (n4 GHC.TypeNats.+ m4)
                            (n5 GHC.TypeNats.+ m5)
                            (n6 GHC.TypeNats.+ m6)
                            (n7 GHC.TypeNats.+ m7)
                            (n8 GHC.TypeNats.+ m8)
                            a) ->
                 case ds of wild { TensorF.Tensor f ->
                 TensorF.Tensor
                   @ m1
                   @ m2
                   @ m3
                   @ m4
                   @ m5
                   @ m6
                   @ m7
                   @ m8
                   @ a
                   (\ (x :: Index.Index m1 m2 m3 m4 m5 m6 m7 m8) ->
                    f (Index.combineIndex
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         @ m1
                         @ m2
                         @ m3
                         @ m4
                         @ m5
                         @ m6
                         @ m7
                         @ m8
                         ind
                         x)) }) -}
6057a5f965169da0ceb96d3fba386bdb
  flatAreaMap ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (intJMap :: Data.Map.Internal.Map
                                 (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational)
                   (flatMap :: Data.Map.Internal.Map
                                 (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd
                        (\ (x :: Index.Index 0 0 0 0 0 0 0 4) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 0 0 0 0 0 0 4)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 4)
                                x
                                flatMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        (\ (x :: Index.Index 0 1 0 0 0 0 4 0) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 1 0 0 0 0 4 0)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 1 @ 0 @ 0 @ 0 @ 0 @ 4 @ 0)
                                x
                                intJMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d
                           GHC.Base.Just v -> v }) of ww { Unit# ww2 ->
                 case TensorF.$w$stensorContract_4
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap11
                        ww2
                          `cast`
                        ((Index.Index
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 1, 1>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 4, 3 GHC.TypeNats.+ 1>
                            <4 GHC.TypeNats.+ 0, 3 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww3 { Unit# ww5 ->
                 case TensorF.$w$stensorContract_2
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap9
                        ww5
                          `cast`
                        ((Index.Index
                            <0>_P
                            <1>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <3, 2 GHC.TypeNats.+ 1>
                            <3, 2 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww6 { Unit# ww7 ->
                 case TensorF.$w$stensorContract_1
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap7
                        ww7
                          `cast`
                        ((Index.Index
                            <0>_P
                            <1>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <2, 1 GHC.TypeNats.+ 1>
                            <2, 1 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww8 { Unit# ww9 ->
                 case TensorF.$w$stensorContract_3
                        @ 0
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap6
                        ww9
                          `cast`
                        ((Index.Index
                            <0>_P
                            <1>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <1, 0 GHC.TypeNats.+ 1>
                            <1, 0 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww10 { Unit# ww11 ->
                 TensorF.$w$stensor2Map ww11 } } } } }) -}
1526ff15b4f6a37a4666e758aa284ef0
  flatAreaMap1 ::
    Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 0 0) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
a27b3d5843db8fa11f85181957492169
  flatAreaMap10 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
51573f639959c48f22c70b1c69c15187
  flatAreaMap11 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap12, TensorF.flatAreaMap12)) -}
06c0f803f7bd7266fcffe70aa9be156c
  flatAreaMap12 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
607b645cb97b7eaf4060546348b8a5fb
  flatAreaMap13 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap14)) -}
74f56bcc587aeddf3ea9890d26ee749f
  flatAreaMap14 :: GHC.Types.Int
  {- Unfolding: (case TensorF.flatAreaMap15 of wild {
                   GHC.Natural.NatS# w
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.wordToInteger w) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 }
                   GHC.Natural.NatJ# dt
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.Jp# dt) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 } }) -}
fac8b1d05caaa7b2f253cf1836316051
  flatAreaMap15 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.flatAreaMap16 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
711e94c7a348de2932ab176fb68bdda8
  flatAreaMap16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
2fa9c3210be48a130a31d473ecf9a765
  flatAreaMap2 :: GHC.Types.Int
  {- Unfolding: (case TensorF.flatAreaMap3 of wild {
                   GHC.Natural.NatS# w
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.wordToInteger w) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 }
                   GHC.Natural.NatJ# dt
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.Jp# dt) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 } }) -}
2a918dcdcc77a32f4e0a375f81a02c74
  flatAreaMap3 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.delta_1 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
ccd34f5699e9c178749e75bb9e81862b
  flatAreaMap4 :: GHC.Types.Int
  {- Unfolding: (case TensorF.flatAreaMap5 of wild {
                   GHC.Natural.NatS# w
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.wordToInteger w) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 }
                   GHC.Natural.NatJ# dt
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.Jp# dt) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 } }) -}
00334d88bf0c1e17b01f7df1aa0365cf
  flatAreaMap5 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.delta_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
ff77fc144a2bf43e2a5eae66a79426cb
  flatAreaMap6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.epsilonMap3, TensorF.epsilonMap3)) -}
133acd5b6e06d1052bc4eb24cb972176
  flatAreaMap7 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap8, TensorF.flatAreaMap8)) -}
0db1632590b571a752693c035ca2e863
  flatAreaMap8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
431af8b9257386c248fb52cb123cefaa
  flatAreaMap9 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap10, TensorF.flatAreaMap10)) -}
2e922b94588c1d16ac6426588160bb9b
  flatAreaMap_d :: GHC.Real.Rational
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   TensorF.delta_2
                   GHC.Real.$fEnumRatio1) -}
fc10e027ee295f21bea88bfa8469657e
  flatAreaMap_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 4)
      (4 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 0 0 0 4, Index.Index 0 1 0 0 0 0 4 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap15
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap15
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap13) -}
9af58838ca78e2e7187b6f4fec322272
  flatAreaSTMap ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eps :: Data.Map.Internal.Map
                             (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational) ->
                 case TensorF.flatAreaSTMap2 of wild { TensorF.Tensor f ->
                 TensorF.$w$stensor2Map1
                   (\ (r1 :: Index.Index 0 0 0 0 0 0 0 4) ->
                    case Data.Map.Internal.lookup
                           @ (Index.Index 0 0 0 0 0 0 0 4)
                           @ GHC.Real.Rational
                           (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 4)
                           r1
                           eps of wild1 {
                      GHC.Base.Nothing
                      -> case f r1 of ww { GHC.Real.:% ww2 ww3 ->
                         case GHC.Real.$w$sreduce
                                TensorF.delta_2
                                TensorF.delta_1 of ww6 { (#,#) ww7 ww8 ->
                         case GHC.Real.$w$s$c+ ww2 ww3 ww7 ww8 of ww5 { (#,#) ww9 ww10 ->
                         GHC.Real.:% @ GHC.Integer.Type.Integer ww9 ww10 } } }
                      GHC.Base.Just v
                      -> case f r1 of ww { GHC.Real.:% ww2 ww3 ->
                         case v of ww5 { GHC.Real.:% ww6 ww7 ->
                         case GHC.Real.$w$sreduce
                                (GHC.Integer.Type.timesInteger TensorF.flatAreaSTMap_dt ww6)
                                (GHC.Integer.Type.timesInteger
                                   GHC.Real.$fEnumRatio1
                                   ww7) of ww8 { (#,#) ww9 ww10 ->
                         case GHC.Real.$w$s$c+ ww2 ww3 ww9 ww10 of ww11 { (#,#) ww12 ww13 ->
                         GHC.Real.:% @ GHC.Integer.Type.Integer ww12 ww13 } } } } }) }) -}
06453d515bf42114b4370b03d2f7576b
  flatAreaSTMap1 ::
    Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 0 4) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
8ddd73214e6b265ab077ee21946cd2c7
  flatAreaSTMap2 :: TensorF.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: (case TensorF.$w$stensorProd1
                        TensorF.eta_F
                        TensorF.eta_F of ww { Unit# ww2 ->
                 TensorF.Tensor
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ GHC.Real.Rational
                   (\ (r1 :: Index.Index 0 0 0 0 0 0 0 4) ->
                    case ww2
                           (Index.swapPosIndex
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 4
                              TensorF.flatAreaSTMap_i
                              TensorF.flatAreaSTMap_pair2
                              r1)
                             `cast`
                           (Index.Index
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <4, 2 GHC.TypeNats.+ 2>)_R of ww3 { GHC.Real.:% ww5 ww6 ->
                    case ww2
                           (Index.swapPosIndex
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 4
                              TensorF.flatAreaSTMap_i
                              TensorF.flatAreaSTMap_pair1
                              (Index.swapPosIndex
                                 @ 0
                                 @ 0
                                 @ 0
                                 @ 0
                                 @ 0
                                 @ 0
                                 @ 0
                                 @ 4
                                 TensorF.flatAreaSTMap_i
                                 TensorF.flatAreaSTMap_pair
                                 r1))
                             `cast`
                           (Index.Index
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <4, 2 GHC.TypeNats.+ 2>)_R of ww7 { GHC.Real.:% ww8 ww9 ->
                    case GHC.Real.$w$sreduce
                           (GHC.Integer.Type.timesInteger TensorF.flatAreaSTMap_dt ww8)
                           (GHC.Integer.Type.timesInteger
                              GHC.Real.$fEnumRatio1
                              ww9) of ww10 { (#,#) ww11 ww12 ->
                    case GHC.Real.$w$s$c+
                           ww5
                           ww6
                           ww11
                           ww12 of ww13 { (#,#) ww14 ww15 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww14 ww15 } } } }) }) -}
230210e2b26937c4dbadf8a50dbb19a9
  flatAreaSTMap3 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.flatAreaSTMap4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
bccd377024fb54cb48fe952bf8b0cdfe
  flatAreaSTMap4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
e593b6d88e7d993b24c627db649156c2
  flatAreaSTMap_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
fc538a28ac9b0ff682db66fda0e75e3c
  flatAreaSTMap_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 2)
    -> (Index.Index 0 0 0 0 0 0 0 2, Index.Index 0 0 0 0 0 0 0 2)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap_rank) -}
e2b4a2de82cceffcc399ec06f7967f67
  flatAreaSTMap_i :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
20274358421382413b20fbe185c6682d
  flatAreaSTMap_pair :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap8, TensorF.flatAreaMap12)) -}
995e75cd5cf0305c9f716f2bc9794214
  flatAreaSTMap_pair1 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap10, TensorF.flatAreaMap12)) -}
e2865b3223045b62941c2a1fe5a9e624
  flatAreaSTMap_pair2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap8, TensorF.flatAreaMap10)) -}
dc5f2ded20bd7bcef11f56ccbe2f9183
  flatAreaSTMap_rank :: TensorF.Rank
  {- Unfolding: (case TensorF.$wgetRank
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ GHC.Real.Rational
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaSTMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10) }) -}
78e1326fb30bffbc9cadb41fcac9ca58
  flatInterMap ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (flatA :: Data.Map.Internal.Map
                               (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational)
                   (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd2
                        (\ (x :: Index.Index 1 1 0 0 0 0 1 1) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 1 1 0 0 0 0 1 1)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                                x
                                intArea of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        (\ (x :: Index.Index 0 1 0 0 0 0 0 0) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 1 0 0 0 0 0 0)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0)
                                x
                                flatA of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d
                           GHC.Base.Just v -> v }) of ww { Unit# ww2 ->
                 case TensorF.$w$stensorContract_20
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        TensorF.flatInterMap2
                        ww2
                          `cast`
                        ((Index.Index
                            <1 GHC.TypeNats.+ 0, 0 GHC.TypeNats.+ 1>
                            <1 GHC.TypeNats.+ 1>_P
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <1 GHC.TypeNats.+ 0, 1>
                            <1 GHC.TypeNats.+ 0, 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww3 { Unit# ww5 ->
                 TensorF.$w$stensor2Map2 ww5 } }) -}
d9efa7758331dc972c27461f205ea878
  flatInterMap1 ::
    Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
3569f3d5ec15a970c4616d57625ec37f
  flatInterMap2 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.epsilonMap3, TensorF.flatAreaMap8)) -}
33ba264685fa20da8364d6cb8bca81d6
  flatInterMap3 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap2, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap2)) -}
b78078c5c9689549af0d237ede7b6e57
  flatInterMap_g ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap3) -}
afe2fb10b060fcfd26af0f6b70a6c15d
  intAIB ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> TensorF.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,A><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational)
                   (w1 :: Data.Map.Internal.Map
                            (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational)
                   (w2 :: Data.Map.Internal.Map
                            (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational)
                   (w3 :: Data.Map.Internal.Map
                            (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational) ->
                 case TensorF.$wintAIB w w2 w3 of ww { Unit# ww2 ->
                 TensorF.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww2 }) -}
23f3a303cb182c73c79fef8534de8467
  interArea ::
    Data.Map.Internal.Map
      (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (iMap :: Data.Map.Internal.Map
                              (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational)
                   (jMap :: Data.Map.Internal.Map
                              (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd3
                        (\ (x :: Index.Index 1 0 0 0 0 0 0 4) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 1 0 0 0 0 0 0 4)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 4)
                                x
                                iMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        (\ (x :: Index.Index 0 1 0 0 0 0 4 0) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 1 0 0 0 0 4 0)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 1 @ 0 @ 0 @ 0 @ 0 @ 4 @ 0)
                                x
                                jMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d
                           GHC.Base.Just v -> v }) of ww { Unit# ww2 ->
                 case TensorF.$w$stensorContract_4
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap11
                        ww2
                          `cast`
                        ((Index.Index
                            <1 GHC.TypeNats.+ 0, 1>
                            <0 GHC.TypeNats.+ 1, 1>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 4, 3 GHC.TypeNats.+ 1>
                            <4 GHC.TypeNats.+ 0, 3 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww3 { Unit# ww5 ->
                 case TensorF.$w$stensorContract_2
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap9
                        ww5
                          `cast`
                        ((Index.Index
                            <1>_P
                            <1>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <3, 2 GHC.TypeNats.+ 1>
                            <3, 2 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww6 { Unit# ww7 ->
                 case TensorF.$w$stensorContract_1
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        TensorF.flatAreaMap7
                        ww7
                          `cast`
                        ((Index.Index
                            <1>_P
                            <1>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <0>_P
                            <2, 1 GHC.TypeNats.+ 1>
                            <2, 1 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww8 { Unit# ww9 ->
                 TensorF.$w$stensor2Map3
                   (\ (x :: Index.Index 1 1 0 0 0 0 1 1) ->
                    case ww9 x of ww10 { GHC.Real.:% ww11 ww12 ->
                    case GHC.Real.$w$sreduce
                           (GHC.Integer.Type.timesInteger TensorF.interArea_dt ww11)
                           (GHC.Integer.Type.timesInteger
                              GHC.Real.$fEnumRatio1
                              ww12) of ww13 { (#,#) ww14 ww15 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww14 ww15 } }) } } } }) -}
f456f8dc319e666cbfaee507d5a03178
  interArea1 ::
    Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
a6f0d0aa99dc19c457e494264d305bce
  interArea2 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap2, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap14)) -}
ef4c7954b835f7e1de03933146c3d35b
  interArea_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-4) -}
b537969834f6798b5badcbbe0d4115f9
  interArea_g ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 4)
      (4 GHC.TypeNats.+ 0)
    -> (Index.Index 1 0 0 0 0 0 0 4, Index.Index 0 1 0 0 0 0 4 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap15
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap15
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interArea2) -}
8547631db6137b3d88ac2bfdab034a7c
  interEqn1_1 ::
    Index.Index 1 1 0 0 0 0 2 2 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 2 2) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
2cbc03743ae8312ddceef5ea5d9b11c4
  interEqn1_2 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd6
                        (\ (x :: Index.Index 1 1 0 0 0 0 1 1) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 1 1 0 0 0 0 1 1)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                                x
                                intArea of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        TensorF.delta_3F of ww { Unit# ww2 ->
                 case TensorF.interEqn1_6
                        `cast`
                      (TensorF.Tensor
                         <0 GHC.TypeNats.+ 1, 1>
                         <0 GHC.TypeNats.+ 1, 1>
                         <0 GHC.TypeNats.+ 0, 0>
                         <0 GHC.TypeNats.+ 0, 0>
                         <0 GHC.TypeNats.+ 0, 0>
                         <0 GHC.TypeNats.+ 0, 0>
                         <2 GHC.TypeNats.+ 0, 2>
                         <2 GHC.TypeNats.+ 0, 2>
                         <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor g ->
                 TensorF.$w$stensor2Map4
                   (\ (r1 :: Index.Index 1 1 0 0 0 0 2 2) ->
                    case ww2
                           r1
                             `cast`
                           (Index.Index
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <2, 1 GHC.TypeNats.+ 1>
                              <2, 1 GHC.TypeNats.+ 1>)_R of ww3 { GHC.Real.:% ww5 ww6 ->
                    case g r1 of ww7 { GHC.Real.:% ww8 ww9 ->
                    case GHC.Real.$w$sreduce
                           (GHC.Integer.Type.timesInteger TensorF.flatAreaSTMap_dt ww8)
                           (GHC.Integer.Type.timesInteger
                              GHC.Real.$fEnumRatio1
                              ww9) of ww10 { (#,#) ww11 ww12 ->
                    case GHC.Real.$w$s$c+
                           ww5
                           ww6
                           ww11
                           ww12 of ww13 { (#,#) ww14 ww15 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww14 ww15 } } } }) } }) -}
4c335462d72c6574a034f3428ca644bb
  interEqn1_2_g ::
    Index.Index
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 0 0 2 2, Index.Index 1 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interEqn1_2_rank) -}
1cbc68777191c00d15530e9bb7d1f367
  interEqn1_2_g1 ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 0 0 0 0 0 0 1 1, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.interEqn1_2_rank1) -}
f7ce8c87a5440a9b64517cb8e3a9e45f
  interEqn1_2_g2 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatInterMap3) -}
050fe59e0ad7e505c4416d091b4e5808
  interEqn1_2_rank :: TensorF.Rank
  {- Unfolding: (case TensorF.$wgetRank
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 2
                        @ 2
                        @ GHC.Real.Rational
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaSTMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                        TensorF.flatAreaSTMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10) }) -}
5ab4d72b8eff84cd7c406bb74ee68ce7
  interEqn1_2_rank1 :: TensorF.Rank
  {- Unfolding: (case TensorF.$wgetRank
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ GHC.Real.Rational
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        TensorF.flatAreaMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N) of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10) }) -}
6224d247a4ae97b3bef223939df1f3e2
  interEqn1_3 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (intMetric :: Data.Map.Internal.Map
                                   (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational)
                   (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd8
                        (\ (x :: Index.Index 1 1 0 0 0 0 1 1) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 1 1 0 0 0 0 1 1)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1)
                                x
                                intArea of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        TensorF.delta_9F of ww { Unit# ww2 ->
                 case TensorF.$w$stensorProd7
                        (\ (x :: Index.Index 0 0 0 0 1 1 1 1) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 0 0 0 1 1 1 1)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 1 @ 1)
                                x
                                intMetric of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        TensorF.delta_20F of ww3 { Unit# ww5 ->
                 TensorF.$w$stensor2Map5
                   (\ (r1 :: Index.Index 1 1 0 0 1 1 1 1) ->
                    case ww2
                           r1
                             `cast`
                           (Index.Index
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <1, 0 GHC.TypeNats.+ 1>
                              <1, 0 GHC.TypeNats.+ 1>
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>)_R of ww6 { GHC.Real.:% ww7 ww8 ->
                    case ww5
                           r1
                             `cast`
                           (Index.Index
                              <1, 0 GHC.TypeNats.+ 1>
                              <1, 0 GHC.TypeNats.+ 1>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>
                              <1, 1 GHC.TypeNats.+ 0>)_R of ww9 { GHC.Real.:% ww10 ww11 ->
                    case GHC.Real.$w$s$c+
                           ww7
                           ww8
                           ww10
                           ww11 of ww12 { (#,#) ww13 ww14 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww13 ww14 } } }) } }) -}
1079ee4ea791099cfc30d71a48d1f39d
  interEqn1_3_g ::
    Index.Index
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 1 1 1 1, Index.Index 1 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interEqn1_8) -}
ae998cca493894c7d768dd46d24ac80e
  interEqn1_3_g1 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 0 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap3) -}
3d290f70620b6cbcfd843c3c70e4aa07
  interEqn1_5 :: GHC.Types.Int
  {- Unfolding: (case TensorF.flatAreaSTMap3 of wild {
                   GHC.Natural.NatS# w
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.wordToInteger w) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 }
                   GHC.Natural.NatJ# dt
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Integer.Type.Jp# dt) of wild1 { DEFAULT ->
                      GHC.Types.I# wild1 } }) -}
46100da69d663d0d95be7c3c457f2cea
  interEqn1_6 ::
    TensorF.Tensor
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: (case TensorF.$w$stensorProd5
                        TensorF.delta_3F
                        TensorF.delta_3F of ww { Unit# ww2 ->
                 case TensorF.$w$stensorProd4
                        (\ (x :: Index.Index 0 0 0 0 0 0 2 2) ->
                         ww2
                           (Index.swapPosIndex
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 0
                              @ 2
                              @ 2
                              TensorF.flatAreaSTMap_i
                              TensorF.flatInterMap2
                              x)
                             `cast`
                           (Index.Index
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <0, 0 GHC.TypeNats.+ 0>
                              <2, 1 GHC.TypeNats.+ 1>
                              <2, 1 GHC.TypeNats.+ 1>)_R)
                        TensorF.delta_20F of ww3 { Unit# ww5 ->
                 TensorF.Tensor
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww5 } }) -}
a47b67f9c1c6aa1d9d5818f4710f3845
  interEqn1_7 ::
    Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 1 1 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
21bf59a8f0eaaa266a4ea200b8f8796c
  interEqn1_8 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap2, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap2)) -}
3aa35fe74f90776a7567c204d4b9204c
  interMetric ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (iMap :: Data.Map.Internal.Map
                              (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational)
                   (jMap :: Data.Map.Internal.Map
                              (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational) ->
                 case TensorF.$w$stensorProd9
                        (\ (x :: Index.Index 0 0 0 0 1 0 0 2) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 0 0 0 1 0 0 2)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 1 @ 0 @ 0 @ 2)
                                x
                                iMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d GHC.Base.Just v -> v })
                        (\ (x :: Index.Index 0 0 0 0 0 1 2 0) ->
                         case Data.Map.Internal.lookup
                                @ (Index.Index 0 0 0 0 0 1 2 0)
                                @ GHC.Real.Rational
                                (Index.$fOrdIndex @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 2 @ 0)
                                x
                                jMap of wild {
                           GHC.Base.Nothing -> TensorF.flatAreaMap_d
                           GHC.Base.Just v -> v }) of ww { Unit# ww2 ->
                 case TensorF.$w$stensorContract_1
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        TensorF.flatAreaMap6
                        ww2
                          `cast`
                        ((Index.Index
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <0 GHC.TypeNats.+ 0, 0>
                            <1 GHC.TypeNats.+ 0, 1>
                            <0 GHC.TypeNats.+ 1, 1>
                            <0 GHC.TypeNats.+ 2, 1 GHC.TypeNats.+ 1>
                            <2 GHC.TypeNats.+ 0, 1 GHC.TypeNats.+ 1>)_R
                         ->_R <GHC.Real.Rational>_R) of ww3 { Unit# ww5 ->
                 TensorF.$w$stensor2Map6
                   (\ (x :: Index.Index 0 0 0 0 1 1 1 1) ->
                    case ww5 x of ww6 { GHC.Real.:% ww7 ww8 ->
                    case GHC.Real.$w$sreduce
                           (GHC.Integer.Type.timesInteger TensorF.interMetric_dt ww7)
                           (GHC.Integer.Type.timesInteger
                              GHC.Real.$fEnumRatio1
                              ww8) of ww9 { (#,#) ww10 ww11 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww10 ww11 } }) } }) -}
c8cc9d62aaca00162b650c8801d4ff43
  interMetric1 ::
    Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl ww2 ww3 }) -}
a5243dfe6a940b6a54eb5b34ec202da5
  interMetric2 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.interEqn1_5)) -}
774cc3205e6c465b38207f88227466e0
  interMetric_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-2) -}
b2c1adb2d7d9b3407302f41fd5537f21
  interMetric_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 2)
      (2 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 1 0 0 2, Index.Index 0 0 0 0 0 1 2 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ 0
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interMetric2) -}
07642ddce5db885ee0655507ba93e7d7
  inter_I2Map ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
b4db1faa07c42ac0815de057cd86ed42
  inter_I3Map ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map
         (Index.Index 0 0 1 0 0 0 0 3) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (trian :: Data.Map.Internal.Map
                               (Index.Linds_3 3) Index.Uind_19) ->
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index 0 0 1 0 0 0 0 3)
                   @ GHC.Real.Rational
                   TensorF.inter_I3Map3
                   (TensorF.$sfromList20
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (GHC.List.zip
                         @ (Index.Index 0 0 1 0 0 0 0 3)
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         TensorF.inter_I3Map_inds
                         (GHC.Base.map
                            @ (Index.Index 0 0 1 0 0 0 0 3)
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            (\ (ds :: Index.Index 0 0 1 0 0 0 0 3) ->
                             case ds of wild { Index.Index dt dt1 dt2 dt3 dt4 dt5 dt6 dt7 ->
                             let {
                               $j :: Data.Sequence.Internal.Seq Index.Lind_3 -> GHC.Real.Rational
                                 <join 1> {- Arity: 1, Strictness: <S,U>m -}
                               = \ (ww :: Data.Sequence.Internal.Seq Index.Lind_3)[OneShot] ->
                                 case TensorF.$wpoly_go3 @ Index.Uind_19 ww trian of x1 { DEFAULT ->
                                 case GHC.Prim.dataToTag# @ Index.Uind_19 x1 of a# { DEFAULT ->
                                 case Data.Sequence.Internal.$wlookup
                                        @ Index.Uind_19
                                        0#
                                        dt2 of wild1 {
                                   GHC.Base.Nothing
                                   -> case Data.Maybe.fromJust1 ret_ty GHC.Real.Rational of {}
                                   GHC.Base.Just x
                                   -> case GHC.Prim.dataToTag# @ Index.Uind_19 x of b# { DEFAULT ->
                                      case GHC.Prim.==# a# b# of lwild {
                                        DEFAULT -> TensorF.flatAreaMap_d
                                        1# -> TensorF.inter_I3Map2 } } } } }
                             } in
                             case Data.Sequence.Internal.Sorting.$wbuildIQ
                                    @ Index.Lind_3
                                    @ Index.Lind_3
                                    Index.$fOrdLind_3_$ccompare
                                    (Data.Sequence.Internal.Sorting.sortBy1 @ Index.Lind_3)
                                    0#
                                    dt7
                                      `cast`
                                    (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R) of wild1 {
                               GHC.Base.Nothing
                               -> $j
                                    (Data.Sequence.Internal.EmptyT
                                       @ (Data.Sequence.Internal.Elem Index.Lind_3))
                                      `cast`
                                    (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R))
                               GHC.Base.Just x
                               -> case dt7
                                         `cast`
                                       (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R) of wild2 {
                                    Data.Sequence.Internal.EmptyT
                                    -> case (Data.Sequence.Internal.$w$sapplicativeTree1
                                               @ (Data.Sequence.Internal.Sorting.IndexedQueue
                                                    Index.Lind_3)
                                               @ (Data.Sequence.Internal.Elem Index.Lind_3)
                                               0#
                                               1#
                                               TensorF.inter_I3Map1
                                                 `cast`
                                               (Sym (Utils.Containers.Internal.State.N:State[0]
                                                         <Data.Sequence.Internal.Sorting.IndexedQueue
                                                            Index.Lind_3>_R
                                                         <Data.Sequence.Internal.Elem
                                                            Index.Lind_3>_R)))
                                              `cast`
                                            (Utils.Containers.Internal.State.N:State[0]
                                                 <Data.Sequence.Internal.Sorting.IndexedQueue
                                                    Index.Lind_3>_R
                                                 <Data.Sequence.Internal.FingerTree
                                                    (Data.Sequence.Internal.Elem Index.Lind_3)>_R)
                                              x of wild3 { (,) s' x1 ->
                                       $j
                                         x1
                                           `cast`
                                         (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R)) }
                                    Data.Sequence.Internal.Single x1
                                    -> case (Data.Sequence.Internal.$w$sapplicativeTree1
                                               @ (Data.Sequence.Internal.Sorting.IndexedQueue
                                                    Index.Lind_3)
                                               @ (Data.Sequence.Internal.Elem Index.Lind_3)
                                               1#
                                               1#
                                               TensorF.inter_I3Map1
                                                 `cast`
                                               (Sym (Utils.Containers.Internal.State.N:State[0]
                                                         <Data.Sequence.Internal.Sorting.IndexedQueue
                                                            Index.Lind_3>_R
                                                         <Data.Sequence.Internal.Elem
                                                            Index.Lind_3>_R)))
                                              `cast`
                                            (Utils.Containers.Internal.State.N:State[0]
                                                 <Data.Sequence.Internal.Sorting.IndexedQueue
                                                    Index.Lind_3>_R
                                                 <Data.Sequence.Internal.FingerTree
                                                    (Data.Sequence.Internal.Elem Index.Lind_3)>_R)
                                              x of wild3 { (,) s' x2 ->
                                       $j
                                         x2
                                           `cast`
                                         (Sym (Data.Sequence.Internal.N:Seq[0] <Index.Lind_3>_R)) }
                                    Data.Sequence.Internal.Deep dt8 ds1 ds2 ds3
                                    -> case GHC.Prim.>=# dt8 0# of lwild {
                                         DEFAULT
                                         -> case Data.Sequence.Internal.$fIsListSeq3
                                            ret_ty GHC.Real.Rational
                                            of {}
                                         1#
                                         -> case (Data.Sequence.Internal.$w$sapplicativeTree1
                                                    @ (Data.Sequence.Internal.Sorting.IndexedQueue
                                                         Index.Lind_3)
                                                    @ (Data.Sequence.Internal.Elem Index.Lind_3)
                                                    dt8
                                                    1#
                                                    TensorF.inter_I3Map1
                                                      `cast`
                                                    (Sym (Utils.Containers.Internal.State.N:State[0]
                                                              <Data.Sequence.Internal.Sorting.IndexedQueue
                                                                 Index.Lind_3>_R
                                                              <Data.Sequence.Internal.Elem
                                                                 Index.Lind_3>_R)))
                                                   `cast`
                                                 (Utils.Containers.Internal.State.N:State[0]
                                                      <Data.Sequence.Internal.Sorting.IndexedQueue
                                                         Index.Lind_3>_R
                                                      <Data.Sequence.Internal.FingerTree
                                                         (Data.Sequence.Internal.Elem
                                                            Index.Lind_3)>_R)
                                                   x of wild3 { (,) s' x1 ->
                                            $j
                                              x1
                                                `cast`
                                              (Sym (Data.Sequence.Internal.N:Seq[0]
                                                        <Index.Lind_3>_R)) } } } } })
                            TensorF.inter_I3Map_inds)))) -}
9c21d7fb5edf80d0b769447ded573fd4
  inter_I3Map1 ::
    Data.Sequence.Internal.Sorting.IndexedQueue Index.Lind_3
    -> (Data.Sequence.Internal.Sorting.IndexedQueue Index.Lind_3,
        Data.Sequence.Internal.Elem Index.Lind_3)
  {- Arity: 1, Strictness: <S(LSL),1*U(A,U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Data.Sequence.Internal.Sorting.IndexedQueue
                             Index.Lind_3) ->
                 case eta of ww2 { Data.Sequence.Internal.Sorting.IQ ww3 ww5 ww6 ->
                 case Data.Sequence.Internal.Sorting.$wpopMinIQ
                        @ Index.Lind_3
                        Index.$fOrdLind_3_$ccompare
                        ww5
                        ww6 of ww7 { (#,#) ww8 ww9 ->
                 (ww8,
                  ww9
                    `cast`
                  (Sym (Data.Sequence.Internal.N:Elem[0] <Index.Lind_3>_R))) } }) -}
27cb11b86a835249ca5e2200fabf137b
  inter_I3Map2 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   TensorF.delta_1
                   GHC.Real.$fEnumRatio1) -}
d80cd59582dd7ebc5c4cd2bba89eca32
  inter_I3Map3 ::
    Index.Index 0 0 1 0 0 0 0 3 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 0 0 3) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww2 ww3 -> TensorF.$wlvl1 ww2 ww3 }) -}
f91bafaac8c976f5246a092442d837ca
  inter_I3Map_inds :: [Index.Index 0 0 1 0 0 0 0 3]
  {- Unfolding: (TensorF.$w$stensorIndList10
                   0#
                   TensorF.epsilonMap3
                   TensorF.flatAreaMap8
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.epsilonMap3
                   TensorF.flatAreaMap12) -}
26e600a5b766f5bf585e26bd10eb7788
  inter_IAreaMap ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map
         (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
d80ca6b021b77a5d5f075a902b7a9955
  inter_J2Map ::
    Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
74ac273fe9e608c3e2a00d2a50921cd5
  inter_J3Map ::
    Data.Map.Internal.Map (Index.Uinds_3 3) Index.Lind_19
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 1 0 0 3 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
f2ccfef6ff490613b7f5bcd4d3ff1e7f
  inter_JAreaMap ::
    Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
a268fea90de0ec5ae142ded44f5f1560
  mkTensorFromMap ::
    GHC.Num.Num a =>
    Data.Map.Internal.Map (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,A,A,A,A,A,1*C1(U))><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: Data.Map.Internal.Map
                            (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a) ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   (let {
                      d :: a = GHC.Num.fromInteger @ a w TensorF.delta_2
                    } in
                    \ (x :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    case Data.Map.Internal.lookup
                           @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                           @ a
                           (Index.$fOrdIndex @ n1 @ n2 @ n3 @ n4 @ n5 @ n6 @ n7 @ n8)
                           x
                           w1 of wild {
                      GHC.Base.Nothing -> d GHC.Base.Just v -> v })) -}
78a16fcff0dd3a46bfc3b04d91d9886c
  tensor2Map ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8, GHC.Num.Num a,
     GHC.Classes.Eq a) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> Data.Map.Internal.Map (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a
  {- Arity: 11,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U(A,A,A,A,A,A,1*C1(U))><L,U(A,C(C1(U)))><S,1*U(C(U))>,
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   ($dKnownNat1 :: GHC.TypeNats.KnownNat n1)
                   ($dKnownNat2 :: GHC.TypeNats.KnownNat n2)
                   ($dKnownNat3 :: GHC.TypeNats.KnownNat n3)
                   ($dKnownNat4 :: GHC.TypeNats.KnownNat n4)
                   ($dKnownNat5 :: GHC.TypeNats.KnownNat n5)
                   ($dKnownNat6 :: GHC.TypeNats.KnownNat n6)
                   ($dKnownNat7 :: GHC.TypeNats.KnownNat n7)
                   ($dKnownNat8 :: GHC.TypeNats.KnownNat n8)
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a)
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case ds of wild { TensorF.Tensor f ->
                 case TensorF.$wgetRank
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        @ a
                        $dKnownNat1
                        $dKnownNat2
                        $dKnownNat3
                        $dKnownNat4
                        $dKnownNat5
                        $dKnownNat6
                        $dKnownNat7
                        $dKnownNat8 of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 let {
                   ds1 :: a = GHC.Num.fromInteger @ a $dNum TensorF.delta_2
                 } in
                 let {
                   indList :: [Index.Index n1 n2 n3 n4 n5 n6 n7 n8]
                   = TensorF.tensorIndList
                       @ n1
                       @ n2
                       @ n3
                       @ n4
                       @ n5
                       @ n6
                       @ n7
                       @ n8
                       $dKnownNat1
                       $dKnownNat2
                       $dKnownNat3
                       $dKnownNat4
                       $dKnownNat5
                       $dKnownNat6
                       $dKnownNat7
                       $dKnownNat8
                       (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10)
                 } in
                 Data.Map.Internal.filterWithKey
                   @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                   @ a
                   (\ (ds2 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                      (x :: a)[OneShot] ->
                    GHC.Classes./= @ a $dEq x ds1)
                   (Data.Map.Internal.fromList
                      @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                      @ a
                      (Index.$fOrdIndex @ n1 @ n2 @ n3 @ n4 @ n5 @ n6 @ n7 @ n8)
                      (GHC.List.zip
                         @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                         @ a
                         indList
                         (GHC.Base.map
                            @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                            @ a
                            f
                            indList))) } }) -}
d543587f81315595bf970b8487c94895
  tensorAdd ::
    GHC.Num.Num a =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><S,1*U(C(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (w2 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w1 of ww { TensorF.Tensor ww2 ->
                 case w2 of ww3 { TensorF.Tensor ww5 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   (\ (r1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    GHC.Num.+ @ a w (ww2 r1) (ww5 r1)) } }) -}
4abd2ae5f9f2bdb8da46ff97b35e11b0
  tensorContract_19 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n3,
     GHC.TypeNats.KnownNat n4) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n3)
                   (w2 :: GHC.TypeNats.KnownNat n4)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww2 ->
                 case TensorF.$wtensorContract_19
                        @ a
                        @ n3
                        @ n4
                        @ n1
                        @ n2
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        w3
                        ww2 of ww3 { Unit# ww5 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww5 } }) -}
27ee3aff70c728fee3810fe7c39266f9
  tensorContract_20 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n1,
     GHC.TypeNats.KnownNat n2) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n1)
                   (w2 :: GHC.TypeNats.KnownNat n2)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww2 ->
                 case TensorF.$wtensorContract_20
                        @ a
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        w3
                        ww2 of ww3 { Unit# ww5 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww5 } }) -}
d04698d6374f47f221185e75ed0a0237
  tensorContract_3 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n7,
     GHC.TypeNats.KnownNat n8) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1) a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n7)
                   (w2 :: GHC.TypeNats.KnownNat n8)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1) a) ->
                 case w4 of ww { TensorF.Tensor ww2 ->
                 case TensorF.$wtensorContract_3
                        @ a
                        @ n7
                        @ n8
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        w
                        w3
                        ww2 of ww3 { Unit# ww5 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww5 } }) -}
49ff16ff7f76a64f70d5b28781128353
  tensorContract_9 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n5,
     GHC.TypeNats.KnownNat n6) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n5)
                   (w2 :: GHC.TypeNats.KnownNat n6)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww2 ->
                 case TensorF.$wtensorContract_9
                        @ a
                        @ n5
                        @ n6
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n7
                        @ n8
                        w
                        w3
                        ww2 of ww3 { Unit# ww5 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww5 } }) -}
b72c03339723ea27c26a4f13950a1f01
  tensorIndList ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    TensorF.Rank -> [Index.Index n1 n2 n3 n4 n5 n6 n7 n8]
  {- Arity: 9,
     Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S(S(S)LLLLLLL),1*U(1*U(1*U),1*U(1*U),1*U(1*U),1*U(1*U),1*U(1*U),1*U(1*U),1*U(1*U),1*U(1*U))> -}
2e5a8df378ca1ff593f42a201c909340
  tensorProd ::
    (GHC.Num.Num a, GHC.Classes.Eq a, GHC.TypeNats.KnownNat n1,
     GHC.TypeNats.KnownNat n2, GHC.TypeNats.KnownNat n3,
     GHC.TypeNats.KnownNat n4, GHC.TypeNats.KnownNat n5,
     GHC.TypeNats.KnownNat n6, GHC.TypeNats.KnownNat n7,
     GHC.TypeNats.KnownNat n8, GHC.TypeNats.KnownNat m1,
     GHC.TypeNats.KnownNat m2, GHC.TypeNats.KnownNat m3,
     GHC.TypeNats.KnownNat m4, GHC.TypeNats.KnownNat m5,
     GHC.TypeNats.KnownNat m6, GHC.TypeNats.KnownNat m7,
     GHC.TypeNats.KnownNat m8) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ m1)
         (n2 GHC.TypeNats.+ m2)
         (n3 GHC.TypeNats.+ m3)
         (n4 GHC.TypeNats.+ m4)
         (n5 GHC.TypeNats.+ m5)
         (n6 GHC.TypeNats.+ m6)
         (n7 GHC.TypeNats.+ m7)
         (n8 GHC.TypeNats.+ m8)
         a
  {- Arity: 20,
     Strictness: <L,U(A,A,C(C1(U)),A,A,A,1*C1(U))><L,U(C(C1(U)),A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,1*U(C(U))><S,1*U(C(U))>m,
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ m1 :: GHC.Types.Nat
                   @ m2 :: GHC.Types.Nat
                   @ m3 :: GHC.Types.Nat
                   @ m4 :: GHC.Types.Nat
                   @ m5 :: GHC.Types.Nat
                   @ m6 :: GHC.Types.Nat
                   @ m7 :: GHC.Types.Nat
                   @ m8 :: GHC.Types.Nat
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a)
                   ($dKnownNat1 :: GHC.TypeNats.KnownNat n1)
                   ($dKnownNat2 :: GHC.TypeNats.KnownNat n2)
                   ($dKnownNat3 :: GHC.TypeNats.KnownNat n3)
                   ($dKnownNat4 :: GHC.TypeNats.KnownNat n4)
                   ($dKnownNat5 :: GHC.TypeNats.KnownNat n5)
                   ($dKnownNat6 :: GHC.TypeNats.KnownNat n6)
                   ($dKnownNat7 :: GHC.TypeNats.KnownNat n7)
                   ($dKnownNat8 :: GHC.TypeNats.KnownNat n8)
                   ($dKnownNat9 :: GHC.TypeNats.KnownNat m1)
                   ($dKnownNat10 :: GHC.TypeNats.KnownNat m2)
                   ($dKnownNat11 :: GHC.TypeNats.KnownNat m3)
                   ($dKnownNat12 :: GHC.TypeNats.KnownNat m4)
                   ($dKnownNat13 :: GHC.TypeNats.KnownNat m5)
                   ($dKnownNat14 :: GHC.TypeNats.KnownNat m6)
                   ($dKnownNat15 :: GHC.TypeNats.KnownNat m7)
                   ($dKnownNat16 :: GHC.TypeNats.KnownNat m8)
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (ds1 :: TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a) ->
                 case ds of wild { TensorF.Tensor f ->
                 case ds1 of wild1 { TensorF.Tensor g ->
                 let {
                   lvl103 :: a = GHC.Num.fromInteger @ a $dNum TensorF.delta_2
                 } in
                 let {
                   rank :: TensorF.Rank
                   = case TensorF.$wgetRank
                            @ n1
                            @ n2
                            @ n3
                            @ n4
                            @ n5
                            @ n6
                            @ n7
                            @ n8
                            @ a
                            $dKnownNat1
                            $dKnownNat2
                            $dKnownNat3
                            $dKnownNat4
                            $dKnownNat5
                            $dKnownNat6
                            $dKnownNat7
                            $dKnownNat8 of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                     (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10) }
                 } in
                 TensorF.Tensor
                   @ (n1 GHC.TypeNats.+ m1)
                   @ (n2 GHC.TypeNats.+ m2)
                   @ (n3 GHC.TypeNats.+ m3)
                   @ (n4 GHC.TypeNats.+ m4)
                   @ (n5 GHC.TypeNats.+ m5)
                   @ (n6 GHC.TypeNats.+ m6)
                   @ (n7 GHC.TypeNats.+ m7)
                   @ (n8 GHC.TypeNats.+ m8)
                   @ a
                   (let {
                      g1 :: Index.Index
                              (n1 GHC.TypeNats.+ m1)
                              (n2 GHC.TypeNats.+ m2)
                              (n3 GHC.TypeNats.+ m3)
                              (n4 GHC.TypeNats.+ m4)
                              (n5 GHC.TypeNats.+ m5)
                              (n6 GHC.TypeNats.+ m6)
                              (n7 GHC.TypeNats.+ m7)
                              (n8 GHC.TypeNats.+ m8)
                            -> (Index.Index n1 n2 n3 n4 n5 n6 n7 n8,
                                Index.Index m1 m2 m3 m4 m5 m6 m7 m8)
                        {- Arity: 1 -}
                      = Index.splitIndex
                          @ n1
                          @ n2
                          @ n3
                          @ n4
                          @ n5
                          @ n6
                          @ n7
                          @ n8
                          @ m1
                          @ m2
                          @ m3
                          @ m4
                          @ m5
                          @ m6
                          @ m7
                          @ m8
                          $dKnownNat1
                          $dKnownNat2
                          $dKnownNat3
                          $dKnownNat4
                          $dKnownNat5
                          $dKnownNat6
                          $dKnownNat7
                          $dKnownNat8
                          $dKnownNat9
                          $dKnownNat10
                          $dKnownNat11
                          $dKnownNat12
                          $dKnownNat13
                          $dKnownNat14
                          $dKnownNat15
                          $dKnownNat16
                          rank
                    } in
                    \ (r1 :: Index.Index
                               (n1 GHC.TypeNats.+ m1)
                               (n2 GHC.TypeNats.+ m2)
                               (n3 GHC.TypeNats.+ m3)
                               (n4 GHC.TypeNats.+ m4)
                               (n5 GHC.TypeNats.+ m5)
                               (n6 GHC.TypeNats.+ m6)
                               (n7 GHC.TypeNats.+ m7)
                               (n8 GHC.TypeNats.+ m8)) ->
                    let {
                      x1 :: a = f (case g1 r1 of wild2 { (,) x ds2 -> x })
                    } in
                    case GHC.Classes.== @ a $dEq x1 lvl103 of wild2 {
                      GHC.Types.False
                      -> let {
                           y :: a = g (case g1 r1 of wild3 { (,) ds2 y1 -> y1 })
                         } in
                         case GHC.Classes.== @ a $dEq y lvl103 of wild3 {
                           GHC.Types.False -> GHC.Num.* @ a $dNum x1 y
                           GHC.Types.True -> lvl103 }
                      GHC.Types.True -> lvl103 }) } }) -}
fe4543eeb7e4dd570c1004a26720cfa4
  tensorProd1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap2, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap4)) -}
14d31efc837ec4396eedb9654cf0cfd9
  tensorProd2 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.interEqn1_5, TensorF.interEqn1_5,
                  TensorF.flatAreaMap4, TensorF.flatAreaMap4, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap2, TensorF.flatAreaMap2,
                  TensorF.flatAreaMap2)) -}
6a2a4353e69ef28375141909da28ec58
  tensorProd_g ::
    Index.Index
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 1 1 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap3) -}
d014861811f8c6607e368207e362fe29
  tensorProd_g1 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 0 0 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.tensorProd1) -}
c26b61907428d89745c729dfcf193c38
  tensorProd_g2 ::
    Index.Index
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 1 1 0 0 1 1 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd1) -}
aa6f63ca66eddf4b59f4eeff073ee592
  tensorProd_g3 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 0 0 0 0 1 1 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd1) -}
aa1f18805b14786f8dfa3098d9a61b94
  tensorProd_g4 ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 0 0 0 0 1 1 0 0, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd_rank) -}
16b6ab3cd4c45495d9f545d9e123cf44
  tensorProd_g5 ::
    Index.Index
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 2 2 0 0 1 1 1 1, Index.Index 0 1 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap5
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd2) -}
af889b15f945b609e711308c36642dea
  tensorProd_rank :: TensorF.Rank
  {- Unfolding: (case TensorF.$wgetRank
                        @ 0
                        @ 0
                        @ 0
                        @ 0
                        @ 1
                        @ 1
                        @ 0
                        @ 0
                        @ GHC.Real.Rational
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        TensorF.flatAreaMap3
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                        TensorF.flatAreaMap5
                          `cast`
                        (Sym (GHC.TypeNats.N:SNat[0]
                                  <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N) of ww { (#,,,,,,,#) ww2 ww3 ww5 ww6 ww7 ww8 ww9 ww10 ->
                 (ww2, ww3, ww5, ww6, ww7, ww8, ww9, ww10) }) -}
1e18db39ed460a9cfc2fd824f5b57463
  tensorSMult ::
    GHC.Num.Num a =>
    a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C(U)),A,A,A,A)><L,U>,
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   ($dNum :: GHC.Num.Num a)
                   (a1 :: a) ->
                 let {
                   f :: a -> a = GHC.Num.* @ a $dNum a1
                 } in
                 \ (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case ds of wild { TensorF.Tensor g ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   (GHC.Base..
                      @ a
                      @ a
                      @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                      f
                      g) }) -}
a681a538fb298beb2309b51f2098c66c
  tensorSub ::
    GHC.Num.Num a =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,C(C(U)),C(U),A,A,C(U))><S,1*U(C(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (w2 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w1 of ww { TensorF.Tensor ww2 ->
                 case w2 of ww3 { TensorF.Tensor ww5 ->
                 case TensorF.$wtensorSub
                        @ a
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        ww2
                        ww5 of ww6 { Unit# ww7 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww7 } } }) -}
9e1f72e0ae2b3b31a581d698d3480deb
  tensorTranspose ::
    GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, Strictness: <L,U(U)><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (i1 :: GHC.Types.Int)
                   (pair :: (GHC.Types.Int, GHC.Types.Int))
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case ds of wild { TensorF.Tensor f ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   (\ (x :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8) ->
                    f (Index.swapPosIndex
                         @ n1
                         @ n2
                         @ n3
                         @ n4
                         @ n5
                         @ n6
                         @ n7
                         @ n8
                         i1
                         pair
                         x)) }) -}
db3c164f662d051f16321e0b27c22601
  triangleMap2 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 Data.Map.Internal.fromList
                   @ (Data.Sequence.Internal.Seq a)
                   @ b
                   (Data.Sequence.Internal.$fOrdSeq @ a $dOrd)
                   (GHC.List.zip
                      @ (Data.Sequence.Internal.Seq a)
                      @ b
                      (TensorF.$wsymIndList @ a $dEnum 2# TensorF.flatAreaMap12)
                      (GHC.Enum.enumFrom
                         @ b
                         $dEnum1
                         (GHC.Enum.toEnum @ b $dEnum1 TensorF.epsilonMap3)))) -}
b9a490b3ca079f291b6927ed37fe9062
  triangleMap3 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 Data.Map.Internal.fromList
                   @ (Data.Sequence.Internal.Seq a)
                   @ b
                   (Data.Sequence.Internal.$fOrdSeq @ a $dOrd)
                   (GHC.List.zip
                      @ (Data.Sequence.Internal.Seq a)
                      @ b
                      (TensorF.$wsymIndList @ a $dEnum 3# TensorF.flatAreaMap12)
                      (GHC.Enum.enumFrom
                         @ b
                         $dEnum1
                         (GHC.Enum.toEnum @ b $dEnum1 TensorF.epsilonMap3)))) -}
2535d25384381fef22fa2f870ccb1b7e
  triangleMapArea ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(C(U),A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,C(C1(U)),A,A,A)> -}
instance [safe] GHC.Base.Functor [TensorF.Tensor]
  = TensorF.$fFunctorTensor
"SPEC/TensorF fromList @ (Index 0 0 0 0 0 0 0 4) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 0 0 0 4))
  Data.Map.Internal.fromList @ (Index.Index 0 0 0 0 0 0 0 4)
                             @ a
                             $dOrd
  = TensorF.$sfromList2 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 0 1 2 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 0 1 2 0))
  Data.Map.Internal.fromList @ (Index.Index 0 0 0 0 0 1 2 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList22 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 1 0 0 2) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 1 0 0 2))
  Data.Map.Internal.fromList @ (Index.Index 0 0 0 0 1 0 0 2)
                             @ a
                             $dOrd
  = TensorF.$sfromList24 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 1 1 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 1 1 1 1))
  Data.Map.Internal.fromList @ (Index.Index 0 0 0 0 1 1 1 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList8 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 1 0 0 3 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 1 0 0 3 0))
  Data.Map.Internal.fromList @ (Index.Index 0 0 0 1 0 0 3 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList18 @ a
"SPEC/TensorF fromList @ (Index 0 0 1 0 0 0 0 3) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 1 0 0 0 0 3))
  Data.Map.Internal.fromList @ (Index.Index 0 0 1 0 0 0 0 3)
                             @ a
                             $dOrd
  = TensorF.$sfromList20 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 0 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 0 0))
  Data.Map.Internal.fromList @ (Index.Index 0 1 0 0 0 0 0 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList14 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 1 1))
  Data.Map.Internal.fromList @ (Index.Index 0 1 0 0 0 0 1 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList12 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 4 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 4 0))
  Data.Map.Internal.fromList @ (Index.Index 0 1 0 0 0 0 4 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList16 @ a
"SPEC/TensorF fromList @ (Index 1 0 0 0 0 0 0 4) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 0 0 0 0 0 0 4))
  Data.Map.Internal.fromList @ (Index.Index 1 0 0 0 0 0 0 4)
                             @ a
                             $dOrd
  = TensorF.$sfromList @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 0 0 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 0 0 1 1))
  Data.Map.Internal.fromList @ (Index.Index 1 1 0 0 0 0 1 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList6 @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 0 0 2 2) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 0 0 2 2))
  Data.Map.Internal.fromList @ (Index.Index 1 1 0 0 0 0 2 2)
                             @ a
                             $dOrd
  = TensorF.$sfromList4 @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 1 1 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 1 1 1 1))
  Data.Map.Internal.fromList @ (Index.Index 1 1 0 0 1 1 1 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList10 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

