
==================== FINAL INTERFACE ====================
2019-01-31 12:58:39.180804 UTC

interface main:TensorF [hpc] 8043
  interface hash: 0003e25fc1feb41c5d0c4ec2fb6135fc
  ABI hash: 38eee7b03c8e9942b59fc74f4cd53c1f
  export-list hash: eca223a8c96ce87fbaf94a0ff30399f6
  orphan hash: dce9dfb235fe06fd91a1cb798b2cb3ec
  flag hash: 034627c3e6816f7545a7b63584c609bb
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  TensorF.delta_19
  TensorF.delta_20
  TensorF.delta_3
  TensorF.delta_9
  TensorF.epsilonMap
  TensorF.evalFullTensor
  TensorF.evalTensor
  TensorF.flatAreaMap
  TensorF.flatAreaSTMap
  TensorF.flatInterMap
  TensorF.intAIB
  TensorF.interArea
  TensorF.interEqn1_2
  TensorF.interEqn1_3
  TensorF.interMetric
  TensorF.inter_I2Map
  TensorF.inter_I3Map
  TensorF.inter_IAreaMap
  TensorF.inter_J2Map
  TensorF.inter_J3Map
  TensorF.inter_JAreaMap
  TensorF.mkTensorFromMap
  TensorF.tensor2Map
  TensorF.tensorAdd
  TensorF.tensorContract_19
  TensorF.tensorContract_20
  TensorF.tensorContract_3
  TensorF.tensorContract_9
  TensorF.tensorProd
  TensorF.tensorSMult
  TensorF.tensorSub
  TensorF.tensorTranspose
  TensorF.triangleMap2
  TensorF.triangleMap3
  TensorF.triangleMapArea
module dependencies: Index
package dependencies: array-0.5.2.0 base-4.11.1.0*
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Proxy a80a60a2fdceabfeb4d110d23b808844
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.TypeNats 8f7c6aed0d8e1900cac5f62a9bc0fd0b
import  -/  base-4.11.1.0:Numeric.Natural da273ddb373e0510fde98e17e4aa338f
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  containers-0.5.11.0:Data.Sequence 21c58838329d44e2dc13db7c04e3a8d8
import  -/  containers-0.5.11.0:Data.Sequence.Internal a2eae372f67713826bf16d410fc6cd8f
import  -/  containers-0.5.11.0:Data.Sequence.Internal.Sorting 481f0d31b76dfcad90c740727653678b
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  Index 71b3346044a1d0e00e59251850573a46
  exports: 91057ce0b804927200140466044aa77d
  Ind dee8b5f3c2d1aeeada2c2ec92aa270b3
  Index 1f5ddc4679c562a7168aef180062eec5
  Lind_19 eac164636d02a9d79664ea6feb1821af
  Lind_20 06537182db1996ed045a0cd1b89858a5
  Lind_9 7ecf2cdb519ad8d35de36386b0078158
  Linds_3 e889a76254b9568bcd306a682aa34a7e
  Uind_19 374cb924ed47b2df0f5f34c39baf4688
  Uind_20 4bc2e2d710a65926fc1cbc6f81e36f73
  Uind_9 d3fbf44c59cbc2b93a3471d3308e9718
  Uinds_3 a3598cb2e3c7e8040d14aca7e8d357c5
  combineIndex c4f3569d1e955d8bb59e5fdbc945c20b
  contractionIndexList_19 beff4cf519ec50a2ab0860f86c8794a1
  contractionIndexList_20 b1b3bcd32e6eeb5f1968f4ebde52fd53
  contractionIndexList_3 85cec4fff628a7b7b77db41279196509
  contractionIndexList_9 837b52ba294c8bb2b2808ef3467bd420
  getRangeList bb2e75601febf5d2ff465e171708e972
  getSeq 8a4ff18561a03d930b23f084e5712cb7
  getValInd 5c90c661410f5cfc2f14176d2316e42c
  ind2List 258ebbed4299c9a1b8cbf624a8663e35
  indSign2 fa2934bc9397a85bf4af658bb26b7d7b
  mkInd d77fe9e41748b2911697e97c58ac8022
  sortInd 6c9f999bff1d7931a6b26f4861967a23
  splitIndex 2ab29e001b550d3c12faf44fe7ea0485
  swapPosIndex a410e592182ec5a01a8228f8809379b5
b28a4c068d505ebc191e56bd3bd87e55
  $fFunctorTensor ::
    GHC.Base.Functor (TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n1 :: GHC.Types.Nat
                      @ n2 :: GHC.Types.Nat
                      @ n3 :: GHC.Types.Nat
                      @ n4 :: GHC.Types.Nat
                      @ n5 :: GHC.Types.Nat
                      @ n6 :: GHC.Types.Nat
                      @ n7 :: GHC.Types.Nat
                      @ n8 :: GHC.Types.Nat.
                  @ (TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8)
                  (TensorF.$fFunctorTensor_$cfmap
                     @ n1
                     @ n2
                     @ n3
                     @ n4
                     @ n5
                     @ n6
                     @ n7
                     @ n8)
                  (TensorF.$fFunctorTensor_$c<$
                     @ n1
                     @ n2
                     @ n3
                     @ n4
                     @ n5
                     @ n6
                     @ n7
                     @ n8) -}
b28a4c068d505ebc191e56bd3bd87e55
  $fFunctorTensor_$c<$ ::
    a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   @ b
                   (x :: a)
                   (eta1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b) ->
                 {__scc {main:TensorF.fmap} True True} case eta1 of wild { TensorF.Tensor g ->
                                                       TensorF.Tensor
                                                         @ n1
                                                         @ n2
                                                         @ n3
                                                         @ n4
                                                         @ n5
                                                         @ n6
                                                         @ n7
                                                         @ n8
                                                         @ a
                                                         (\ (x1 :: Index.Index
                                                                     n1 n2 n3 n4 n5 n6 n7 n8) ->
                                                          x) }) -}
b28a4c068d505ebc191e56bd3bd87e55
  $fFunctorTensor_$cfmap ::
    (a -> b)
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U(C(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   @ b
                   (f :: a -> b)
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 {__scc {main:TensorF.fmap} True True} case ds of wild { TensorF.Tensor g ->
                                                       TensorF.Tensor
                                                         @ n1
                                                         @ n2
                                                         @ n3
                                                         @ n4
                                                         @ n5
                                                         @ n6
                                                         @ n7
                                                         @ n8
                                                         @ b
                                                         (GHC.Base..
                                                            @ a
                                                            @ b
                                                            @ (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                                                            f
                                                            g) }) -}
b9ca88659fb4dc38bccc8551f6967a87
  $s$fEqInd :: GHC.Classes.Eq (Index.Ind n Index.Uind_20)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_20)
                  (\ (ds :: Index.Ind n Index.Uind_20)
                     (ds1 :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Uind_20
                                                       Index.$fEqUind_20
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/= @ n) -}
54a955291c577d4a8d4d3523039d6c75
  $s$fEqInd1 :: GHC.Classes.Eq (Index.Ind n Index.Lind_20)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_20)
                  (\ (ds :: Index.Ind n Index.Lind_20)
                     (ds1 :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Lind_20
                                                       Index.$fEqLind_20
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=1 @ n) -}
3a45ba9da9d716c341ad8763250df2e7
  $s$fEqInd2 :: GHC.Classes.Eq (Index.Ind n Index.Uind_19)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_19)
                  (\ (ds :: Index.Ind n Index.Uind_19)
                     (ds1 :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Uind_19
                                                       Index.$fEqUind_19
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=2 @ n) -}
7f0d394212fdc62111f229063554665c
  $s$fEqInd3 :: GHC.Classes.Eq (Index.Ind n Index.Lind_19)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_19)
                  (\ (ds :: Index.Ind n Index.Lind_19)
                     (ds1 :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Lind_19
                                                       Index.$fEqLind_19
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=3 @ n) -}
b2a26d6ad9b74d1f6d30ba0ffb45ab49
  $s$fEqInd4 :: GHC.Classes.Eq (Index.Ind n Index.Uind_9)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_9)
                  (\ (ds :: Index.Ind n Index.Uind_9)
                     (ds1 :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Uind_9
                                                       Index.$fEqUind_9
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=4 @ n) -}
bc3286a441b035b0ec6c0d76ec7fa4e5
  $s$fEqInd5 :: GHC.Classes.Eq (Index.Ind n Index.Lind_9)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_9)
                  (\ (ds :: Index.Ind n Index.Lind_9)
                     (ds1 :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Lind_9
                                                       Index.$fEqLind_9
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=5 @ n) -}
e4e95d96afb5baa14e8c7e1b8088ca52
  $s$fEqInd6 :: GHC.Classes.Eq (Index.Ind n Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_3)
                  (\ (ds :: Index.Ind n Index.Uind_3)
                     (ds1 :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Uind_3
                                                       Index.$fEqUind_3
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=6 @ n) -}
44a704021cb711b35af3a90cd54988eb
  $s$fEqInd7 :: GHC.Classes.Eq (Index.Ind n Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_3)
                  (\ (ds :: Index.Ind n Index.Lind_3)
                     (ds1 :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                     case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                     Data.Sequence.Internal.$fEqSeq_$c==
                                                       @ Index.Lind_3
                                                       Index.$fEqLind_3
                                                       a1
                                                       b1 } })
                  (TensorF.$s$fEqInd_$s$fEqInd_$c/=7 @ n) -}
18456a48f28ce59513586a28cf73bd00
  $s$fEqInd_$c== ::
    Index.Ind n Index.Uind_20
    -> Index.Ind n Index.Uind_20 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Uind_20)
                   (ds1 :: Index.Ind n Index.Uind_20) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Uind_20
                                                     Index.$fEqUind_20
                                                     a1
                                                     b1 } }) -}
76efd772b6931da2903128662d8054b0
  $s$fEqInd_$c==1 ::
    Index.Ind n Index.Lind_20
    -> Index.Ind n Index.Lind_20 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Lind_20)
                   (ds1 :: Index.Ind n Index.Lind_20) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Lind_20
                                                     Index.$fEqLind_20
                                                     a1
                                                     b1 } }) -}
e3024fd78cd11271cc9d3855898a1812
  $s$fEqInd_$c==2 ::
    Index.Ind n Index.Uind_19
    -> Index.Ind n Index.Uind_19 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Uind_19)
                   (ds1 :: Index.Ind n Index.Uind_19) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Uind_19
                                                     Index.$fEqUind_19
                                                     a1
                                                     b1 } }) -}
d30b6de019cf40fcb4440dae7182ece7
  $s$fEqInd_$c==3 ::
    Index.Ind n Index.Lind_19
    -> Index.Ind n Index.Lind_19 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Lind_19)
                   (ds1 :: Index.Ind n Index.Lind_19) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Lind_19
                                                     Index.$fEqLind_19
                                                     a1
                                                     b1 } }) -}
338ae835157a00fec8eedd324364761a
  $s$fEqInd_$c==4 ::
    Index.Ind n Index.Uind_9
    -> Index.Ind n Index.Uind_9 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Uind_9)
                   (ds1 :: Index.Ind n Index.Uind_9) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Uind_9
                                                     Index.$fEqUind_9
                                                     a1
                                                     b1 } }) -}
cb90dbf8ac69cdab680c5b040762c164
  $s$fEqInd_$c==5 ::
    Index.Ind n Index.Lind_9
    -> Index.Ind n Index.Lind_9 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Lind_9)
                   (ds1 :: Index.Ind n Index.Lind_9) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Lind_9
                                                     Index.$fEqLind_9
                                                     a1
                                                     b1 } }) -}
8e7f23559e12e8781975d79c49e2c9c4
  $s$fEqInd_$c==6 ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Uind_3)
                   (ds1 :: Index.Ind n Index.Uind_3) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Uind_3
                                                     Index.$fEqUind_3
                                                     a1
                                                     b1 } }) -}
2522934861135ca0d217863a469575bc
  $s$fEqInd_$c==7 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ n :: GHC.Types.Nat
                   (ds :: Index.Ind n Index.Lind_3)
                   (ds1 :: Index.Ind n Index.Lind_3) ->
                 {__scc {main:Index.==} True True} case ds of wild { Index.UnsafemkInd a1 ->
                                                   case ds1 of wild1 { Index.UnsafemkInd b1 ->
                                                   Data.Sequence.Internal.$fEqSeq_$c==
                                                     @ Index.Lind_3
                                                     Index.$fEqLind_3
                                                     a1
                                                     b1 } }) -}
f6dfd1c27da866044cbab2d7418b455a
  $s$fEqInd_$s$fEqInd_$c/= ::
    Index.Ind n Index.Uind_20
    -> Index.Ind n Index.Uind_20 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_20)
                   (y :: Index.Ind n Index.Uind_20) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Uind_20
                                                                                              Index.$fEqUind_20
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
08b9201dacbecdc6f581732198dca74c
  $s$fEqInd_$s$fEqInd_$c/=1 ::
    Index.Ind n Index.Lind_20
    -> Index.Ind n Index.Lind_20 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_20)
                   (y :: Index.Ind n Index.Lind_20) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Lind_20
                                                                                              Index.$fEqLind_20
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
0e40f947cacbfedc8f1f8718cab42e77
  $s$fEqInd_$s$fEqInd_$c/=2 ::
    Index.Ind n Index.Uind_19
    -> Index.Ind n Index.Uind_19 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_19)
                   (y :: Index.Ind n Index.Uind_19) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Uind_19
                                                                                              Index.$fEqUind_19
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
4401a89b1587ac0da40dd0147d99b9b4
  $s$fEqInd_$s$fEqInd_$c/=3 ::
    Index.Ind n Index.Lind_19
    -> Index.Ind n Index.Lind_19 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_19)
                   (y :: Index.Ind n Index.Lind_19) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Lind_19
                                                                                              Index.$fEqLind_19
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
2e35aecee3f192433e724dc4667f44b4
  $s$fEqInd_$s$fEqInd_$c/=4 ::
    Index.Ind n Index.Uind_9
    -> Index.Ind n Index.Uind_9 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_9)
                   (y :: Index.Ind n Index.Uind_9) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Uind_9
                                                                                              Index.$fEqUind_9
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
899b5c1f1c81d3463fa5cc316bc635a6
  $s$fEqInd_$s$fEqInd_$c/=5 ::
    Index.Ind n Index.Lind_9
    -> Index.Ind n Index.Lind_9 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_9)
                   (y :: Index.Ind n Index.Lind_9) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Lind_9
                                                                                              Index.$fEqLind_9
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
284241bdd946731a66c79cc1ed39a447
  $s$fEqInd_$s$fEqInd_$c/=6 ::
    Index.Ind n Index.Uind_3
    -> Index.Ind n Index.Uind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Uind_3)
                   (y :: Index.Ind n Index.Uind_3) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Uind_3
                                                                                              Index.$fEqUind_3
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
261006903dbad3d7f400534ac207c091
  $s$fEqInd_$s$fEqInd_$c/=7 ::
    Index.Ind n Index.Lind_3
    -> Index.Ind n Index.Lind_3 -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ n :: GHC.Types.Nat
                   (x :: Index.Ind n Index.Lind_3)
                   (y :: Index.Ind n Index.Lind_3) ->
                 {__scc {main:Index.==} True False} case x of wild { Index.UnsafemkInd a1 ->
                                                    case y of wild1 { Index.UnsafemkInd b1 ->
                                                    case {__scc {main:Index.==} False True} Data.Sequence.Internal.$fEqSeq_$c==
                                                                                              @ Index.Lind_3
                                                                                              Index.$fEqLind_3
                                                                                              a1
                                                                                              b1 of wild2 {
                                                      GHC.Types.False -> GHC.Types.True
                                                      GHC.Types.True -> GHC.Types.False } } }) -}
6fb3113faf29ea73fa2d5bd3972f057a
  $s$fOrd(,,,,,,,)10 ::
    GHC.Classes.Ord
      (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
       Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                     Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
c985dbea8f333b819365ae084784daaf
  $s$fOrd(,,,,,,,)11 ::
    GHC.Classes.Ord
      (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
       Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                     Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
732fbb22b167c191f952791465bb5d00
  $s$fOrd(,,,,,,,)12 ::
    GHC.Classes.Ord
      (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
       Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                     Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 0 Index.Uind_3)
                     @ (Index.Ind 0 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 0))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 0 Index.Uind_3)
                     @ (Index.Ind 0 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 0))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 0 Index.Uind_3)
                     @ (Index.Ind 0 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 0))
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 0 Index.Uind_3)
                     @ (Index.Ind 0 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 0)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 0 Index.Uind_3, Index.Ind 0 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
5545470ef8a45b4abe8ca7e0a1c9b027
  $s$fOrd(,,,,,,,)6 ::
    GHC.Classes.Ord
      (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
       Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                     Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 2 Index.Uind_3)
                     @ (Index.Ind 2 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 2)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 2))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 2 Index.Uind_3)
                     @ (Index.Ind 2 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 2)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 2))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 2 Index.Uind_3)
                     @ (Index.Ind 2 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 2)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 2))
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 2 Index.Uind_3)
                     @ (Index.Ind 2 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 2)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 2)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 2 Index.Uind_3, Index.Ind 2 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
5c47a014c89106fc7f1fe1badf0a28c8
  $s$fOrd(,,,,,,,)8 ::
    GHC.Classes.Ord
      (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
       Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                     Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 1 Index.Uind_20)
                     @ (Index.Ind 1 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 0 Index.Uind_9)
                     @ (Index.Ind 0 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 1 Index.Uind_20, Index.Ind 1 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 0 Index.Uind_9, Index.Ind 0 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
9023ff8238a3b324e7543e53ca6cee57
  $s$fOrd(,,,,,,,)9 ::
    GHC.Classes.Ord
      (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
       Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
       Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
       Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                     Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                     Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                     Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)
                  (GHC.Classes.$fOrd(,,,,,,,)_$cp1Ord
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 0 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$ccompare
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 0 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 0 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1))
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case b1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case a1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   GHC.Classes.$fOrd(,,,,,,,)_$c<
                     @ (Index.Ind 0 Index.Uind_20)
                     @ (Index.Ind 0 Index.Lind_20)
                     @ (Index.Ind 0 Index.Uind_19)
                     @ (Index.Ind 0 Index.Lind_19)
                     @ (Index.Ind 1 Index.Uind_9)
                     @ (Index.Ind 1 Index.Lind_9)
                     @ (Index.Ind 1 Index.Uind_3)
                     @ (Index.Ind 1 Index.Lind_3)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ 0)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ 1)
                     (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ 1)
                     b1
                     a1)
                  (\ (a1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (b1 :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                             Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                             Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                             Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case a1 of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case b1 of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a11 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b11 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a11
                                                                                                          b11 of wild4 {
                                                             GHC.Types.LT -> GHC.Types.False
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b12 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b12 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> GHC.Types.False
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b13 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b13 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> GHC.Types.False
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b14 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> GHC.Types.False
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b15 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> GHC.Types.False
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b16 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> GHC.Types.False
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b17 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.False
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b18 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b18 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> GHC.Types.False } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> GHC.Types.True } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> GHC.Types.True } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> GHC.Types.True } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> GHC.Types.True } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> GHC.Types.True } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> GHC.Types.True } } }
                                                             GHC.Types.GT
                                                             -> GHC.Types.True } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild1
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild1
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild1
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild1
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild1
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild1
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild1
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1 } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild } } }
                                                             GHC.Types.GT -> wild } } } } })
                  (\ (x :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3))
                     (y :: (Index.Ind 0 Index.Uind_20, Index.Ind 0 Index.Lind_20,
                            Index.Ind 0 Index.Uind_19, Index.Ind 0 Index.Lind_19,
                            Index.Ind 1 Index.Uind_9, Index.Ind 1 Index.Lind_9,
                            Index.Ind 1 Index.Uind_3, Index.Ind 1 Index.Lind_3)) ->
                   case y of wild { (,,,,,,,) a2 a3 a4 a5 a6 a7 a8 a9 ->
                   case x of wild1 { (,,,,,,,) b2 b3 b4 b5 b6 b7 b8 b9 ->
                   {__scc {main:Index.compare} True False} case a2 of wild2 { Index.UnsafemkInd a1 ->
                                                           case b2 of wild3 { Index.UnsafemkInd b1 ->
                                                           case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                          @ Index.Uind_20
                                                                                                          Index.$fOrdUind_20
                                                                                                          a1
                                                                                                          b1 of wild4 {
                                                             GHC.Types.LT -> wild
                                                             GHC.Types.EQ
                                                             -> {__scc {main:Index.compare} True False} case a3 of wild5 { Index.UnsafemkInd a12 ->
                                                                                                        case b3 of wild6 { Index.UnsafemkInd b11 ->
                                                                                                        case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                       @ Index.Lind_20
                                                                                                                                                       Index.$fOrdLind_20
                                                                                                                                                       a12
                                                                                                                                                       b11 of wild7 {
                                                                                                          GHC.Types.LT
                                                                                                          -> wild
                                                                                                          GHC.Types.EQ
                                                                                                          -> {__scc {main:Index.compare} True False} case a4 of wild8 { Index.UnsafemkInd a13 ->
                                                                                                                                                     case b4 of wild9 { Index.UnsafemkInd b12 ->
                                                                                                                                                     case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                    @ Index.Uind_19
                                                                                                                                                                                                    Index.$fOrdUind_19
                                                                                                                                                                                                    a13
                                                                                                                                                                                                    b12 of wild10 {
                                                                                                                                                       GHC.Types.LT
                                                                                                                                                       -> wild
                                                                                                                                                       GHC.Types.EQ
                                                                                                                                                       -> {__scc {main:Index.compare} True False} case a5 of wild11 { Index.UnsafemkInd a14 ->
                                                                                                                                                                                                  case b5 of wild12 { Index.UnsafemkInd b13 ->
                                                                                                                                                                                                  case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                 @ Index.Lind_19
                                                                                                                                                                                                                                                 Index.$fOrdLind_19
                                                                                                                                                                                                                                                 a14
                                                                                                                                                                                                                                                 b13 of wild13 {
                                                                                                                                                                                                    GHC.Types.LT
                                                                                                                                                                                                    -> wild
                                                                                                                                                                                                    GHC.Types.EQ
                                                                                                                                                                                                    -> {__scc {main:Index.compare} True False} case a6 of wild14 { Index.UnsafemkInd a15 ->
                                                                                                                                                                                                                                               case b6 of wild15 { Index.UnsafemkInd b14 ->
                                                                                                                                                                                                                                               case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                              @ Index.Uind_9
                                                                                                                                                                                                                                                                                              Index.$fOrdUind_9
                                                                                                                                                                                                                                                                                              a15
                                                                                                                                                                                                                                                                                              b14 of wild16 {
                                                                                                                                                                                                                                                 GHC.Types.LT
                                                                                                                                                                                                                                                 -> wild
                                                                                                                                                                                                                                                 GHC.Types.EQ
                                                                                                                                                                                                                                                 -> {__scc {main:Index.compare} True False} case a7 of wild17 { Index.UnsafemkInd a16 ->
                                                                                                                                                                                                                                                                                            case b7 of wild18 { Index.UnsafemkInd b15 ->
                                                                                                                                                                                                                                                                                            case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                           @ Index.Lind_9
                                                                                                                                                                                                                                                                                                                                           Index.$fOrdLind_9
                                                                                                                                                                                                                                                                                                                                           a16
                                                                                                                                                                                                                                                                                                                                           b15 of wild19 {
                                                                                                                                                                                                                                                                                              GHC.Types.LT
                                                                                                                                                                                                                                                                                              -> wild
                                                                                                                                                                                                                                                                                              GHC.Types.EQ
                                                                                                                                                                                                                                                                                              -> {__scc {main:Index.compare} True False} case a8 of wild20 { Index.UnsafemkInd a17 ->
                                                                                                                                                                                                                                                                                                                                         case b8 of wild21 { Index.UnsafemkInd b16 ->
                                                                                                                                                                                                                                                                                                                                         case {__scc {main:Index.compare} False True} Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                                                                                                                                                                                                                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                                                                                                                                                                                                                                                        Index.$fOrdUind_3
                                                                                                                                                                                                                                                                                                                                                                                        a17
                                                                                                                                                                                                                                                                                                                                                                                        b16 of wild22 {
                                                                                                                                                                                                                                                                                                                                           GHC.Types.LT
                                                                                                                                                                                                                                                                                                                                           -> wild
                                                                                                                                                                                                                                                                                                                                           GHC.Types.EQ
                                                                                                                                                                                                                                                                                                                                           -> {__scc {main:Index.<} True False} case a9 of wild23 { Index.UnsafemkInd a18 ->
                                                                                                                                                                                                                                                                                                                                                                                case b9 of wild24 { Index.UnsafemkInd b17 ->
                                                                                                                                                                                                                                                                                                                                                                                case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                                                                                                                                                                                                                                                                                                         @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         Index.$fOrdLind_3
                                                                                                                                                                                                                                                                                                                                                                                                                         a18
                                                                                                                                                                                                                                                                                                                                                                                                                         b17 of wild25 {
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                                                                                                                                                                                                                                  -> wild1
                                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                                                                                                                                                                                                                                  -> wild } } }
                                                                                                                                                                                                                                                                                                                                           GHC.Types.GT
                                                                                                                                                                                                                                                                                                                                           -> wild1 } } }
                                                                                                                                                                                                                                                                                              GHC.Types.GT
                                                                                                                                                                                                                                                                                              -> wild1 } } }
                                                                                                                                                                                                                                                 GHC.Types.GT
                                                                                                                                                                                                                                                 -> wild1 } } }
                                                                                                                                                                                                    GHC.Types.GT
                                                                                                                                                                                                    -> wild1 } } }
                                                                                                                                                       GHC.Types.GT
                                                                                                                                                       -> wild1 } } }
                                                                                                          GHC.Types.GT
                                                                                                          -> wild1 } } }
                                                             GHC.Types.GT -> wild1 } } } } }) -}
7d3834ac3137994ffefa108d5ae938df
  $s$fOrd(,,,,,,,)_$s$fOrdInd ::
    GHC.Classes.Ord (Index.Ind n Index.Lind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_3)
                  (TensorF.$s$fEqInd7 @ n)
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Lind_3
                                                            Index.$fOrdLind_3
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Lind_3
                                                      Index.$fOrdLind_3
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_3
                                                                                                                                Index.$fOrdLind_3
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Lind_3
                                                                                       Index.$fOrdLind_3
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_3)
                     (b :: Index.Ind n Index.Lind_3) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_3
                                                                                                                                Index.$fOrdLind_3
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Lind_3)
                     (y :: Index.Ind n Index.Lind_3) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_3
                                                                                               Index.$fOrdLind_3
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Lind_3)
                     (y :: Index.Ind n Index.Lind_3) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_3
                                                                                               Index.$fOrdLind_3
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
101bd47de06bcb4e943d8b8b0062c98c
  $s$fOrd(,,,,,,,)_$s$fOrdInd1 ::
    GHC.Classes.Ord (Index.Ind n Index.Uind_3)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_3)
                  (TensorF.$s$fEqInd6 @ n)
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Uind_3
                                                            Index.$fOrdUind_3
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Uind_3
                                                      Index.$fOrdUind_3
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_3
                                                                                                                                Index.$fOrdUind_3
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Uind_3
                                                                                       Index.$fOrdUind_3
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_3)
                     (b :: Index.Ind n Index.Uind_3) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_3
                                                                                                                                Index.$fOrdUind_3
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Uind_3)
                     (y :: Index.Ind n Index.Uind_3) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_3
                                                                                               Index.$fOrdUind_3
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Uind_3)
                     (y :: Index.Ind n Index.Uind_3) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_3
                                                                                               Index.$fOrdUind_3
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
954f31681c4f8d6e8a037abed2b2c1f0
  $s$fOrd(,,,,,,,)_$s$fOrdInd2 ::
    GHC.Classes.Ord (Index.Ind n Index.Lind_9)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_9)
                  (TensorF.$s$fEqInd5 @ n)
                  (\ (a1 :: Index.Ind n Index.Lind_9)
                     (b :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Lind_9
                                                            Index.$fOrdLind_9
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_9)
                     (b :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Lind_9
                                                      Index.$fOrdLind_9
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_9)
                     (b :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_9
                                                                                                                                Index.$fOrdLind_9
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Lind_9)
                     (b :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Lind_9
                                                                                       Index.$fOrdLind_9
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_9)
                     (b :: Index.Ind n Index.Lind_9) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_9
                                                                                                                                Index.$fOrdLind_9
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Lind_9)
                     (y :: Index.Ind n Index.Lind_9) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_9
                                                                                               Index.$fOrdLind_9
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Lind_9)
                     (y :: Index.Ind n Index.Lind_9) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_9
                                                                                               Index.$fOrdLind_9
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
58661aa412fcf0d659d4b6a043b70814
  $s$fOrd(,,,,,,,)_$s$fOrdInd3 ::
    GHC.Classes.Ord (Index.Ind n Index.Uind_9)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_9)
                  (TensorF.$s$fEqInd4 @ n)
                  (\ (a1 :: Index.Ind n Index.Uind_9)
                     (b :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Uind_9
                                                            Index.$fOrdUind_9
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_9)
                     (b :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Uind_9
                                                      Index.$fOrdUind_9
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_9)
                     (b :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_9
                                                                                                                                Index.$fOrdUind_9
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Uind_9)
                     (b :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Uind_9
                                                                                       Index.$fOrdUind_9
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_9)
                     (b :: Index.Ind n Index.Uind_9) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_9
                                                                                                                                Index.$fOrdUind_9
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Uind_9)
                     (y :: Index.Ind n Index.Uind_9) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_9
                                                                                               Index.$fOrdUind_9
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Uind_9)
                     (y :: Index.Ind n Index.Uind_9) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_9
                                                                                               Index.$fOrdUind_9
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
cc4dfde4715536b22c442221c8e28c9a
  $s$fOrd(,,,,,,,)_$s$fOrdInd4 ::
    GHC.Classes.Ord (Index.Ind n Index.Lind_19)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_19)
                  (TensorF.$s$fEqInd3 @ n)
                  (\ (a1 :: Index.Ind n Index.Lind_19)
                     (b :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Lind_19
                                                            Index.$fOrdLind_19
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_19)
                     (b :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Lind_19
                                                      Index.$fOrdLind_19
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_19)
                     (b :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_19
                                                                                                                                Index.$fOrdLind_19
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Lind_19)
                     (b :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Lind_19
                                                                                       Index.$fOrdLind_19
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_19)
                     (b :: Index.Ind n Index.Lind_19) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_19
                                                                                                                                Index.$fOrdLind_19
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Lind_19)
                     (y :: Index.Ind n Index.Lind_19) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_19
                                                                                               Index.$fOrdLind_19
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Lind_19)
                     (y :: Index.Ind n Index.Lind_19) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_19
                                                                                               Index.$fOrdLind_19
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
bd38efe589411b52fe3e1ce6861693bd
  $s$fOrd(,,,,,,,)_$s$fOrdInd5 ::
    GHC.Classes.Ord (Index.Ind n Index.Uind_19)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_19)
                  (TensorF.$s$fEqInd2 @ n)
                  (\ (a1 :: Index.Ind n Index.Uind_19)
                     (b :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Uind_19
                                                            Index.$fOrdUind_19
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_19)
                     (b :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Uind_19
                                                      Index.$fOrdUind_19
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_19)
                     (b :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_19
                                                                                                                                Index.$fOrdUind_19
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Uind_19)
                     (b :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Uind_19
                                                                                       Index.$fOrdUind_19
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_19)
                     (b :: Index.Ind n Index.Uind_19) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_19
                                                                                                                                Index.$fOrdUind_19
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Uind_19)
                     (y :: Index.Ind n Index.Uind_19) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_19
                                                                                               Index.$fOrdUind_19
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Uind_19)
                     (y :: Index.Ind n Index.Uind_19) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_19
                                                                                               Index.$fOrdUind_19
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
9bc6f4a8337f7f5e20d337c7d281b20f
  $s$fOrd(,,,,,,,)_$s$fOrdInd6 ::
    GHC.Classes.Ord (Index.Ind n Index.Lind_20)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Lind_20)
                  (TensorF.$s$fEqInd1 @ n)
                  (\ (a1 :: Index.Ind n Index.Lind_20)
                     (b :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Lind_20
                                                            Index.$fOrdLind_20
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_20)
                     (b :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Lind_20
                                                      Index.$fOrdLind_20
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_20)
                     (b :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_20
                                                                                                                                Index.$fOrdLind_20
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Lind_20)
                     (b :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Lind_20
                                                                                       Index.$fOrdLind_20
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Lind_20)
                     (b :: Index.Ind n Index.Lind_20) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Lind_20
                                                                                                                                Index.$fOrdLind_20
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Lind_20)
                     (y :: Index.Ind n Index.Lind_20) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_20
                                                                                               Index.$fOrdLind_20
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Lind_20)
                     (y :: Index.Ind n Index.Lind_20) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Lind_20
                                                                                               Index.$fOrdLind_20
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
d69af30393d52f61d0f317e3097251cd
  $s$fOrd(,,,,,,,)_$s$fOrdInd7 ::
    GHC.Classes.Ord (Index.Ind n Index.Uind_20)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ n :: GHC.Types.Nat.
                  @ (Index.Ind n Index.Uind_20)
                  (TensorF.$s$fEqInd @ n)
                  (\ (a1 :: Index.Ind n Index.Uind_20)
                     (b :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.compare} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                          case b of wild1 { Index.UnsafemkInd b1 ->
                                                          Data.Sequence.Internal.$fOrdSeq_$ccompare
                                                            @ Index.Uind_20
                                                            Index.$fOrdUind_20
                                                            a2
                                                            b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_20)
                     (b :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.<} True True} case a1 of wild { Index.UnsafemkInd a2 ->
                                                    case b of wild1 { Index.UnsafemkInd b1 ->
                                                    Data.Sequence.Internal.$fOrdSeq_$c<
                                                      @ Index.Uind_20
                                                      Index.$fOrdUind_20
                                                      a2
                                                      b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_20)
                     (b :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} case b of wild { Index.UnsafemkInd a2 ->
                                                                                       case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_20
                                                                                                                                Index.$fOrdUind_20
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (a1 :: Index.Ind n Index.Uind_20)
                     (b :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.>} True True} {__scc {main:Index.<} True True} case b of wild { Index.UnsafemkInd a2 ->
                                                                                     case a1 of wild1 { Index.UnsafemkInd b1 ->
                                                                                     Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                       @ Index.Uind_20
                                                                                       Index.$fOrdUind_20
                                                                                       a2
                                                                                       b1 } })
                  (\ (a1 :: Index.Ind n Index.Uind_20)
                     (b :: Index.Ind n Index.Uind_20) ->
                   {__scc {main:Index.>=} True True} {__scc {main:Index.<} True False} case a1 of wild { Index.UnsafemkInd a2 ->
                                                                                       case b of wild1 { Index.UnsafemkInd b1 ->
                                                                                       case {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                                                                @ Index.Uind_20
                                                                                                                                Index.$fOrdUind_20
                                                                                                                                a2
                                                                                                                                b1 of wild2 {
                                                                                         GHC.Types.False
                                                                                         -> GHC.Types.True
                                                                                         GHC.Types.True
                                                                                         -> GHC.Types.False } } })
                  (\ (x :: Index.Ind n Index.Uind_20)
                     (y :: Index.Ind n Index.Uind_20) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_20
                                                                                               Index.$fOrdUind_20
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild GHC.Types.True -> wild1 } } })
                  (\ (x :: Index.Ind n Index.Uind_20)
                     (y :: Index.Ind n Index.Uind_20) ->
                   case {__scc {main:Index.<=} True True} {__scc {main:Index.<} True False} y of wild { Index.UnsafemkInd a1 ->
                   case x of wild1 { Index.UnsafemkInd b1 ->
                   case {__scc {main:Index.<=} False True} {__scc {main:Index.<} False True} Data.Sequence.Internal.$fOrdSeq_$c<
                                                                                               @ Index.Uind_20
                                                                                               Index.$fOrdUind_20
                                                                                               a1
                                                                                               b1 of wild2 {
                     GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
c418340ac26b5dc62990c7419e7f96ae
  $scontractionIndexList_1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index 0 1 n3 n4 n5 n6 n7 n8
    -> [Index.Index
          (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(SLLLLLLL),1*U(1*U(U),1*U(U),U,U,U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index 0 1 n3 n4 n5 n6 n7 n8) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww30 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_20
                   @ 0
                   @ 1
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   ww28
                   ww29
                   ww39
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } }) -}
8a9b47561704e0224541d26a9ff11c86
  $scontractionIndexList_2 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index n1 n2 n3 n4 n5 n6 2 2
    -> [Index.Index
          n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(LLLLLLSL),1*U(U,U,U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index n1 n2 n3 n4 n5 n6 2 2) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww36 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_3
                   @ 2
                   @ 2
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww39
                   ww37 } } }) -}
996f5d03eb5e103de954beb014b9cb82
  $scontractionIndexList_20 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index 1 2 n3 n4 n5 n6 n7 n8
    -> [Index.Index
          (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(SLLLLLLL),1*U(1*U(U),1*U(U),U,U,U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index 1 2 n3 n4 n5 n6 n7 n8) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww30 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_20
                   @ 1
                   @ 2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   ww28
                   ww29
                   ww39
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } } }) -}
45364d7a2561120a4a5764d1e725244a
  $scontractionIndexList_3 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index n1 n2 n3 n4 n5 n6 3 3
    -> [Index.Index
          n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(LLLLLLSL),1*U(U,U,U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index n1 n2 n3 n4 n5 n6 3 3) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww36 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_3
                   @ 3
                   @ 3
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww39
                   ww37 } } }) -}
f8237534f125426c3fbdad3839bdcde7
  $scontractionIndexList_4 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index n1 n2 n3 n4 n5 n6 1 1
    -> [Index.Index
          n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(LLLLLLSL),1*U(U,U,U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index n1 n2 n3 n4 n5 n6 1 1) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww36 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_3
                   @ 1
                   @ 1
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww39
                   ww37 } } }) -}
b4f41ddf5056be7305037b565b41c63f
  $scontractionIndexList_5 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> Index.Index n1 n2 n3 n4 n5 n6 0 0
    -> [Index.Index
          n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)]
  {- Arity: 2,
     Strictness: <S,1*U(U(U),U(U))><S(LLLLLLSL),1*U(U,U,U,U,U,U,1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w2 :: (GHC.Types.Int, GHC.Types.Int))
                   (w3 :: Index.Index n1 n2 n3 n4 n5 n6 0 0) ->
                 case w2 of ww { (,) ww28 ww29 ->
                 case w3 of ww3 { (,,,,,,,) ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 case ww36 of ww38 { Index.UnsafemkInd ww39 ->
                 Index.$wcontractionIndexList_3
                   @ 0
                   @ 0
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww39
                   ww37 } } }) -}
00aa0a42cc1ebe84cadb5db4c5419582
  $sfromList ::
    [(Index.Index 1 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a
  {- Arity: 1, Strictness: <S,1*U> -}
29226138cfed87f6fb301fecc5638d95
  $sfromList1 ::
    [(Index.Index 0 0 0 0 0 0 0 4, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a
  {- Arity: 1, Strictness: <S,1*U> -}
5c0e3cf2265c37c22f2f3466cf1a90df
  $sfromList10 ::
    [(Index.Index 1 1 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 1 1 1 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
a139a7576d3122039d3a74e542c90c2f
  $sfromList11 ::
    [(Index.Index 0 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 1 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
3bb6e776049b8e6b30f2ac87ff58a493
  $sfromList12 ::
    [(Index.Index 0 1 0 0 0 0 0 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 0 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
319d021264bfa924c459f5d1b63c866d
  $sfromList2 ::
    [(Index.Index 0 1 0 0 0 0 4 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
c55a86f2f5e7786da7572c87f2d6680c
  $sfromList3 ::
    [(Index.Index 0 0 0 1 0 0 3 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
166019b87b43d8767614ce789ad173fa
  $sfromList4 ::
    [(Index.Index 0 0 1 0 0 0 0 3, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a
  {- Arity: 1, Strictness: <S,1*U> -}
973e25ecd99f877234282d3b1c1395cf
  $sfromList5 ::
    [(Index.Index 0 0 0 0 0 1 2 0, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a
  {- Arity: 1, Strictness: <S,1*U> -}
6001b5bd408403bb93da5f6df7da45be
  $sfromList6 ::
    [(Index.Index 0 0 0 0 1 0 0 2, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a
  {- Arity: 1, Strictness: <S,1*U> -}
c9cc44e93b346e38953ac13cbed1fcf4
  $sfromList7 ::
    [(Index.Index 1 1 0 0 0 0 2 2, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 2 2) a
  {- Arity: 1, Strictness: <S,1*U> -}
51034b737ec0b93bafd560a5123e56b2
  $sfromList8 ::
    [(Index.Index 1 1 0 0 0 0 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 1 1 0 0 0 0 1 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
6cc0aece0e053651cc61f1ba9ec99b58
  $sfromList9 ::
    [(Index.Index 0 0 0 0 1 1 1 1, a)]
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 1 1 1) a
  {- Arity: 1, Strictness: <S,1*U> -}
6a8bc1dd58189566ef391019e5842313
  $sinsert_$sgo1 ::
    Index.Index 0 1 0 0 0 0 4 0
    -> Index.Index 0 1 0 0 0 0 4 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 1 0 0 0 0 4 0) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
89e89f220619dba031564af4961cd117
  $sinsert_$sgo13 ::
    Index.Index 0 0 0 0 0 0 0 4
    -> Index.Index 0 0 0 0 0 0 0 4
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 0 0 4) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
2b69750a49f53379e5b3841e9ddf0292
  $sinsert_$sgo2 ::
    Index.Index 0 0 0 1 0 0 3 0
    -> Index.Index 0 0 0 1 0 0 3 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 1 0 0 3 0) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
fe31e14b70830ebec46f89cf06131def
  $sinsert_$sgo3 ::
    Index.Index 0 0 0 0 0 1 2 0
    -> Index.Index 0 0 0 0 0 1 2 0
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 0 1 2 0) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
75312c51ab2f41e8ea100f45078e54af
  $sinsert_$sgo4 ::
    Index.Index 0 0 0 0 1 0 0 2
    -> Index.Index 0 0 0 0 1 0 0 2
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 0 0 1 0 0 2) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
0c1e07678b3a208efef266598033be5a
  $sinsert_$sgo5 ::
    Index.Index 0 0 1 0 0 0 0 3
    -> Index.Index 0 0 1 0 0 0 0 3
    -> a1
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a1
    -> Data.Map.Internal.Map (Index.Index 0 0 1 0 0 0 0 3) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
eeb552815e2278dcdefae95808685552
  $sinsert_$sgo6 ::
    Index.Index 1 0 0 0 0 0 0 4
    -> Index.Index 1 0 0 0 0 0 0 4
    -> a1
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a1
    -> Data.Map.Internal.Map (Index.Index 1 0 0 0 0 0 0 4) a1
  {- Arity: 4,
     Strictness: <L,U><S,1*U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><L,U><S,1*U> -}
522f8482b1d6dd691e86b342d5faf940
  $tc'Tensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9066986265612291277##
                   11625602710013122875##
                   TensorF.$trModule
                   TensorF.$tc'Tensor2
                   9#
                   TensorF.$tc'Tensor1) -}
402b9c44ae31ef8b0d6a4679fa6d236c
  $tc'Tensor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0785b63d08c5ab0f72496aac83bb10d8
  $tc'Tensor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$tc'Tensor3) -}
f916b2319d791ddc8ff2aacf0ef4640e
  $tc'Tensor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tensor"#) -}
7ca9c3b1763cea17874b40b8f1cff03b
  $tcTensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8145205541696845073##
                   2728017174972678941##
                   TensorF.$trModule
                   TensorF.$tcTensor2
                   0#
                   TensorF.$tcTensor1) -}
6065702f6e8c80a0ca98e365aa9cf533
  $tcTensor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2879ce431ff867fac074b19b6aa56e73
  $tcTensor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$tcTensor3) -}
239af9a0b35389f649ac50684593dbbb
  $tcTensor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tensor"#) -}
fa8a7c6c786bfb079bca1aded4e06923
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TensorF.$trModule3
                   TensorF.$trModule1) -}
23f7818e45f6acf6da9dd25a9360f15f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$trModule2) -}
d3e116caf98938f8e248958f59f8fbb6
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TensorF"#) -}
b45d74af8d76f43b41e7dc54b8610ecb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TensorF.$trModule4) -}
a2b1bbad2af0ee1fbc395ca968ca6962
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
f248c98b44ed3833d412e31f9fe71aec
  $w$stensor2Map ::
    (Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 1 0 0 0 0 0 0
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 0 1 0 0 0 0 0 0)
                                                               @ GHC.Real.Rational
                                                               TensorF.flatAreaMap19
                                                               (TensorF.$sfromList12
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 0,
                                                                        Index.Linds_20 1,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 0,
                                                                        Index.Linds_3 0)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.flatAreaMap_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   0,
                                                                                                                                 Index.Linds_20
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   0,
                                                                                                                                 Index.Linds_9
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   0,
                                                                                                                                 Index.Linds_3
                                                                                                                                   0)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.flatAreaMap_indList)))) -}
53343d49ebca5fac64c89324950aad93
  $w$stensor2Map1 ::
    (Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 4
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 0 0 0 0 0 0 0 4)
                                                               @ GHC.Real.Rational
                                                               TensorF.flatAreaSTMap1
                                                               (TensorF.$sfromList1
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 0,
                                                                        Index.Linds_20 0,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 0,
                                                                        Index.Linds_3 4)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.flatAreaSTMap_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   0,
                                                                                                                                 Index.Linds_20
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   0,
                                                                                                                                 Index.Linds_9
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   0,
                                                                                                                                 Index.Linds_3
                                                                                                                                   4)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.flatAreaSTMap_indList)))) -}
2fba451c39891354f0f3bcb1fd4a60de
  $w$stensor2Map2 ::
    (Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 1 0 0 0 0 1 1
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 0 1 0 0 0 0 1 1)
                                                               @ GHC.Real.Rational
                                                               TensorF.flatInterMap5
                                                               (TensorF.$sfromList11
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 0,
                                                                        Index.Linds_20 1,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 1,
                                                                        Index.Linds_3 1)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.flatInterMap_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   0,
                                                                                                                                 Index.Linds_20
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   0,
                                                                                                                                 Index.Linds_9
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   1,
                                                                                                                                 Index.Linds_3
                                                                                                                                   1)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.flatInterMap_indList)))) -}
ad6f6159dee373d343e5017f87d580c4
  $w$stensor2Map3 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 1 1 0 0 0 0 1 1)
                                                               @ GHC.Real.Rational
                                                               TensorF.interArea1
                                                               (TensorF.$sfromList8
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 1,
                                                                        Index.Linds_20 1,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 1,
                                                                        Index.Linds_3 1)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.interArea_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   1,
                                                                                                                                 Index.Linds_20
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   0,
                                                                                                                                 Index.Linds_9
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   1,
                                                                                                                                 Index.Linds_3
                                                                                                                                   1)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.interArea_indList)))) -}
a45fdea0dd6a4ae10663e8bfcf5bd2d9
  $w$stensor2Map4 ::
    (Index.Index 1 1 0 0 0 0 2 2 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 2 2
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 1 1 0 0 0 0 2 2)
                                                               @ GHC.Real.Rational
                                                               TensorF.interEqn1_8
                                                               (TensorF.$sfromList7
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 1,
                                                                        Index.Linds_20 1,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 2,
                                                                        Index.Linds_3 2)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.interEqn1_2_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   1,
                                                                                                                                 Index.Linds_20
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   0,
                                                                                                                                 Index.Linds_9
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   2,
                                                                                                                                 Index.Linds_3
                                                                                                                                   2)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.interEqn1_2_indList)))) -}
cb2c6331efd2aa45df79f02820c55a5b
  $w$stensor2Map5 ::
    (Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 1 1 1 1
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 1 1 0 0 1 1 1 1)
                                                               @ GHC.Real.Rational
                                                               TensorF.interEqn1_16
                                                               (TensorF.$sfromList10
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 1,
                                                                        Index.Linds_20 1,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 1,
                                                                        Index.Linds_9 1,
                                                                        Index.Uinds_3 1,
                                                                        Index.Linds_3 1)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.interEqn1_3_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   1,
                                                                                                                                 Index.Linds_20
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   1,
                                                                                                                                 Index.Linds_9
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   1,
                                                                                                                                 Index.Linds_3
                                                                                                                                   1)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.interEqn1_3_indList)))) -}
d6ef8666bbd140a601873233c57b8afe
  $w$stensor2Map6 ::
    (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 1 1
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensor2Map} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 0 0 0 0 1 1 1 1)
                                                               @ GHC.Real.Rational
                                                               TensorF.interMetric1
                                                               (TensorF.$sfromList9
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 0,
                                                                        Index.Linds_20 0,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 1,
                                                                        Index.Linds_9 1,
                                                                        Index.Uinds_3 1,
                                                                        Index.Linds_3 1)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.interMetric_indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   0,
                                                                                                                                 Index.Linds_20
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   0,
                                                                                                                                 Index.Linds_19
                                                                                                                                   0,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   1,
                                                                                                                                 Index.Linds_9
                                                                                                                                   1,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   1,
                                                                                                                                 Index.Linds_3
                                                                                                                                   1)
                                                                                                                              @ (GHC.Real.Ratio
                                                                                                                                   GHC.Integer.Type.Integer)
                                                                                                                              ww
                                                                                                                              TensorF.interMetric_indList)))) -}
67341095765036023cf244de34e7c854
  $w$stensorContract_1 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 1 1 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (1 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_3} True False} (# {__scc {main:TensorF.tensorContract_3} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   1
                                                                                                                                   1
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       n5
                                                                                                                                       n6
                                                                                                                                       (1
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (1
                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                            = {__scc {main:TensorF.tensorContract_3.l} True True} TensorF.$scontractionIndexList_4
                                                                                                                                                                                    @ n1
                                                                                                                                                                                    @ n2
                                                                                                                                                                                    @ n3
                                                                                                                                                                                    @ n4
                                                                                                                                                                                    @ n5
                                                                                                                                                                                    @ n6
                                                                                                                                                                                    w
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_3.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         1
                                                                                                                                                                                         1) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                       n1
                                                                                                                                                                                                                                                                                                       n2
                                                                                                                                                                                                                                                                                                       n3
                                                                                                                                                                                                                                                                                                       n4
                                                                                                                                                                                                                                                                                                       n5
                                                                                                                                                                                                                                                                                                       n6
                                                                                                                                                                                                                                                                                                       (1
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                       (1
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                              <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                          Inline: [0] -}
                                                                                                                                                                                                                                                                                            = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          (1
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (1
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)])
                                                                                                                                                                                                                                                                                                (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                              case w1 of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                     ww28
                                                                                                                                                                                                                                                                                                     ww29
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> {__scc {main:TensorF.tensorContract_3.g.\.\} True False} case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                            y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                            case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                            ww28
                                                                                                                                                                                                                                                                                                                                                                                                                            ww29
                                                                                                                                                                                                                                                                                                                                                                                                                            ww30
                                                                                                                                                                                                                                                                                                                                                                                                                            ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                            $wgo
                                                                                                                                                                                                                                                                                                                                                              ys
                                                                                                                                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                                                                                                                                              ww34 } } }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          $wgo
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            TensorF.delta_4
                                                                                                                                                                                                                                                                                            GHC.Real.$fEnumRatio1 #)) -}
98b2140217909b10a677a204b12c57cf
  $w$stensorContract_2 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 2 2 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (2 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_3} True False} (# {__scc {main:TensorF.tensorContract_3} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   2
                                                                                                                                   2
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       n5
                                                                                                                                       n6
                                                                                                                                       (2
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (2
                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                            = {__scc {main:TensorF.tensorContract_3.l} True True} TensorF.$scontractionIndexList_2
                                                                                                                                                                                    @ n1
                                                                                                                                                                                    @ n2
                                                                                                                                                                                    @ n3
                                                                                                                                                                                    @ n4
                                                                                                                                                                                    @ n5
                                                                                                                                                                                    @ n6
                                                                                                                                                                                    w
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_3.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         2
                                                                                                                                                                                         2) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                       n1
                                                                                                                                                                                                                                                                                                       n2
                                                                                                                                                                                                                                                                                                       n3
                                                                                                                                                                                                                                                                                                       n4
                                                                                                                                                                                                                                                                                                       n5
                                                                                                                                                                                                                                                                                                       n6
                                                                                                                                                                                                                                                                                                       (2
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                       (2
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                              <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                          Inline: [0] -}
                                                                                                                                                                                                                                                                                            = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          (2
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (2
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)])
                                                                                                                                                                                                                                                                                                (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                              case w1 of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                     ww28
                                                                                                                                                                                                                                                                                                     ww29
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> {__scc {main:TensorF.tensorContract_3.g.\.\} True False} case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                            y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                            case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                            ww28
                                                                                                                                                                                                                                                                                                                                                                                                                            ww29
                                                                                                                                                                                                                                                                                                                                                                                                                            ww30
                                                                                                                                                                                                                                                                                                                                                                                                                            ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                            $wgo
                                                                                                                                                                                                                                                                                                                                                              ys
                                                                                                                                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                                                                                                                                              ww34 } } }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          $wgo
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            TensorF.delta_4
                                                                                                                                                                                                                                                                                            GHC.Real.$fEnumRatio1 #)) -}
a4c9745dfdb3dbd46537f8d25208e5c5
  $w$stensorContract_20 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> GHC.Real.Rational)
    -> (# Index.Index 0 1 n3 n4 n5 n6 n7 n8 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (0 GHC.TypeNats.+ 1) (1 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_20} True False} (# {__scc {main:TensorF.tensorContract_20} False True} let {
                                                                                                                              l :: Index.Index
                                                                                                                                     0
                                                                                                                                     1
                                                                                                                                     n3
                                                                                                                                     n4
                                                                                                                                     n5
                                                                                                                                     n6
                                                                                                                                     n7
                                                                                                                                     n8
                                                                                                                                   -> [Index.Index
                                                                                                                                         (0
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         (1
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         n3
                                                                                                                                         n4
                                                                                                                                         n5
                                                                                                                                         n6
                                                                                                                                         n7
                                                                                                                                         n8]
                                                                                                                              = {__scc {main:TensorF.tensorContract_20.l} True True} TensorF.$scontractionIndexList_1
                                                                                                                                                                                       @ n3
                                                                                                                                                                                       @ n4
                                                                                                                                                                                       @ n5
                                                                                                                                                                                       @ n6
                                                                                                                                                                                       @ n7
                                                                                                                                                                                       @ n8
                                                                                                                                                                                       w
                                                                                                                            } in
                                                                                                                            {__scc {main:TensorF.tensorContract_20.g} True False} \ (i :: Index.Index
                                                                                                                                                                                            0
                                                                                                                                                                                            1
                                                                                                                                                                                            n3
                                                                                                                                                                                            n4
                                                                                                                                                                                            n5
                                                                                                                                                                                            n6
                                                                                                                                                                                            n7
                                                                                                                                                                                            n8) ->
                                                                                                                                                                                  {__scc {main:TensorF.tensorContract_20.g} False True} {__scc {main:TensorF.tensorContract_20.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                                 $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                            (0
                                                                                                                                                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                            (1
                                                                                                                                                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                            n3
                                                                                                                                                                                                                                                                                                            n4
                                                                                                                                                                                                                                                                                                            n5
                                                                                                                                                                                                                                                                                                            n6
                                                                                                                                                                                                                                                                                                            n7
                                                                                                                                                                                                                                                                                                            n8]
                                                                                                                                                                                                                                                                                                         -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                         -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                         -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                                   <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                               Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                               Inline: [0] -}
                                                                                                                                                                                                                                                                                                 = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                               (0
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               (1
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               n3
                                                                                                                                                                                                                                                                                                               n4
                                                                                                                                                                                                                                                                                                               n5
                                                                                                                                                                                                                                                                                                               n6
                                                                                                                                                                                                                                                                                                               n7
                                                                                                                                                                                                                                                                                                               n8])
                                                                                                                                                                                                                                                                                                     (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                     (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                                   case w1 of wild {
                                                                                                                                                                                                                                                                                                     []
                                                                                                                                                                                                                                                                                                     -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                          ww28
                                                                                                                                                                                                                                                                                                          ww29
                                                                                                                                                                                                                                                                                                     : y ys
                                                                                                                                                                                                                                                                                                     -> {__scc {main:TensorF.tensorContract_20.g.\.\} True False} case {__scc {main:TensorF.tensorContract_20.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                                   y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                                  case {__scc {main:TensorF.tensorContract_20.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww28
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww29
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww30
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                                  $wgo
                                                                                                                                                                                                                                                                                                                                                                    ys
                                                                                                                                                                                                                                                                                                                                                                    ww33
                                                                                                                                                                                                                                                                                                                                                                    ww34 } } }
                                                                                                                                                                                                                                                                                               } in
                                                                                                                                                                                                                                                                                               $wgo
                                                                                                                                                                                                                                                                                                 (l i)
                                                                                                                                                                                                                                                                                                 TensorF.delta_4
                                                                                                                                                                                                                                                                                                 GHC.Real.$fEnumRatio1 #)) -}
cc22839639687b7e037f29a732f2fe0a
  $w$stensorContract_3 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 0 0 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (0 GHC.TypeNats.+ 1) (0 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_3} True False} (# {__scc {main:TensorF.tensorContract_3} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   0
                                                                                                                                   0
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       n5
                                                                                                                                       n6
                                                                                                                                       (0
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (0
                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                            = {__scc {main:TensorF.tensorContract_3.l} True True} TensorF.$scontractionIndexList_5
                                                                                                                                                                                    @ n1
                                                                                                                                                                                    @ n2
                                                                                                                                                                                    @ n3
                                                                                                                                                                                    @ n4
                                                                                                                                                                                    @ n5
                                                                                                                                                                                    @ n6
                                                                                                                                                                                    w
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_3.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         0
                                                                                                                                                                                         0) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                       n1
                                                                                                                                                                                                                                                                                                       n2
                                                                                                                                                                                                                                                                                                       n3
                                                                                                                                                                                                                                                                                                       n4
                                                                                                                                                                                                                                                                                                       n5
                                                                                                                                                                                                                                                                                                       n6
                                                                                                                                                                                                                                                                                                       (0
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                       (0
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                              <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                          Inline: [0] -}
                                                                                                                                                                                                                                                                                            = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          (0
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (0
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)])
                                                                                                                                                                                                                                                                                                (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                              case w1 of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                     ww28
                                                                                                                                                                                                                                                                                                     ww29
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> {__scc {main:TensorF.tensorContract_3.g.\.\} True False} case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                            y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                            case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                            ww28
                                                                                                                                                                                                                                                                                                                                                                                                                            ww29
                                                                                                                                                                                                                                                                                                                                                                                                                            ww30
                                                                                                                                                                                                                                                                                                                                                                                                                            ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                            $wgo
                                                                                                                                                                                                                                                                                                                                                              ys
                                                                                                                                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                                                                                                                                              ww34 } } }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          $wgo
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            TensorF.delta_4
                                                                                                                                                                                                                                                                                            GHC.Real.$fEnumRatio1 #)) -}
70d4475e60bc1741f4e05da8c8297b8f
  $w$stensorContract_4 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)
        -> GHC.Real.Rational)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 3 3 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (3 GHC.TypeNats.+ 1) (3 GHC.TypeNats.+ 1)
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_3} True False} (# {__scc {main:TensorF.tensorContract_3} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   3
                                                                                                                                   3
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       n5
                                                                                                                                       n6
                                                                                                                                       (3
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (3
                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                            = {__scc {main:TensorF.tensorContract_3.l} True True} TensorF.$scontractionIndexList_3
                                                                                                                                                                                    @ n1
                                                                                                                                                                                    @ n2
                                                                                                                                                                                    @ n3
                                                                                                                                                                                    @ n4
                                                                                                                                                                                    @ n5
                                                                                                                                                                                    @ n6
                                                                                                                                                                                    w
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_3.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         3
                                                                                                                                                                                         3) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                       n1
                                                                                                                                                                                                                                                                                                       n2
                                                                                                                                                                                                                                                                                                       n3
                                                                                                                                                                                                                                                                                                       n4
                                                                                                                                                                                                                                                                                                       n5
                                                                                                                                                                                                                                                                                                       n6
                                                                                                                                                                                                                                                                                                       (3
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                       (3
                                                                                                                                                                                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                    -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                              <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                          Inline: [0] -}
                                                                                                                                                                                                                                                                                            = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          (3
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (3
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)])
                                                                                                                                                                                                                                                                                                (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                              case w1 of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                     ww28
                                                                                                                                                                                                                                                                                                     ww29
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> {__scc {main:TensorF.tensorContract_3.g.\.\} True False} case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                            y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                            case {__scc {main:TensorF.tensorContract_3.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                            ww28
                                                                                                                                                                                                                                                                                                                                                                                                                            ww29
                                                                                                                                                                                                                                                                                                                                                                                                                            ww30
                                                                                                                                                                                                                                                                                                                                                                                                                            ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                            $wgo
                                                                                                                                                                                                                                                                                                                                                              ys
                                                                                                                                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                                                                                                                                              ww34 } } }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          $wgo
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            TensorF.delta_4
                                                                                                                                                                                                                                                                                            GHC.Real.$fEnumRatio1 #)) -}
41add65de194eb512f20f00cf8c395c0
  $w$stensorContract_5 ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> GHC.Real.Rational)
    -> (# Index.Index 1 2 n3 n4 n5 n6 n7 n8 -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><L,C(U(U,U))>,
     Inline: [0],
     Unfolding: (\ @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (1 GHC.TypeNats.+ 1) (2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorContract_20} True False} (# {__scc {main:TensorF.tensorContract_20} False True} let {
                                                                                                                              l :: Index.Index
                                                                                                                                     1
                                                                                                                                     2
                                                                                                                                     n3
                                                                                                                                     n4
                                                                                                                                     n5
                                                                                                                                     n6
                                                                                                                                     n7
                                                                                                                                     n8
                                                                                                                                   -> [Index.Index
                                                                                                                                         (1
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         (2
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         n3
                                                                                                                                         n4
                                                                                                                                         n5
                                                                                                                                         n6
                                                                                                                                         n7
                                                                                                                                         n8]
                                                                                                                              = {__scc {main:TensorF.tensorContract_20.l} True True} TensorF.$scontractionIndexList_20
                                                                                                                                                                                       @ n3
                                                                                                                                                                                       @ n4
                                                                                                                                                                                       @ n5
                                                                                                                                                                                       @ n6
                                                                                                                                                                                       @ n7
                                                                                                                                                                                       @ n8
                                                                                                                                                                                       w
                                                                                                                            } in
                                                                                                                            {__scc {main:TensorF.tensorContract_20.g} True False} \ (i :: Index.Index
                                                                                                                                                                                            1
                                                                                                                                                                                            2
                                                                                                                                                                                            n3
                                                                                                                                                                                            n4
                                                                                                                                                                                            n5
                                                                                                                                                                                            n6
                                                                                                                                                                                            n7
                                                                                                                                                                                            n8) ->
                                                                                                                                                                                  {__scc {main:TensorF.tensorContract_20.g} False True} {__scc {main:TensorF.tensorContract_20.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                                 $wgo :: [Index.Index
                                                                                                                                                                                                                                                                                                            (1
                                                                                                                                                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                            (2
                                                                                                                                                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                            n3
                                                                                                                                                                                                                                                                                                            n4
                                                                                                                                                                                                                                                                                                            n5
                                                                                                                                                                                                                                                                                                            n6
                                                                                                                                                                                                                                                                                                            n7
                                                                                                                                                                                                                                                                                                            n8]
                                                                                                                                                                                                                                                                                                         -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                         -> GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                         -> GHC.Real.Rational
                                                                                                                                                                                                                                                                                                   <join 3> {- Arity: 3,
                                                                                                                                                                                                                                                                                                               Strictness: <S,1*U><L,U><L,U>m,
                                                                                                                                                                                                                                                                                                               Inline: [0] -}
                                                                                                                                                                                                                                                                                                 = \ (w1 :: [Index.Index
                                                                                                                                                                                                                                                                                                               (1
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               (2
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               n3
                                                                                                                                                                                                                                                                                                               n4
                                                                                                                                                                                                                                                                                                               n5
                                                                                                                                                                                                                                                                                                               n6
                                                                                                                                                                                                                                                                                                               n7
                                                                                                                                                                                                                                                                                                               n8])
                                                                                                                                                                                                                                                                                                     (ww28 :: GHC.Integer.Type.Integer)
                                                                                                                                                                                                                                                                                                     (ww29 :: GHC.Integer.Type.Integer) ->
                                                                                                                                                                                                                                                                                                   case w1 of wild {
                                                                                                                                                                                                                                                                                                     []
                                                                                                                                                                                                                                                                                                     -> GHC.Real.:%
                                                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                          ww28
                                                                                                                                                                                                                                                                                                          ww29
                                                                                                                                                                                                                                                                                                     : y ys
                                                                                                                                                                                                                                                                                                     -> {__scc {main:TensorF.tensorContract_20.g.\.\} True False} case {__scc {main:TensorF.tensorContract_20.g.\.\} False True} ww
                                                                                                                                                                                                                                                                                                                                                                                                                                   y of ww3 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                                                                                                                                                                                  case {__scc {main:TensorF.tensorContract_20.g.\.\} False True} GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww28
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww29
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww30
                                                                                                                                                                                                                                                                                                                                                                                                                                   ww31 of ww32 { (#,#) ww33 ww34 ->
                                                                                                                                                                                                                                                                                                                                                                  $wgo
                                                                                                                                                                                                                                                                                                                                                                    ys
                                                                                                                                                                                                                                                                                                                                                                    ww33
                                                                                                                                                                                                                                                                                                                                                                    ww34 } } }
                                                                                                                                                                                                                                                                                               } in
                                                                                                                                                                                                                                                                                               $wgo
                                                                                                                                                                                                                                                                                                 (l i)
                                                                                                                                                                                                                                                                                                 TensorF.delta_4
                                                                                                                                                                                                                                                                                                 GHC.Real.$fEnumRatio1 #)) -}
568db44c681955a9b4634636fe2b338b
  $w$stensorIndList ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 0 0 0 4]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
67fa4de2cb4a65c125a3e4981fff4355
  $w$stensorIndList1 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 0 0 0 0 0 0 4]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
20c5946edc67d9e1cff5431d58cc8d73
  $w$stensorIndList10 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 1 0 0 0 0 3]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
714eeb40042f6f635ea7e0cfedbccc5e
  $w$stensorIndList11 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 0 1 2 0]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
63d248833c51364f882cab320b17b862
  $w$stensorIndList12 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 1 0 0 2]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
7a4587c3d12c6551c578af9637438dce
  $w$stensorIndList2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 0 0 2 2]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
07c6be4a9c85924c933e49b8a657523c
  $w$stensorIndList3 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 0 0 1 1]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
5208d72aa553d35bfec6a710e8bc8cb8
  $w$stensorIndList4 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 0 1 1 1 1]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
93b2dbb7b10d21cc85227c08ce22cbb3
  $w$stensorIndList5 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 1 1 0 0 1 1 1 1]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
1251ed536aebc86aa1a8d11d3c2a8194
  $w$stensorIndList6 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 1 1]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
5343bf9ec626bb79418f28c8df49a885
  $w$stensorIndList7 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 0 0]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
a819616828652affa50539ab8a05c4bc
  $w$stensorIndList8 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 1 0 0 0 0 4 0]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
a616ac45535601a3a0c379f5a06ccfd3
  $w$stensorIndList9 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [Index.Index 0 0 0 1 0 0 3 0]
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
6bd8ccaa818206c9557dfd2988ef9bbd
  $w$stensorProd ::
    (Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 4)
            (4 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 4
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 4),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (4
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.flatAreaMap_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.flatAreaMap_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
cbca03d8607e642eb4ba22fa85540caf
  $w$stensorProd1 ::
    (Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 2)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 0 2
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 2))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.flatAreaSTMap_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.flatAreaSTMap_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
082bade23eaeb6e35823a9d8e98fba07
  $w$stensorProd10 ::
    (Index.Index 2 2 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (2 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 2 2 0 0 1 1 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
539632f64d57dd21bf0606ed0c6dd768
  $w$stensorProd11 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 1 1 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g1
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g1
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
b690856b4a29e9e4851138d163f93299
  $w$stensorProd12 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g2
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g2
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
4ac14f0c363f092ba425af1f711746c3
  $w$stensorProd13 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g3
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g3
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
10fab0e7e11b59f4531199438241045a
  $w$stensorProd14 ::
    (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 0 0
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g4
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g4
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
d25720fb3b544c036f175e90ee993fc6
  $w$stensorProd15 ::
    (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 0 0
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.tensorProd_g5
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.tensorProd_g5
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
39ff0e85e0dc586e43a54cbc6cf48c15
  $w$stensorProd2 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.flatInterMap_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.flatInterMap_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
0549f97841d5390d2f9c0de549112dbd
  $w$stensorProd3 ::
    (Index.Index 1 0 0 0 0 0 0 4 -> GHC.Real.Rational)
    -> (Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 4)
            (4 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 0 0 0 0 0 0 4
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 1 0 0 0 0 4 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 4),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (4
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interArea_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interArea_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
4d63dbf4f5730f76cdda140fe4cd8531
  $w$stensorProd4 ::
    (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interEqn1_2_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interEqn1_2_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
3358eddc1d56568437f63274574f141a
  $w$stensorProd5 ::
    (Index.Index 0 0 0 0 0 0 2 2 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 0)
            (2 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 0 0 2 2
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interEqn1_2_g1
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interEqn1_2_g1
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
5df286d3973f5d551ee38508cf4601bc
  $w$stensorProd6 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 1)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 1))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interEqn1_2_g2
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interEqn1_2_g2
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
7d405d2c2ed0898b48414a6280ff2262
  $w$stensorProd7 ::
    (Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 1 1 0 0 0 0 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interEqn1_3_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interEqn1_3_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
35e1e4e68f349c77f2f687ac5b026f70
  $w$stensorProd8 ::
    (Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational)
    -> (Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 1 1 1
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interEqn1_3_g1
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interEqn1_3_g1
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
8a5da960fa4e3458b6cc97ab1b684fe7
  $w$stensorProd9 ::
    (Index.Index 0 0 0 0 1 0 0 2 -> GHC.Real.Rational)
    -> (Index.Index 0 0 0 0 0 1 2 0 -> GHC.Real.Rational)
    -> (# Index.Index
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 0)
            (1 GHC.TypeNats.+ 0)
            (0 GHC.TypeNats.+ 1)
            (0 GHC.TypeNats.+ 2)
            (2 GHC.TypeNats.+ 0)
          -> GHC.Real.Rational #)
  {- Arity: 2, Strictness: <L,C(U(U,U))><L,C(U(U,U))>, Inline: [0],
     Unfolding: (\ (ww :: Index.Index 0 0 0 0 1 0 0 2
                          -> GHC.Real.Rational)
                   (ww28 :: Index.Index 0 0 0 0 0 1 2 0 -> GHC.Real.Rational) ->
                 {__scc {main:TensorF.tensorProd} True False} (# {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} True False} \ (r1 :: (Index.Uinds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_20
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_19
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Uinds_9
                                                                                                                                                                         (1
                                                                                                                                                                          GHC.TypeNats.+ 0),
                                                                                                                                                                       Index.Linds_9
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 1),
                                                                                                                                                                       Index.Uinds_3
                                                                                                                                                                         (0
                                                                                                                                                                          GHC.TypeNats.+ 2),
                                                                                                                                                                       Index.Linds_3
                                                                                                                                                                         (2
                                                                                                                                                                          GHC.TypeNats.+ 0))) ->
                                                                                                                                                             {__scc {main:TensorF.tensorProd.h} False True} case ww
                                                                                                                                                                                                                   (case TensorF.interMetric_g
                                                                                                                                                                                                                           r1 of wild { (,) x ds1 ->
                                                                                                                                                                                                                    x }) of ww29 { GHC.Real.:% ww30 ww31 ->
                                                                                                                                                                                                            let {
                                                                                                                                                                                                              y :: GHC.Real.Rational
                                                                                                                                                                                                              = ww28
                                                                                                                                                                                                                  (case TensorF.interMetric_g
                                                                                                                                                                                                                          r1 of wild { (,) ds1 y1 ->
                                                                                                                                                                                                                   y1 })
                                                                                                                                                                                                            } in
                                                                                                                                                                                                            {__scc {main:TensorF.tensorProd.times} True True} case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                     ww30
                                                                                                                                                                                                                                                                     TensorF.delta_4 of wild2 {
                                                                                                                                                                                                                                                                DEFAULT
                                                                                                                                                                                                                                                                -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                   case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww30
                                                                                                                                                                                                                                                                             ww32)
                                                                                                                                                                                                                                                                          (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                             ww31
                                                                                                                                                                                                                                                                             ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                   GHC.Real.:%
                                                                                                                                                                                                                                                                     @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                     ww35
                                                                                                                                                                                                                                                                     ww36 } }
                                                                                                                                                                                                                                                                1#
                                                                                                                                                                                                                                                                -> case GHC.Integer.Type.eqInteger#
                                                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                                                          GHC.Real.$fEnumRatio1 of wild3 {
                                                                                                                                                                                                                                                                     DEFAULT
                                                                                                                                                                                                                                                                     -> case y of ww3 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                        case GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww30
                                                                                                                                                                                                                                                                                  ww32)
                                                                                                                                                                                                                                                                               (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                  ww31
                                                                                                                                                                                                                                                                                  ww33) of ww34 { (#,#) ww35 ww36 ->
                                                                                                                                                                                                                                                                        GHC.Real.:%
                                                                                                                                                                                                                                                                          @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                                                          ww36 } }
                                                                                                                                                                                                                                                                     1#
                                                                                                                                                                                                                                                                     -> TensorF.flatAreaMap_d } } } #)) -}
0eaf919b46e8c057f73e0bcd42e031c3
  $wevalFullTensor ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) -> [a]
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (w :: GHC.TypeNats.KnownNat n1)
                   (w1 :: GHC.TypeNats.KnownNat n2)
                   (w2 :: GHC.TypeNats.KnownNat n3)
                   (w3 :: GHC.TypeNats.KnownNat n4)
                   (w4 :: GHC.TypeNats.KnownNat n5)
                   (w5 :: GHC.TypeNats.KnownNat n6)
                   (w6 :: GHC.TypeNats.KnownNat n7)
                   (w7 :: GHC.TypeNats.KnownNat n8)
                   (ww :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) ->
                 {__scc {main:TensorF.evalFullTensor} True True} GHC.Base.map
                                                                   @ (Index.Uinds_20 n1,
                                                                      Index.Linds_20 n2,
                                                                      Index.Uinds_19 n3,
                                                                      Index.Linds_19 n4,
                                                                      Index.Uinds_9 n5,
                                                                      Index.Linds_9 n6,
                                                                      Index.Uinds_3 n7,
                                                                      Index.Linds_3 n8)
                                                                   @ a
                                                                   ww
                                                                   ({__scc {main:TensorF.evalFullTensor.indList} True True} case TensorF.$wgetRank
                                                                                                                                   @ n1
                                                                                                                                   @ n2
                                                                                                                                   @ n3
                                                                                                                                   @ n4
                                                                                                                                   @ n5
                                                                                                                                   @ n6
                                                                                                                                   @ n7
                                                                                                                                   @ n8
                                                                                                                                   @ a
                                                                                                                                   w
                                                                                                                                   w1
                                                                                                                                   w2
                                                                                                                                   w3
                                                                                                                                   w4
                                                                                                                                   w5
                                                                                                                                   w6
                                                                                                                                   w7 of ww28 { (#,,,,,,,#) ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ->
                                                                                                                            TensorF.tensorIndList
                                                                                                                              @ n1
                                                                                                                              @ n2
                                                                                                                              @ n3
                                                                                                                              @ n4
                                                                                                                              @ n5
                                                                                                                              @ n6
                                                                                                                              @ n7
                                                                                                                              @ n8
                                                                                                                              w
                                                                                                                              w1
                                                                                                                              w2
                                                                                                                              w3
                                                                                                                              w4
                                                                                                                              w5
                                                                                                                              w6
                                                                                                                              w7
                                                                                                                              (ww29,
                                                                                                                               ww30,
                                                                                                                               ww31,
                                                                                                                               ww32,
                                                                                                                               ww33,
                                                                                                                               ww34,
                                                                                                                               ww35,
                                                                                                                               ww36) })) -}
eb3acc552ce35ec3c3a66dd428014496
  $wgetRank ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    (# GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
       GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 8,
     Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
7067eb1a63ba00515908ff22888892e6
  $wintAIB ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> (# Index.Index 1 2 0 0 1 1 2 2 -> GHC.Real.Rational #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
839c62675e4e9b8b45834e21c7bea7fd
  $wlvl ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww28 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# TensorF.delta_4 ww of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             GHC.Real.$fEnumRatio1
                             ww28 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
d0ffc118ae7447c89deea402c9a75f19
  $wlvl1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Integer.Type.Integer)
                   (ww28 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# ww TensorF.delta_4 of wild2 {
                   DEFAULT -> GHC.Types.True
                   1#
                   -> case GHC.Integer.Type.eqInteger#
                             ww28
                             GHC.Real.$fEnumRatio1 of wild3 {
                        DEFAULT -> GHC.Types.True 1# -> GHC.Types.False } }) -}
84a3e6b972f62c9c263dd344c0427b1b
  $wpoly_go1 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
e922d7a5c96fb6d05b2f32251b979918
  $wpoly_go13 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 4) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
329fc9f9b7178cba3395de8a1c2c3536
  $wpoly_go2 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
aeb83fda5f970cabadfbacdf6c5f517d
  $wpoly_go3 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 3) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
8b53c76b31d73ff9bc04355c02613808
  $wpoly_go4 ::
    Data.Sequence.Internal.Seq Index.Uind_3
    -> Data.Map.Internal.Map (Index.Uinds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
8dbbc4979e6d42b11d0ff5fc0fb4d8fe
  $wpoly_go5 ::
    Data.Sequence.Internal.Seq Index.Lind_3
    -> Data.Map.Internal.Map (Index.Linds_3 2) a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
cbc5a62f0590a9511c7428f5ea5af2fb
  $wsymIndList ::
    GHC.Enum.Enum a =>
    GHC.Prim.Int# -> GHC.Types.Int -> [Data.Sequence.Internal.Seq a]
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><S,U><L,U>,
     Inline: [0] -}
56559cc1d422bc3e30f89e046d4a5532
  $wtensorContract_19 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8
                          -> a) ->
                 {__scc {main:TensorF.tensorContract_19} True False} (# let {
                                                                          lvl219 :: a
                                                                          = {__scc {main:TensorF.tensorContract_19} False True} {__scc {main:TensorF.tensorContract_19.g} False True} {__scc {main:TensorF.tensorContract_19.g.\} False True} GHC.Num.fromInteger
                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                                TensorF.delta_4
                                                                        } in
                                                                        {__scc {main:TensorF.tensorContract_19} False True} let {
                                                                                                                              l :: Index.Index
                                                                                                                                     n1
                                                                                                                                     n2
                                                                                                                                     n3
                                                                                                                                     n4
                                                                                                                                     n5
                                                                                                                                     n6
                                                                                                                                     n7
                                                                                                                                     n8
                                                                                                                                   -> [Index.Index
                                                                                                                                         n1
                                                                                                                                         n2
                                                                                                                                         (n3
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         (n4
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         n5
                                                                                                                                         n6
                                                                                                                                         n7
                                                                                                                                         n8]
                                                                                                                              = {__scc {main:TensorF.tensorContract_19.l} True False} \ (w3 :: Index.Index
                                                                                                                                                                                                 n1
                                                                                                                                                                                                 n2
                                                                                                                                                                                                 n3
                                                                                                                                                                                                 n4
                                                                                                                                                                                                 n5
                                                                                                                                                                                                 n6
                                                                                                                                                                                                 n7
                                                                                                                                                                                                 n8) ->
                                                                                                                                                                                      {__scc {main:TensorF.tensorContract_19.l} False True} case w1 of ww28 { (,) ww29 ww30 ->
                                                                                                                                                                                                                                            case w3 of ww3 { (,,,,,,,) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ->
                                                                                                                                                                                                                                            case ww33 of ww39 { Index.UnsafemkInd ww40 ->
                                                                                                                                                                                                                                            Index.$wcontractionIndexList_19
                                                                                                                                                                                                                                              @ n3
                                                                                                                                                                                                                                              @ n4
                                                                                                                                                                                                                                              @ n1
                                                                                                                                                                                                                                              @ n2
                                                                                                                                                                                                                                              @ n5
                                                                                                                                                                                                                                              @ n6
                                                                                                                                                                                                                                              @ n7
                                                                                                                                                                                                                                              @ n8
                                                                                                                                                                                                                                              ww29
                                                                                                                                                                                                                                              ww30
                                                                                                                                                                                                                                              ww31
                                                                                                                                                                                                                                              ww32
                                                                                                                                                                                                                                              ww40
                                                                                                                                                                                                                                              ww34
                                                                                                                                                                                                                                              ww35
                                                                                                                                                                                                                                              ww36
                                                                                                                                                                                                                                              ww37
                                                                                                                                                                                                                                              ww38 } } }
                                                                                                                            } in
                                                                                                                            {__scc {main:TensorF.tensorContract_19.g} True False} \ (i :: Index.Index
                                                                                                                                                                                            n1
                                                                                                                                                                                            n2
                                                                                                                                                                                            n3
                                                                                                                                                                                            n4
                                                                                                                                                                                            n5
                                                                                                                                                                                            n6
                                                                                                                                                                                            n7
                                                                                                                                                                                            n8) ->
                                                                                                                                                                                  {__scc {main:TensorF.tensorContract_19.g} False True} {__scc {main:TensorF.tensorContract_19.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                                 go :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          (n3
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (n4
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          n7
                                                                                                                                                                                                                                                                                                          n8]
                                                                                                                                                                                                                                                                                                       -> a
                                                                                                                                                                                                                                                                                                       -> a
                                                                                                                                                                                                                                                                                                   <join 2> {- Arity: 2,
                                                                                                                                                                                                                                                                                                               Strictness: <S,1*U><L,U> -}
                                                                                                                                                                                                                                                                                                 = \ (ds :: [Index.Index
                                                                                                                                                                                                                                                                                                               n1
                                                                                                                                                                                                                                                                                                               n2
                                                                                                                                                                                                                                                                                                               (n3
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               (n4
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               n5
                                                                                                                                                                                                                                                                                                               n6
                                                                                                                                                                                                                                                                                                               n7
                                                                                                                                                                                                                                                                                                               n8])
                                                                                                                                                                                                                                                                                                     (eta1 :: a) ->
                                                                                                                                                                                                                                                                                                   case ds of wild {
                                                                                                                                                                                                                                                                                                     []
                                                                                                                                                                                                                                                                                                     -> eta1
                                                                                                                                                                                                                                                                                                     : y ys
                                                                                                                                                                                                                                                                                                     -> go
                                                                                                                                                                                                                                                                                                          ys
                                                                                                                                                                                                                                                                                                          ({__scc {main:TensorF.tensorContract_19.g.\.\} True True} GHC.Num.+
                                                                                                                                                                                                                                                                                                                                                                      @ a
                                                                                                                                                                                                                                                                                                                                                                      w
                                                                                                                                                                                                                                                                                                                                                                      eta1
                                                                                                                                                                                                                                                                                                                                                                      (ww
                                                                                                                                                                                                                                                                                                                                                                         y)) }
                                                                                                                                                                                                                                                                                               } in
                                                                                                                                                                                                                                                                                               go
                                                                                                                                                                                                                                                                                                 (l i)
                                                                                                                                                                                                                                                                                                 lvl219 #)) -}
86fd464b0ba75ccbc6b1d7fdc63d3225
  $wtensorContract_20 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8
                          -> a) ->
                 {__scc {main:TensorF.tensorContract_20} True False} (# let {
                                                                          lvl219 :: a
                                                                          = {__scc {main:TensorF.tensorContract_20} False True} {__scc {main:TensorF.tensorContract_20.g} False True} {__scc {main:TensorF.tensorContract_20.g.\} False True} GHC.Num.fromInteger
                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                                TensorF.delta_4
                                                                        } in
                                                                        {__scc {main:TensorF.tensorContract_20} False True} let {
                                                                                                                              l :: Index.Index
                                                                                                                                     n1
                                                                                                                                     n2
                                                                                                                                     n3
                                                                                                                                     n4
                                                                                                                                     n5
                                                                                                                                     n6
                                                                                                                                     n7
                                                                                                                                     n8
                                                                                                                                   -> [Index.Index
                                                                                                                                         (n1
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         (n2
                                                                                                                                          GHC.TypeNats.+ 1)
                                                                                                                                         n3
                                                                                                                                         n4
                                                                                                                                         n5
                                                                                                                                         n6
                                                                                                                                         n7
                                                                                                                                         n8]
                                                                                                                              = {__scc {main:TensorF.tensorContract_20.l} True False} \ (w3 :: Index.Index
                                                                                                                                                                                                 n1
                                                                                                                                                                                                 n2
                                                                                                                                                                                                 n3
                                                                                                                                                                                                 n4
                                                                                                                                                                                                 n5
                                                                                                                                                                                                 n6
                                                                                                                                                                                                 n7
                                                                                                                                                                                                 n8) ->
                                                                                                                                                                                      {__scc {main:TensorF.tensorContract_20.l} False True} case w1 of ww28 { (,) ww29 ww30 ->
                                                                                                                                                                                                                                            case w3 of ww3 { (,,,,,,,) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ->
                                                                                                                                                                                                                                            case ww31 of ww39 { Index.UnsafemkInd ww40 ->
                                                                                                                                                                                                                                            Index.$wcontractionIndexList_20
                                                                                                                                                                                                                                              @ n1
                                                                                                                                                                                                                                              @ n2
                                                                                                                                                                                                                                              @ n3
                                                                                                                                                                                                                                              @ n4
                                                                                                                                                                                                                                              @ n5
                                                                                                                                                                                                                                              @ n6
                                                                                                                                                                                                                                              @ n7
                                                                                                                                                                                                                                              @ n8
                                                                                                                                                                                                                                              ww29
                                                                                                                                                                                                                                              ww30
                                                                                                                                                                                                                                              ww40
                                                                                                                                                                                                                                              ww32
                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                              ww34
                                                                                                                                                                                                                                              ww35
                                                                                                                                                                                                                                              ww36
                                                                                                                                                                                                                                              ww37
                                                                                                                                                                                                                                              ww38 } } }
                                                                                                                            } in
                                                                                                                            {__scc {main:TensorF.tensorContract_20.g} True False} \ (i :: Index.Index
                                                                                                                                                                                            n1
                                                                                                                                                                                            n2
                                                                                                                                                                                            n3
                                                                                                                                                                                            n4
                                                                                                                                                                                            n5
                                                                                                                                                                                            n6
                                                                                                                                                                                            n7
                                                                                                                                                                                            n8) ->
                                                                                                                                                                                  {__scc {main:TensorF.tensorContract_20.g} False True} {__scc {main:TensorF.tensorContract_20.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                                 go :: [Index.Index
                                                                                                                                                                                                                                                                                                          (n1
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (n2
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          n7
                                                                                                                                                                                                                                                                                                          n8]
                                                                                                                                                                                                                                                                                                       -> a
                                                                                                                                                                                                                                                                                                       -> a
                                                                                                                                                                                                                                                                                                   <join 2> {- Arity: 2,
                                                                                                                                                                                                                                                                                                               Strictness: <S,1*U><L,U> -}
                                                                                                                                                                                                                                                                                                 = \ (ds :: [Index.Index
                                                                                                                                                                                                                                                                                                               (n1
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               (n2
                                                                                                                                                                                                                                                                                                                GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                               n3
                                                                                                                                                                                                                                                                                                               n4
                                                                                                                                                                                                                                                                                                               n5
                                                                                                                                                                                                                                                                                                               n6
                                                                                                                                                                                                                                                                                                               n7
                                                                                                                                                                                                                                                                                                               n8])
                                                                                                                                                                                                                                                                                                     (eta1 :: a) ->
                                                                                                                                                                                                                                                                                                   case ds of wild {
                                                                                                                                                                                                                                                                                                     []
                                                                                                                                                                                                                                                                                                     -> eta1
                                                                                                                                                                                                                                                                                                     : y ys
                                                                                                                                                                                                                                                                                                     -> go
                                                                                                                                                                                                                                                                                                          ys
                                                                                                                                                                                                                                                                                                          ({__scc {main:TensorF.tensorContract_20.g.\.\} True True} GHC.Num.+
                                                                                                                                                                                                                                                                                                                                                                      @ a
                                                                                                                                                                                                                                                                                                                                                                      w
                                                                                                                                                                                                                                                                                                                                                                      eta1
                                                                                                                                                                                                                                                                                                                                                                      (ww
                                                                                                                                                                                                                                                                                                                                                                         y)) }
                                                                                                                                                                                                                                                                                               } in
                                                                                                                                                                                                                                                                                               go
                                                                                                                                                                                                                                                                                                 (l i)
                                                                                                                                                                                                                                                                                                 lvl219 #)) -}
ed9e7f308f06da50455729384137daef
  $wtensorContract_3 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1)
                          -> a) ->
                 {__scc {main:TensorF.tensorContract_3} True False} (# let {
                                                                         lvl219 :: a
                                                                         = {__scc {main:TensorF.tensorContract_3} False True} {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} False True} GHC.Num.fromInteger
                                                                                                                                                                                                                                            @ a
                                                                                                                                                                                                                                            w
                                                                                                                                                                                                                                            TensorF.delta_4
                                                                       } in
                                                                       {__scc {main:TensorF.tensorContract_3} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   n7
                                                                                                                                   n8
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       n5
                                                                                                                                       n6
                                                                                                                                       (n7
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (n8
                                                                                                                                        GHC.TypeNats.+ 1)]
                                                                                                                            = {__scc {main:TensorF.tensorContract_3.l} True False} \ (w3 :: Index.Index
                                                                                                                                                                                              n1
                                                                                                                                                                                              n2
                                                                                                                                                                                              n3
                                                                                                                                                                                              n4
                                                                                                                                                                                              n5
                                                                                                                                                                                              n6
                                                                                                                                                                                              n7
                                                                                                                                                                                              n8) ->
                                                                                                                                                                                   {__scc {main:TensorF.tensorContract_3.l} False True} case w1 of ww28 { (,) ww29 ww30 ->
                                                                                                                                                                                                                                        case w3 of ww3 { (,,,,,,,) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ->
                                                                                                                                                                                                                                        case ww37 of ww39 { Index.UnsafemkInd ww40 ->
                                                                                                                                                                                                                                        Index.$wcontractionIndexList_3
                                                                                                                                                                                                                                          @ n7
                                                                                                                                                                                                                                          @ n8
                                                                                                                                                                                                                                          @ n1
                                                                                                                                                                                                                                          @ n2
                                                                                                                                                                                                                                          @ n3
                                                                                                                                                                                                                                          @ n4
                                                                                                                                                                                                                                          @ n5
                                                                                                                                                                                                                                          @ n6
                                                                                                                                                                                                                                          ww29
                                                                                                                                                                                                                                          ww30
                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                          ww32
                                                                                                                                                                                                                                          ww33
                                                                                                                                                                                                                                          ww34
                                                                                                                                                                                                                                          ww35
                                                                                                                                                                                                                                          ww36
                                                                                                                                                                                                                                          ww40
                                                                                                                                                                                                                                          ww38 } } }
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_3.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         n7
                                                                                                                                                                                         n8) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_3.g} False True} {__scc {main:TensorF.tensorContract_3.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            go :: [Index.Index
                                                                                                                                                                                                                                                                                                     n1
                                                                                                                                                                                                                                                                                                     n2
                                                                                                                                                                                                                                                                                                     n3
                                                                                                                                                                                                                                                                                                     n4
                                                                                                                                                                                                                                                                                                     n5
                                                                                                                                                                                                                                                                                                     n6
                                                                                                                                                                                                                                                                                                     (n7
                                                                                                                                                                                                                                                                                                      GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                     (n8
                                                                                                                                                                                                                                                                                                      GHC.TypeNats.+ 1)]
                                                                                                                                                                                                                                                                                                  -> a
                                                                                                                                                                                                                                                                                                  -> a
                                                                                                                                                                                                                                                                                              <join 2> {- Arity: 2,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U> -}
                                                                                                                                                                                                                                                                                            = \ (ds :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          n5
                                                                                                                                                                                                                                                                                                          n6
                                                                                                                                                                                                                                                                                                          (n7
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (n8
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)])
                                                                                                                                                                                                                                                                                                (eta1 :: a) ->
                                                                                                                                                                                                                                                                                              case ds of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> eta1
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> go
                                                                                                                                                                                                                                                                                                     ys
                                                                                                                                                                                                                                                                                                     ({__scc {main:TensorF.tensorContract_3.g.\.\} True True} GHC.Num.+
                                                                                                                                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                                                                                                                                                eta1
                                                                                                                                                                                                                                                                                                                                                                (ww
                                                                                                                                                                                                                                                                                                                                                                   y)) }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          go
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            lvl219 #)) -}
6d697609379b6143c7cd5c35c8ecf5f1
  $wtensorContract_9 ::
    GHC.Num.Num a =>
    (GHC.Types.Int, GHC.Types.Int)
    -> (Index.Index
          n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8
        -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,U(U(U),U(U))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int))
                   (ww :: Index.Index
                            n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8
                          -> a) ->
                 {__scc {main:TensorF.tensorContract_9} True False} (# let {
                                                                         lvl219 :: a
                                                                         = {__scc {main:TensorF.tensorContract_9} False True} {__scc {main:TensorF.tensorContract_9.g} False True} {__scc {main:TensorF.tensorContract_9.g.\} False True} GHC.Num.fromInteger
                                                                                                                                                                                                                                            @ a
                                                                                                                                                                                                                                            w
                                                                                                                                                                                                                                            TensorF.delta_4
                                                                       } in
                                                                       {__scc {main:TensorF.tensorContract_9} False True} let {
                                                                                                                            l :: Index.Index
                                                                                                                                   n1
                                                                                                                                   n2
                                                                                                                                   n3
                                                                                                                                   n4
                                                                                                                                   n5
                                                                                                                                   n6
                                                                                                                                   n7
                                                                                                                                   n8
                                                                                                                                 -> [Index.Index
                                                                                                                                       n1
                                                                                                                                       n2
                                                                                                                                       n3
                                                                                                                                       n4
                                                                                                                                       (n5
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       (n6
                                                                                                                                        GHC.TypeNats.+ 1)
                                                                                                                                       n7
                                                                                                                                       n8]
                                                                                                                            = {__scc {main:TensorF.tensorContract_9.l} True False} \ (w3 :: Index.Index
                                                                                                                                                                                              n1
                                                                                                                                                                                              n2
                                                                                                                                                                                              n3
                                                                                                                                                                                              n4
                                                                                                                                                                                              n5
                                                                                                                                                                                              n6
                                                                                                                                                                                              n7
                                                                                                                                                                                              n8) ->
                                                                                                                                                                                   {__scc {main:TensorF.tensorContract_9.l} False True} case w1 of ww28 { (,) ww29 ww30 ->
                                                                                                                                                                                                                                        case w3 of ww3 { (,,,,,,,) ww31 ww32 ww33 ww34 ww35 ww36 ww37 ww38 ->
                                                                                                                                                                                                                                        case ww35 of ww39 { Index.UnsafemkInd ww40 ->
                                                                                                                                                                                                                                        Index.$wcontractionIndexList_9
                                                                                                                                                                                                                                          @ n5
                                                                                                                                                                                                                                          @ n6
                                                                                                                                                                                                                                          @ n1
                                                                                                                                                                                                                                          @ n2
                                                                                                                                                                                                                                          @ n3
                                                                                                                                                                                                                                          @ n4
                                                                                                                                                                                                                                          @ n7
                                                                                                                                                                                                                                          @ n8
                                                                                                                                                                                                                                          ww29
                                                                                                                                                                                                                                          ww30
                                                                                                                                                                                                                                          ww31
                                                                                                                                                                                                                                          ww32
                                                                                                                                                                                                                                          ww33
                                                                                                                                                                                                                                          ww34
                                                                                                                                                                                                                                          ww40
                                                                                                                                                                                                                                          ww36
                                                                                                                                                                                                                                          ww37
                                                                                                                                                                                                                                          ww38 } } }
                                                                                                                          } in
                                                                                                                          {__scc {main:TensorF.tensorContract_9.g} True False} \ (i :: Index.Index
                                                                                                                                                                                         n1
                                                                                                                                                                                         n2
                                                                                                                                                                                         n3
                                                                                                                                                                                         n4
                                                                                                                                                                                         n5
                                                                                                                                                                                         n6
                                                                                                                                                                                         n7
                                                                                                                                                                                         n8) ->
                                                                                                                                                                               {__scc {main:TensorF.tensorContract_9.g} False True} {__scc {main:TensorF.tensorContract_9.g.\} True True} letrec {
                                                                                                                                                                                                                                                                                            go :: [Index.Index
                                                                                                                                                                                                                                                                                                     n1
                                                                                                                                                                                                                                                                                                     n2
                                                                                                                                                                                                                                                                                                     n3
                                                                                                                                                                                                                                                                                                     n4
                                                                                                                                                                                                                                                                                                     (n5
                                                                                                                                                                                                                                                                                                      GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                     (n6
                                                                                                                                                                                                                                                                                                      GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                     n7
                                                                                                                                                                                                                                                                                                     n8]
                                                                                                                                                                                                                                                                                                  -> a
                                                                                                                                                                                                                                                                                                  -> a
                                                                                                                                                                                                                                                                                              <join 2> {- Arity: 2,
                                                                                                                                                                                                                                                                                                          Strictness: <S,1*U><L,U> -}
                                                                                                                                                                                                                                                                                            = \ (ds :: [Index.Index
                                                                                                                                                                                                                                                                                                          n1
                                                                                                                                                                                                                                                                                                          n2
                                                                                                                                                                                                                                                                                                          n3
                                                                                                                                                                                                                                                                                                          n4
                                                                                                                                                                                                                                                                                                          (n5
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          (n6
                                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1)
                                                                                                                                                                                                                                                                                                          n7
                                                                                                                                                                                                                                                                                                          n8])
                                                                                                                                                                                                                                                                                                (eta1 :: a) ->
                                                                                                                                                                                                                                                                                              case ds of wild {
                                                                                                                                                                                                                                                                                                []
                                                                                                                                                                                                                                                                                                -> eta1
                                                                                                                                                                                                                                                                                                : y ys
                                                                                                                                                                                                                                                                                                -> go
                                                                                                                                                                                                                                                                                                     ys
                                                                                                                                                                                                                                                                                                     ({__scc {main:TensorF.tensorContract_9.g.\.\} True True} GHC.Num.+
                                                                                                                                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                                                                                                                                w
                                                                                                                                                                                                                                                                                                                                                                eta1
                                                                                                                                                                                                                                                                                                                                                                (ww
                                                                                                                                                                                                                                                                                                                                                                   y)) }
                                                                                                                                                                                                                                                                                          } in
                                                                                                                                                                                                                                                                                          go
                                                                                                                                                                                                                                                                                            (l i)
                                                                                                                                                                                                                                                                                            lvl219 #)) -}
ade1fc279067f44e446bcba6c910cec5
  $wtensorSub ::
    GHC.Num.Num a =>
    (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
    -> (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
    -> (# Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,1*C1(C(U)),1*C1(U),A,A,1*C1(U))><L,C(U)><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (ww :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
                   (ww28 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a) ->
                 case {__scc {main:TensorF.tensorSub} True True} let {
                                                                   a1 :: a
                                                                   = GHC.Num.negate
                                                                       @ a
                                                                       w
                                                                       (GHC.Num.fromInteger
                                                                          @ a
                                                                          w
                                                                          TensorF.delta_2)
                                                                 } in
                                                                 {__scc {main:TensorF.tensorSMult} True False} {__scc {main:TensorF.tensorSMult} False True} let {
                                                                                                                                                               f :: a
                                                                                                                                                                    -> a
                                                                                                                                                               = GHC.Num.*
                                                                                                                                                                   @ a
                                                                                                                                                                   w
                                                                                                                                                                   a1
                                                                                                                                                             } in
                                                                                                                                                             {__scc {main:TensorF.fmap} True False} TensorF.Tensor
                                                                                                                                                                                                      @ n1
                                                                                                                                                                                                      @ n2
                                                                                                                                                                                                      @ n3
                                                                                                                                                                                                      @ n4
                                                                                                                                                                                                      @ n5
                                                                                                                                                                                                      @ n6
                                                                                                                                                                                                      @ n7
                                                                                                                                                                                                      @ n8
                                                                                                                                                                                                      @ a
                                                                                                                                                                                                      ({__scc {main:TensorF.fmap} False True} GHC.Base..
                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                @ a
                                                                                                                                                                                                                                                @ (Index.Index
                                                                                                                                                                                                                                                     n1
                                                                                                                                                                                                                                                     n2
                                                                                                                                                                                                                                                     n3
                                                                                                                                                                                                                                                     n4
                                                                                                                                                                                                                                                     n5
                                                                                                                                                                                                                                                     n6
                                                                                                                                                                                                                                                     n7
                                                                                                                                                                                                                                                     n8)
                                                                                                                                                                                                                                                f
                                                                                                                                                                                                                                                ww28) of ww29 { TensorF.Tensor ww30 ->
                 case {__scc {main:TensorF.tensorSub} False True} {__scc {main:TensorF.tensorAdd} True False} TensorF.Tensor
                                                                                                                @ n1
                                                                                                                @ n2
                                                                                                                @ n3
                                                                                                                @ n4
                                                                                                                @ n5
                                                                                                                @ n6
                                                                                                                @ n7
                                                                                                                @ n8
                                                                                                                @ a
                                                                                                                (\ (r1 :: (Index.Uinds_20
                                                                                                                             n1,
                                                                                                                           Index.Linds_20
                                                                                                                             n2,
                                                                                                                           Index.Uinds_19
                                                                                                                             n3,
                                                                                                                           Index.Linds_19
                                                                                                                             n4,
                                                                                                                           Index.Uinds_9
                                                                                                                             n5,
                                                                                                                           Index.Linds_9
                                                                                                                             n6,
                                                                                                                           Index.Uinds_3
                                                                                                                             n7,
                                                                                                                           Index.Linds_3
                                                                                                                             n8)) ->
                                                                                                                 {__scc {main:TensorF.tensorAdd} False True} GHC.Num.+
                                                                                                                                                               @ a
                                                                                                                                                               w
                                                                                                                                                               (ww
                                                                                                                                                                  r1)
                                                                                                                                                               (ww30
                                                                                                                                                                  r1)) of ww31 { TensorF.Tensor ww32 ->
                 (# ww32 #) } }) -}
1d52bf15be1eaeb999f31bad7c568521
  type Rank =
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
b28a4c068d505ebc191e56bd3bd87e55
  type role Tensor phantom phantom phantom phantom phantom phantom phantom phantom representational
  data Tensor (n1 :: GHC.Types.Nat)
              (n2 :: GHC.Types.Nat)
              (n3 :: GHC.Types.Nat)
              (n4 :: GHC.Types.Nat)
              (n5 :: GHC.Types.Nat)
              (n6 :: GHC.Types.Nat)
              (n7 :: GHC.Types.Nat)
              (n8 :: GHC.Types.Nat)
              a
    = Tensor (Index.Index n1 n2 n3 n4 n5 n6 n7 n8 -> a)
1f668d1103faebaf9434867107731383
  delta_1 :: Index.Index 0 0 1 1 0 0 0 0 -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_19} False True} TensorF.delta_19F) -}
0b9b0c7e69511c2b86b0d1b936a026f8
  delta_19 :: TensorF.Tensor 0 0 1 1 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_19} True False} TensorF.Tensor
                                                              @ 0
                                                              @ 0
                                                              @ 1
                                                              @ 1
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ GHC.Real.Rational
                                                              TensorF.delta_1) -}
b9439ca9726bb7d74e8876379c552087
  delta_19F :: Index.Index 0 0 1 1 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLS(S)S(S)LLLL),1*U(A,A,1*U(U),1*U(U),A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 1 1 0 0 0 0) ->
                 case w of ww { (,,,,,,,) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 case ww30 of ww36 { Index.UnsafemkInd ww37 ->
                 case ww31 of ww38 { Index.UnsafemkInd ww39 ->
                 let {
                   ds :: Index.Ind 1 Index.Uind_19
                   = Index.UnsafemkInd @ 1 @ Index.Uind_19 ww37
                 } in
                 {__scc {main:TensorF.delta_19F} True False} case {__scc {main:TensorF.delta_19F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds of wild { Index.UnsafemkInd s ->
                                                             case {__scc {main:TensorF.delta_19F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                          @ Index.Uind_19
                                                                                                                                                          0#
                                                                                                                                                          s of wild1 {
                                                               GHC.Base.Nothing
                                                               -> case Data.Maybe.fromJust1
                                                                  ret_ty (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                  of {}
                                                               GHC.Base.Just x
                                                               -> case {__scc {main:TensorF.delta_19F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                 @ Index.Uind_19
                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                  case {__scc {main:TensorF.delta_19F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                               @ Index.Lind_19
                                                                                                                                                               0#
                                                                                                                                                               ww39 of wild2 {
                                                                    GHC.Base.Nothing
                                                                    -> case Data.Maybe.fromJust1
                                                                       ret_ty (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                       of {}
                                                                    GHC.Base.Just x1
                                                                    -> case {__scc {main:TensorF.delta_19F} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                   @ Index.Lind_19
                                                                                                                                                                   x1 of a#1 { DEFAULT ->
                                                                       case {__scc {main:TensorF.delta_19F} False True} GHC.Prim.==#
                                                                                                                          a#
                                                                                                                          a#1 of lwild {
                                                                         DEFAULT
                                                                         -> GHC.Real.:%
                                                                              @ GHC.Integer.Type.Integer
                                                                              TensorF.delta_4
                                                                              GHC.Real.$fEnumRatio1
                                                                         1#
                                                                         -> GHC.Real.:%
                                                                              @ GHC.Integer.Type.Integer
                                                                              TensorF.delta_2
                                                                              GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
737f8e3c2f686e5b0df1e1928f30ff53
  delta_2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
676c8aa28caeda4a8597465a957d816b
  delta_20 :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_20} True False} TensorF.Tensor
                                                              @ 1
                                                              @ 1
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ 0
                                                              @ GHC.Real.Rational
                                                              TensorF.delta_5) -}
e1a03f0a052bad1a18e6b26e813b00a6
  delta_20F :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(S(S)S(S)LLLLLL),1*U(1*U(U),1*U(U),A,A,A,A,A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 0 0) ->
                 case w of ww { (,,,,,,,) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 case ww28 of ww36 { Index.UnsafemkInd ww37 ->
                 case ww29 of ww38 { Index.UnsafemkInd ww39 ->
                 let {
                   ds :: Index.Ind 1 Index.Uind_20
                   = Index.UnsafemkInd @ 1 @ Index.Uind_20 ww37
                 } in
                 {__scc {main:TensorF.delta_20F} True False} case {__scc {main:TensorF.delta_20F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds of wild { Index.UnsafemkInd s ->
                                                             case {__scc {main:TensorF.delta_20F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                          @ Index.Uind_20
                                                                                                                                                          0#
                                                                                                                                                          s of wild1 {
                                                               GHC.Base.Nothing
                                                               -> case Data.Maybe.fromJust1
                                                                  ret_ty (GHC.Real.Ratio
                                                                            GHC.Integer.Type.Integer)
                                                                  of {}
                                                               GHC.Base.Just x
                                                               -> case {__scc {main:TensorF.delta_20F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                 @ Index.Uind_20
                                                                                                                                                                                                                                                 x of a# { DEFAULT ->
                                                                  case {__scc {main:TensorF.delta_20F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                               @ Index.Lind_20
                                                                                                                                                               0#
                                                                                                                                                               ww39 of wild2 {
                                                                    GHC.Base.Nothing
                                                                    -> case Data.Maybe.fromJust1
                                                                       ret_ty (GHC.Real.Ratio
                                                                                 GHC.Integer.Type.Integer)
                                                                       of {}
                                                                    GHC.Base.Just x1
                                                                    -> case {__scc {main:TensorF.delta_20F} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                   @ Index.Lind_20
                                                                                                                                                                   x1 of a#1 { DEFAULT ->
                                                                       case {__scc {main:TensorF.delta_20F} False True} GHC.Prim.==#
                                                                                                                          a#
                                                                                                                          a#1 of lwild {
                                                                         DEFAULT
                                                                         -> GHC.Real.:%
                                                                              @ GHC.Integer.Type.Integer
                                                                              TensorF.delta_4
                                                                              GHC.Real.$fEnumRatio1
                                                                         1#
                                                                         -> GHC.Real.:%
                                                                              @ GHC.Integer.Type.Integer
                                                                              TensorF.delta_2
                                                                              GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
e7963e914c9b56d9abe6fe888ef4d78f
  delta_3 :: TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_3} True False} TensorF.Tensor
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 1
                                                             @ 1
                                                             @ GHC.Real.Rational
                                                             TensorF.delta_6) -}
a28407669374702aee9f144966733d9e
  delta_3F :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLS(S)S(S)),1*U(A,A,A,A,A,A,1*U(U),1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 1 1) ->
                 case w of ww { (,,,,,,,) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 case ww34 of ww36 { Index.UnsafemkInd ww37 ->
                 case ww35 of ww38 { Index.UnsafemkInd ww39 ->
                 let {
                   ds :: Index.Ind 1 Index.Uind_3
                   = Index.UnsafemkInd @ 1 @ Index.Uind_3 ww37
                 } in
                 let {
                   ds1 :: Index.Ind 1 Index.Lind_3
                   = Index.UnsafemkInd @ 1 @ Index.Lind_3 ww39
                 } in
                 {__scc {main:TensorF.delta_3F} True False} case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds of wild { Index.UnsafemkInd s ->
                                                            case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                        @ Index.Uind_3
                                                                                                                                                        0#
                                                                                                                                                        s of wild1 {
                                                              GHC.Base.Nothing
                                                              -> case Data.Maybe.fromJust1
                                                                 ret_ty (GHC.Real.Ratio
                                                                           GHC.Integer.Type.Integer)
                                                                 of {}
                                                              GHC.Base.Just x
                                                              -> case x of wild2 {
                                                                   Index.U0_3
                                                                   -> case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds1 of wild3 { Index.UnsafemkInd s1 ->
                                                                      case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                  @ Index.Lind_3
                                                                                                                                                                  0#
                                                                                                                                                                  s1 of wild4 {
                                                                        GHC.Base.Nothing
                                                                        -> case Data.Maybe.fromJust1
                                                                           ret_ty (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                           of {}
                                                                        GHC.Base.Just x1
                                                                        -> case x1 of wild5 {
                                                                             Index.L0_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_2
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L1_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L2_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L3_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1 } } }
                                                                   Index.U1_3
                                                                   -> case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds1 of wild3 { Index.UnsafemkInd s1 ->
                                                                      case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                  @ Index.Lind_3
                                                                                                                                                                  0#
                                                                                                                                                                  s1 of wild4 {
                                                                        GHC.Base.Nothing
                                                                        -> case Data.Maybe.fromJust1
                                                                           ret_ty (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                           of {}
                                                                        GHC.Base.Just x1
                                                                        -> case x1 of wild5 {
                                                                             DEFAULT
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L1_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_2
                                                                                  GHC.Real.$fEnumRatio1 } } }
                                                                   Index.U2_3
                                                                   -> case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds1 of wild3 { Index.UnsafemkInd s1 ->
                                                                      case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                  @ Index.Lind_3
                                                                                                                                                                  0#
                                                                                                                                                                  s1 of wild4 {
                                                                        GHC.Base.Nothing
                                                                        -> case Data.Maybe.fromJust1
                                                                           ret_ty (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                           of {}
                                                                        GHC.Base.Just x1
                                                                        -> case x1 of wild5 {
                                                                             DEFAULT
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L2_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_2
                                                                                  GHC.Real.$fEnumRatio1 } } }
                                                                   Index.U3_3
                                                                   -> case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds1 of wild3 { Index.UnsafemkInd s1 ->
                                                                      case {__scc {main:TensorF.delta_3F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                  @ Index.Lind_3
                                                                                                                                                                  0#
                                                                                                                                                                  s1 of wild4 {
                                                                        GHC.Base.Nothing
                                                                        -> case Data.Maybe.fromJust1
                                                                           ret_ty (GHC.Real.Ratio
                                                                                     GHC.Integer.Type.Integer)
                                                                           of {}
                                                                        GHC.Base.Just x1
                                                                        -> case x1 of wild5 {
                                                                             DEFAULT
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_4
                                                                                  GHC.Real.$fEnumRatio1
                                                                             Index.L3_3
                                                                             -> GHC.Real.:%
                                                                                  @ GHC.Integer.Type.Integer
                                                                                  TensorF.delta_2
                                                                                  GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
a4e781daaa166fef14034cef6a355dbc
  delta_4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
578a1e28fedb00629eb1a5ca91f5817a
  delta_5 :: Index.Index 1 1 0 0 0 0 0 0 -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_20} False True} TensorF.delta_20F) -}
a9ff1d013c8a567685be2af8123120cf
  delta_6 :: Index.Index 0 0 0 0 0 0 1 1 -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_3} False True} TensorF.delta_3F) -}
0e4f2e62089aef1c520617b7b98e289f
  delta_7 :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_9} False True} TensorF.delta_9F) -}
be8c4b58d403bbbb7b08a42e70d8f480
  delta_9 :: TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.delta_9} True False} TensorF.Tensor
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 0
                                                             @ 1
                                                             @ 1
                                                             @ 0
                                                             @ 0
                                                             @ GHC.Real.Rational
                                                             TensorF.delta_7) -}
bd49ed28932a88d630d8421d44f5dcf7
  delta_9F :: Index.Index 0 0 0 0 1 1 0 0 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLS(S)S(S)LL),1*U(A,A,A,A,1*U(U),1*U(U),A,A)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 0 0) ->
                 case w of ww { (,,,,,,,) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 case ww32 of ww36 { Index.UnsafemkInd ww37 ->
                 case ww33 of ww38 { Index.UnsafemkInd ww39 ->
                 let {
                   ds :: Index.Ind 1 Index.Uind_9
                   = Index.UnsafemkInd @ 1 @ Index.Uind_9 ww37
                 } in
                 {__scc {main:TensorF.delta_9F} True False} case {__scc {main:TensorF.delta_9F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} ds of wild { Index.UnsafemkInd s ->
                                                            case {__scc {main:TensorF.delta_9F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                        @ Index.Uind_9
                                                                                                                                                        0#
                                                                                                                                                        s of wild1 {
                                                              GHC.Base.Nothing
                                                              -> case Data.Maybe.fromJust1
                                                                 ret_ty (GHC.Real.Ratio
                                                                           GHC.Integer.Type.Integer)
                                                                 of {}
                                                              GHC.Base.Just x
                                                              -> case {__scc {main:TensorF.delta_9F} False True} {__scc {main:Index.fromEnum} True False} {__scc {main:Index.getValInd} True False} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                               @ Index.Uind_9
                                                                                                                                                                                                                                               x of a# { DEFAULT ->
                                                                 case {__scc {main:TensorF.delta_9F} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                             @ Index.Lind_9
                                                                                                                                                             0#
                                                                                                                                                             ww39 of wild2 {
                                                                   GHC.Base.Nothing
                                                                   -> case Data.Maybe.fromJust1
                                                                      ret_ty (GHC.Real.Ratio
                                                                                GHC.Integer.Type.Integer)
                                                                      of {}
                                                                   GHC.Base.Just x1
                                                                   -> case {__scc {main:TensorF.delta_9F} False True} {__scc {main:Index.fromEnum} False True} GHC.Prim.dataToTag#
                                                                                                                                                                 @ Index.Lind_9
                                                                                                                                                                 x1 of a#1 { DEFAULT ->
                                                                      case {__scc {main:TensorF.delta_9F} False True} GHC.Prim.==#
                                                                                                                        a#
                                                                                                                        a#1 of lwild {
                                                                        DEFAULT
                                                                        -> GHC.Real.:%
                                                                             @ GHC.Integer.Type.Integer
                                                                             TensorF.delta_4
                                                                             GHC.Real.$fEnumRatio1
                                                                        1#
                                                                        -> GHC.Real.:%
                                                                             @ GHC.Integer.Type.Integer
                                                                             TensorF.delta_2
                                                                             GHC.Real.$fEnumRatio1 } } } } } } } } }) -}
7663ef85aa877eed3d2f39b5a01e27bb
  epsilonMap ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.epsilonMap} True True} Data.Map.Internal.filterWithKey
                                                               @ (Index.Index 0 0 0 0 0 0 0 4)
                                                               @ GHC.Real.Rational
                                                               TensorF.epsilonMap5
                                                               (TensorF.$sfromList1
                                                                  @ (GHC.Real.Ratio
                                                                       GHC.Integer.Type.Integer)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 0,
                                                                        Index.Linds_20 0,
                                                                        Index.Uinds_19 0,
                                                                        Index.Linds_19 0,
                                                                        Index.Uinds_9 0,
                                                                        Index.Linds_9 0,
                                                                        Index.Uinds_3 0,
                                                                        Index.Linds_3 4)
                                                                     @ (GHC.Real.Ratio
                                                                          GHC.Integer.Type.Integer)
                                                                     TensorF.epsilonMap_inds
                                                                     ({__scc {main:TensorF.epsilonMap.vals} True False} TensorF.epsilonMap1)))) -}
deccc6e78b73cb73ad5dbfd59f091522
  epsilonMap1 :: [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Unfolding: ({__scc {main:TensorF.epsilonMap} False True} {__scc {main:TensorF.epsilonMap} False True} {__scc {main:TensorF.epsilonMap.vals} False True} GHC.Base.map
                                                                                                                                                               @ (Index.Uinds_20
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Linds_20
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Uinds_19
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Linds_19
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Uinds_9
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Linds_9
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Uinds_3
                                                                                                                                                                    0,
                                                                                                                                                                  Index.Linds_3
                                                                                                                                                                    4)
                                                                                                                                                               @ (GHC.Real.Ratio
                                                                                                                                                                    GHC.Integer.Type.Integer)
                                                                                                                                                               TensorF.epsilonMap4
                                                                                                                                                               TensorF.epsilonMap_inds) -}
726ea51dbd32eabd70457c3b59c196de
  epsilonMap2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
14978bf8011f73c397302da76715849a
  epsilonMap3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
0938ac459f19185af3762b41a94fb244
  epsilonMap4 ::
    (Index.Uinds_20 0, Index.Linds_20 0, Index.Uinds_19 0,
     Index.Linds_19 0, Index.Uinds_9 0, Index.Linds_9 0,
     Index.Uinds_3 0, Index.Linds_3 4)
    -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(S)),1*U(A,A,A,A,A,A,A,U(U))>m -}
f07e1897e9a178b465c6d06e0a503205
  epsilonMap5 ::
    Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 0 4) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl ww28 ww29 }) -}
8e410e4d0331f6c9d483bc452535b712
  epsilonMap_inds :: [Index.Index 0 0 0 0 0 0 0 4]
  {- Unfolding: ({__scc {main:TensorF.epsilonMap} False True} {__scc {main:TensorF.epsilonMap.inds} True True} TensorF.$w$stensorIndList
                                                                                                                 0#
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap3
                                                                                                                 TensorF.epsilonMap2) -}
c255a445b6da1e4234ce6aa4d7659c79
  eta :: TensorF.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.eta} True False} TensorF.Tensor
                                                         @ 0
                                                         @ 0
                                                         @ 0
                                                         @ 0
                                                         @ 0
                                                         @ 0
                                                         @ 0
                                                         @ 2
                                                         @ GHC.Real.Rational
                                                         TensorF.flatAreaSTMap5) -}
76930a44b49d749455dade2893b3c99a
  eta_F :: Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational
  {- Arity: 1,
     Strictness: <S(LLLLLLLS(S)),1*U(A,A,A,A,A,A,A,1*U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 0 2) ->
                 case w of ww { (,,,,,,,) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                 case ww35 of ww36 { Index.UnsafemkInd ww37 ->
                 {__scc {main:TensorF.eta_F} True False} case {__scc {main:TensorF.eta_F} False True} {__scc {main:TensorF.eta_F.x} True True} let {
                                                                                                                                                 a :: Index.Lind_3
                                                                                                                                                 = {__scc {main:Index.getValInd} True True} case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                   @ Index.Lind_3
                                                                                                                                                                                                   0#
                                                                                                                                                                                                   ww37 of wild1 {
                                                                                                                                                                                              GHC.Base.Nothing
                                                                                                                                                                                              -> Data.Maybe.fromJust1
                                                                                                                                                                                                   @ Index.Lind_3
                                                                                                                                                                                              GHC.Base.Just x
                                                                                                                                                                                              -> x }
                                                                                                                                               } in
                                                                                                                                               {__scc {main:Index.fromEnum} True True} case a of wild {
                                                                                                                                                                                         Index.L0_3
                                                                                                                                                                                         -> TensorF.epsilonMap3
                                                                                                                                                                                         Index.L1_3
                                                                                                                                                                                         -> TensorF.flatAreaMap22
                                                                                                                                                                                         Index.L2_3
                                                                                                                                                                                         -> TensorF.flatAreaMap24
                                                                                                                                                                                         Index.L3_3
                                                                                                                                                                                         -> TensorF.flatAreaMap26 } of wild { GHC.Types.I# x ->
                                                         case {__scc {main:TensorF.eta_F} False True} {__scc {main:TensorF.eta_F.y} True True} let {
                                                                                                                                                 a :: Index.Lind_3
                                                                                                                                                 = {__scc {main:Index.getValInd} True True} case Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                   @ Index.Lind_3
                                                                                                                                                                                                   1#
                                                                                                                                                                                                   ww37 of wild1 {
                                                                                                                                                                                              GHC.Base.Nothing
                                                                                                                                                                                              -> Data.Maybe.fromJust1
                                                                                                                                                                                                   @ Index.Lind_3
                                                                                                                                                                                              GHC.Base.Just x1
                                                                                                                                                                                              -> x1 }
                                                                                                                                               } in
                                                                                                                                               {__scc {main:Index.fromEnum} True True} case a of wild1 {
                                                                                                                                                                                         Index.L0_3
                                                                                                                                                                                         -> TensorF.epsilonMap3
                                                                                                                                                                                         Index.L1_3
                                                                                                                                                                                         -> TensorF.flatAreaMap22
                                                                                                                                                                                         Index.L2_3
                                                                                                                                                                                         -> TensorF.flatAreaMap24
                                                                                                                                                                                         Index.L3_3
                                                                                                                                                                                         -> TensorF.flatAreaMap26 } of wild1 { GHC.Types.I# y ->
                                                         case {__scc {main:TensorF.eta_F} False True} GHC.Prim.==#
                                                                                                        x
                                                                                                        y of lwild {
                                                           DEFAULT
                                                           -> case {__scc {main:TensorF.eta_F} False True} GHC.Prim.==#
                                                                                                             x
                                                                                                             y of lwild1 {
                                                                DEFAULT
                                                                -> GHC.Real.:%
                                                                     @ GHC.Integer.Type.Integer
                                                                     TensorF.delta_4
                                                                     GHC.Real.$fEnumRatio1
                                                                1#
                                                                -> GHC.Real.:%
                                                                     @ GHC.Integer.Type.Integer
                                                                     TensorF.flatAreaSTMap_dt
                                                                     GHC.Real.$fEnumRatio1 }
                                                           1#
                                                           -> case x of wild2 {
                                                                DEFAULT
                                                                -> case {__scc {main:TensorF.eta_F} False True} GHC.Prim.==#
                                                                                                                  wild2
                                                                                                                  y of lwild1 {
                                                                     DEFAULT
                                                                     -> GHC.Real.:%
                                                                          @ GHC.Integer.Type.Integer
                                                                          TensorF.delta_4
                                                                          GHC.Real.$fEnumRatio1
                                                                     1#
                                                                     -> GHC.Real.:%
                                                                          @ GHC.Integer.Type.Integer
                                                                          TensorF.flatAreaSTMap_dt
                                                                          GHC.Real.$fEnumRatio1 }
                                                                0#
                                                                -> GHC.Real.:%
                                                                     @ GHC.Integer.Type.Integer
                                                                     TensorF.delta_2
                                                                     GHC.Real.$fEnumRatio1 } } } } } }) -}
d44cfa68f29bfecd5e388f206c21ff0e
  evalFullTensor ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8, GHC.Num.Num a,
     GHC.Classes.Eq a) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a -> [a]
  {- Arity: 11,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,A><L,A><S,1*U(C(U))>,
     Inline: [0],
     Unfolding: InlineRule (11, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (w :: GHC.TypeNats.KnownNat n1)
                   (w1 :: GHC.TypeNats.KnownNat n2)
                   (w2 :: GHC.TypeNats.KnownNat n3)
                   (w3 :: GHC.TypeNats.KnownNat n4)
                   (w4 :: GHC.TypeNats.KnownNat n5)
                   (w5 :: GHC.TypeNats.KnownNat n6)
                   (w6 :: GHC.TypeNats.KnownNat n7)
                   (w7 :: GHC.TypeNats.KnownNat n8)
                   (w8 :: GHC.Num.Num a)
                   (w9 :: GHC.Classes.Eq a)
                   (w10 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w10 of ww { TensorF.Tensor ww28 ->
                 TensorF.$wevalFullTensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   w
                   w1
                   w2
                   w3
                   w4
                   w5
                   w6
                   w7
                   ww28 }) -}
332ca5c69c1ddc809d265a794d6dddbc
  evalTensor ::
    Index.Index n1 n2 n3 n4 n5 n6 n7 n8
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ m1)
         (n2 GHC.TypeNats.+ m2)
         (n3 GHC.TypeNats.+ m3)
         (n4 GHC.TypeNats.+ m4)
         (n5 GHC.TypeNats.+ m5)
         (n6 GHC.TypeNats.+ m6)
         (n7 GHC.TypeNats.+ m7)
         (n8 GHC.TypeNats.+ m8)
         a
    -> TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U(U),U(U),U(U),U(U),U(U),U(U),U(U),U(U))><S,1*U(C(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ m1 :: GHC.Types.Nat
                   @ m2 :: GHC.Types.Nat
                   @ m3 :: GHC.Types.Nat
                   @ m4 :: GHC.Types.Nat
                   @ m5 :: GHC.Types.Nat
                   @ m6 :: GHC.Types.Nat
                   @ m7 :: GHC.Types.Nat
                   @ m8 :: GHC.Types.Nat
                   @ a
                   (ind :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                   (ds :: TensorF.Tensor
                            (n1 GHC.TypeNats.+ m1)
                            (n2 GHC.TypeNats.+ m2)
                            (n3 GHC.TypeNats.+ m3)
                            (n4 GHC.TypeNats.+ m4)
                            (n5 GHC.TypeNats.+ m5)
                            (n6 GHC.TypeNats.+ m6)
                            (n7 GHC.TypeNats.+ m7)
                            (n8 GHC.TypeNats.+ m8)
                            a) ->
                 {__scc {main:TensorF.evalTensor} True True} case ds of wild { TensorF.Tensor f ->
                                                             TensorF.Tensor
                                                               @ m1
                                                               @ m2
                                                               @ m3
                                                               @ m4
                                                               @ m5
                                                               @ m6
                                                               @ m7
                                                               @ m8
                                                               @ a
                                                               ({__scc {main:TensorF.evalTensor.g} True False} \ (x :: Index.Index
                                                                                                                         m1
                                                                                                                         m2
                                                                                                                         m3
                                                                                                                         m4
                                                                                                                         m5
                                                                                                                         m6
                                                                                                                         m7
                                                                                                                         m8) ->
                                                                                                               {__scc {main:TensorF.evalTensor.g} False True} f (Index.combineIndex
                                                                                                                                                                   @ n1
                                                                                                                                                                   @ n2
                                                                                                                                                                   @ n3
                                                                                                                                                                   @ n4
                                                                                                                                                                   @ n5
                                                                                                                                                                   @ n6
                                                                                                                                                                   @ n7
                                                                                                                                                                   @ n8
                                                                                                                                                                   @ m1
                                                                                                                                                                   @ m2
                                                                                                                                                                   @ m3
                                                                                                                                                                   @ m4
                                                                                                                                                                   @ m5
                                                                                                                                                                   @ m6
                                                                                                                                                                   @ m7
                                                                                                                                                                   @ m8
                                                                                                                                                                   ind
                                                                                                                                                                   x)) }) -}
bf1846e23925018cca3cec528374a2d1
  flatAreaMap ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (intJMap :: Data.Map.Internal.Map
                                 (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational)
                   (flatMap :: Data.Map.Internal.Map
                                 (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational) ->
                 {__scc {main:TensorF.flatAreaMap} True True} case {__scc {main:TensorF.flatAreaMap.intJ} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ 1
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ 4
                                                                                                                                                                         @ 0
                                                                                                                                                                         @ GHC.Real.Rational
                                                                                                                                                                         ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                          4
                                                                                                                                                                                                                                                                                          0) ->
                                                                                                                                                                                                                                                                                {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                           @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                                                                4
                                                                                                                                                                                                                                                                                                                                                0)
                                                                                                                                                                                                                                                                                                                                           @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                           (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                              @ 1
                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                              @ 0
                                                                                                                                                                                                                                                                                                                                              @ 4
                                                                                                                                                                                                                                                                                                                                              @ 0)
                                                                                                                                                                                                                                                                                                                                           x
                                                                                                                                                                                                                                                                                                                                           intJMap of wild {
                                                                                                                                                                                                                                                                                                                                      GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                      -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                      GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                      -> v }) of ww { TensorF.Tensor ww28 ->
                                                              case {__scc {main:TensorF.flatAreaMap.flatAreaST} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 0
                                                                                                                                                                               @ 4
                                                                                                                                                                               @ GHC.Real.Rational
                                                                                                                                                                               ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                0
                                                                                                                                                                                                                                                                                                4) ->
                                                                                                                                                                                                                                                                                      {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                 @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      0
                                                                                                                                                                                                                                                                                                                                                      4)
                                                                                                                                                                                                                                                                                                                                                 @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                 (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 0
                                                                                                                                                                                                                                                                                                                                                    @ 4)
                                                                                                                                                                                                                                                                                                                                                 x
                                                                                                                                                                                                                                                                                                                                                 flatMap of wild {
                                                                                                                                                                                                                                                                                                                                            GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                            -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                            GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                            -> v }) of ww29 { TensorF.Tensor ww30 ->
                                                              case {__scc {main:TensorF.flatAreaMap.prod} True True} TensorF.$w$stensorProd
                                                                                                                       ww30
                                                                                                                       ww28 of ww31 { Unit# ww32 ->
                                                              case TensorF.$w$stensorContract_4
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     TensorF.flatAreaMap25
                                                                     ({__scc {main:TensorF.flatAreaMap.prod} False True} ww32)
                                                                       `cast`
                                                                     (((,,,,,,,)
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Uind_20>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 1, 1>
                                                                            <Index.Lind_20>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Uind_19>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Lind_19>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Uind_9>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Lind_9>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 4, 3
                                                                                                 GHC.TypeNats.+ 1>
                                                                            <Index.Uind_3>_R)_R
                                                                         (Index.Ind
                                                                            <4 GHC.TypeNats.+ 0, 3
                                                                                                 GHC.TypeNats.+ 1>
                                                                            <Index.Lind_3>_R)_R)_R
                                                                      ->_R <GHC.Real.Rational>_R) of ww33 { Unit# ww34 ->
                                                              case TensorF.$w$stensorContract_2
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     TensorF.flatAreaMap23
                                                                     ww34
                                                                       `cast`
                                                                     (((,,,,,,,)
                                                                         <Index.Ind
                                                                            0 Index.Uind_20>_R
                                                                         <Index.Ind
                                                                            1 Index.Lind_20>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_9>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_9>_R
                                                                         (Index.Ind
                                                                            <3, 2 GHC.TypeNats.+ 1>
                                                                            <Index.Uind_3>_R)_R
                                                                         (Index.Ind
                                                                            <3, 2 GHC.TypeNats.+ 1>
                                                                            <Index.Lind_3>_R)_R)_R
                                                                      ->_R <GHC.Real.Rational>_R) of ww35 { Unit# ww36 ->
                                                              case TensorF.$w$stensorContract_1
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     TensorF.flatAreaMap21
                                                                     ww36
                                                                       `cast`
                                                                     (((,,,,,,,)
                                                                         <Index.Ind
                                                                            0 Index.Uind_20>_R
                                                                         <Index.Ind
                                                                            1 Index.Lind_20>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_9>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_9>_R
                                                                         (Index.Ind
                                                                            <2, 1 GHC.TypeNats.+ 1>
                                                                            <Index.Uind_3>_R)_R
                                                                         (Index.Ind
                                                                            <2, 1 GHC.TypeNats.+ 1>
                                                                            <Index.Lind_3>_R)_R)_R
                                                                      ->_R <GHC.Real.Rational>_R) of ww37 { Unit# ww38 ->
                                                              case TensorF.$w$stensorContract_3
                                                                     @ 0
                                                                     @ 1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     TensorF.flatAreaMap20
                                                                     ww38
                                                                       `cast`
                                                                     (((,,,,,,,)
                                                                         <Index.Ind
                                                                            0 Index.Uind_20>_R
                                                                         <Index.Ind
                                                                            1 Index.Lind_20>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_19>_R
                                                                         <Index.Ind
                                                                            0 Index.Uind_9>_R
                                                                         <Index.Ind
                                                                            0 Index.Lind_9>_R
                                                                         (Index.Ind
                                                                            <1, 0 GHC.TypeNats.+ 1>
                                                                            <Index.Uind_3>_R)_R
                                                                         (Index.Ind
                                                                            <1, 0 GHC.TypeNats.+ 1>
                                                                            <Index.Lind_3>_R)_R)_R
                                                                      ->_R <GHC.Real.Rational>_R) of ww39 { Unit# ww40 ->
                                                              TensorF.$w$stensor2Map
                                                                ww40 } } } } } } }) -}
95f7e1061a873069d00078894adfc5b4
  flatAreaMap1 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} True False} TensorF.flatAreaMap2) -}
b8f096658735f53e47c535eded6ec612
  flatAreaMap10 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i4} True False} TensorF.flatAreaMap11) -}
55558d8baf03f622c87ccebe31244993
  flatAreaMap11 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i4} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
8c0c0c3d6f3d0210f746acf304206679
  flatAreaMap12 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i3} True False} TensorF.flatAreaMap13) -}
d2076d77d67e2d8873b17718d74c08d0
  flatAreaMap13 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i3} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
24b9c8752983f6b14d09e116c24668b6
  flatAreaMap14 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} True False} TensorF.flatAreaMap15) -}
4eeb117364e87b4e58170d1892fc4686
  flatAreaMap15 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
5c7fc6524ce1263724112179767fd44d
  flatAreaMap16 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.delta_2 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
51986874c866e4b0edc8707d63fa17bd
  flatAreaMap17 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} True False} TensorF.flatAreaMap18) -}
24b3ff364aa3d8356e141072cbb89c72
  flatAreaMap18 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
d0bd305d8fa58da789a50fef24a65071
  flatAreaMap19 ::
    Index.Index 0 1 0 0 0 0 0 0 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 0 0) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
8413778800ff14d39c2a91c169143135
  flatAreaMap2 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
22784892e0718c4024e6a4b633b75b65
  flatAreaMap20 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.epsilonMap3, TensorF.epsilonMap3)) -}
dbc349533adca181ac2eca4702c58504
  flatAreaMap21 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap22, TensorF.flatAreaMap22)) -}
4d0994b4785356523178b3385d6317da
  flatAreaMap22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
038925e86048453bbeabc4a5d003b2f3
  flatAreaMap23 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap24, TensorF.flatAreaMap24)) -}
4124d4adfe89890ce9f4959ad0ee59a2
  flatAreaMap24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
e9f2ac461a4e44f81c0edaf34aaac677
  flatAreaMap25 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.flatAreaMap26, TensorF.flatAreaMap26)) -}
5ff406398ea9be7d48b04d30b787393b
  flatAreaMap26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
d0e62127bd49c07cf7445514eb0cb195
  flatAreaMap27 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap17, TensorF.flatAreaMap32,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.flatAreaMap8,
                  TensorF.flatAreaMap6, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap28)) -}
e4d95f5e169c091380cdc101ad8af406
  flatAreaMap28 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} True False} TensorF.flatAreaMap29) -}
547f1aaf1f517683ea94ed46c7b0d7b1
  flatAreaMap29 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} False True} case TensorF.flatAreaMap30 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
adbb5d770d69a2fbe746ac6028cd4cc0
  flatAreaMap3 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.delta_4 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
d1ff49fbdd830c7cbb20420415b72918
  flatAreaMap30 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.flatAreaMap31 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
448b0b0ea5682fc28f980b173810424b
  flatAreaMap31 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
a5a66e84ec9c999c4230d91f144bfbf3
  flatAreaMap32 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} True False} TensorF.flatAreaMap33) -}
6d41ad0e2187c1b307ee018affbb7130
  flatAreaMap33 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
22aefcb790a2447a9467a0857f7106ea
  flatAreaMap34 ::
    GHC.Classes.Ord (Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
  {- Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat ->
                 GHC.Classes.$fOrd(,,,,,,,)
                   @ (Index.Ind n1 Index.Uind_20)
                   @ (Index.Ind n2 Index.Lind_20)
                   @ (Index.Ind n3 Index.Uind_19)
                   @ (Index.Ind n4 Index.Lind_19)
                   @ (Index.Ind n5 Index.Uind_9)
                   @ (Index.Ind n6 Index.Lind_9)
                   @ (Index.Ind n7 Index.Uind_3)
                   @ (Index.Ind n8 Index.Lind_3)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ n1)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ n2)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ n3)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ n4)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ n5)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ n6)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ n7)
                   (TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ n8)) -}
5ca12e3b0d8c51722396660b43b53b11
  flatAreaMap4 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} True False} TensorF.flatAreaMap5) -}
80e391a7f50f25acbba8331df347a397
  flatAreaMap5 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
0c36de190b4674d14e706cccca7ddbe7
  flatAreaMap6 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i6} True False} TensorF.flatAreaMap7) -}
dce9dd89aa462793a8b3255d6b8d6bdc
  flatAreaMap7 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i6} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
48e25d994baaba577c92eee97c3bb8d2
  flatAreaMap8 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i5} True False} TensorF.flatAreaMap9) -}
cd2812d06f5d04abca5f476083bea42a
  flatAreaMap9 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i5} False True} case TensorF.flatAreaMap3 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
0a5a2f77fea45205f0e4262d7a8bf15d
  flatAreaMap_d :: GHC.Real.Rational
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   TensorF.delta_4
                   GHC.Real.$fEnumRatio1) -}
90ac5bea0be913e347be922bbd926a41
  flatAreaMap_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 4)
      (4 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 0 0 0 4, Index.Index 0 1 0 0 0 0 4 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap30
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap30
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap_rank) -}
92f25d648d98cda312ea16a75db5027f
  flatAreaMap_indList :: [Index.Index 0 1 0 0 0 0 0 0]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatAreaMap17 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList7
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap14
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.flatAreaMap8
                                                                                                                                                              TensorF.flatAreaMap6
                                                                                                                                                              TensorF.flatAreaMap4
                                                                                                                                                              TensorF.flatAreaMap1 }) -}
22d28d284573149aacd31e1fa6c04894
  flatAreaMap_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.flatAreaMap27) -}
3513a207ea99b7f6d8c744d51785a928
  flatAreaSTMap ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eps :: Data.Map.Internal.Map
                             (Index.Index 0 0 0 0 0 0 0 4) GHC.Real.Rational) ->
                 {__scc {main:TensorF.flatAreaSTMap} True True} let {
                                                                  ww :: Index.Index 0 0 0 0 0 0 0 4
                                                                        -> GHC.Real.Rational
                                                                  = {__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    0
                                                                                                                                                                                    4) ->
                                                                                                                                                                          {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                     @ (Index.Index
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                          4)
                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                     (TensorF.flatAreaMap34
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                        @ 4)
                                                                                                                                                                                                                                     x
                                                                                                                                                                                                                                     eps of wild {
                                                                                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                                                                                -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                GHC.Base.Just v
                                                                                                                                                                                                                                -> v }
                                                                } in
                                                                {__scc {main:TensorF.mkTensorFromMap} True False} case {__scc {main:TensorF.tensorSub} True True} {__scc {main:TensorF.tensorSMult} True False} {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} True False} TensorF.Tensor
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                       @ 4
                                                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                       ww of wild { TensorF.Tensor g ->
                                                                                                                  case {__scc {main:TensorF.tensorSub} False True} {__scc {main:TensorF.tensorAdd} True False} TensorF.flatAreaSTMap2 of wild1 { TensorF.Tensor f ->
                                                                                                                  TensorF.$w$stensor2Map1
                                                                                                                    (\ (r1 :: (Index.Uinds_20
                                                                                                                                 0,
                                                                                                                               Index.Linds_20
                                                                                                                                 0,
                                                                                                                               Index.Uinds_19
                                                                                                                                 0,
                                                                                                                               Index.Linds_19
                                                                                                                                 0,
                                                                                                                               Index.Uinds_9
                                                                                                                                 0,
                                                                                                                               Index.Linds_9
                                                                                                                                 0,
                                                                                                                               Index.Uinds_3
                                                                                                                                 0,
                                                                                                                               Index.Linds_3
                                                                                                                                 4)) ->
                                                                                                                     {__scc {main:TensorF.tensorSub} False True} {__scc {main:TensorF.tensorAdd} False True} case f r1 of ww28 { GHC.Real.:% ww29 ww30 ->
                                                                                                                                                                                                             case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} g r1 of ww3 { GHC.Real.:% ww31 ww32 ->
                                                                                                                                                                                                             case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                                                         (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                            TensorF.flatAreaSTMap_dt
                                                                                                                                                                                                                                                                                                            ww31)
                                                                                                                                                                                                                                                                                                         (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                            GHC.Real.$fEnumRatio1
                                                                                                                                                                                                                                                                                                            ww32) of ww33 { (#,#) ww34 ww35 ->
                                                                                                                                                                                                             case GHC.Real.$w$s$c+
                                                                                                                                                                                                                    ww29
                                                                                                                                                                                                                    ww30
                                                                                                                                                                                                                    ww34
                                                                                                                                                                                                                    ww35 of ww36 { (#,#) ww37 ww38 ->
                                                                                                                                                                                                             GHC.Real.:%
                                                                                                                                                                                                               @ GHC.Integer.Type.Integer
                                                                                                                                                                                                               ww37
                                                                                                                                                                                                               ww38 } } } }) } }) -}
da4d67762d5576b86ed33d406ec0a7fb
  flatAreaSTMap1 ::
    Index.Index 0 0 0 0 0 0 0 4 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 0 0 0 0 0 4) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
dfd9e14cd95637fe6d4ad201e68cceb6
  flatAreaSTMap2 :: TensorF.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.flatAreaSTMap} False True} {__scc {main:TensorF.flatAreaSTMap.etaProd2} True False} case TensorF.flatAreaSTMap8 of ww { TensorF.Tensor ww28 ->
                                                                                                                          {__scc {main:TensorF.flatAreaSTMap.etaProd1} True False} case TensorF.flatAreaSTMap3 of ww29 { TensorF.Tensor ww30 ->
                                                                                                                                                                                   {__scc {main:TensorF.tensorSub} True True} {__scc {main:TensorF.tensorSMult} True False} case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} True False} TensorF.Tensor
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                        @ 4
                                                                                                                                                                                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                        ww28 of wild { TensorF.Tensor g ->
                                                                                                                                                                                                                                                                            {__scc {main:TensorF.tensorAdd} True False} TensorF.Tensor
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 0
                                                                                                                                                                                                                                                                                                                          @ 4
                                                                                                                                                                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                          (\ (r1 :: (Index.Uinds_20
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Linds_20
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Uinds_19
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Linds_19
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Uinds_9
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Linds_9
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Uinds_3
                                                                                                                                                                                                                                                                                                                                       0,
                                                                                                                                                                                                                                                                                                                                     Index.Linds_3
                                                                                                                                                                                                                                                                                                                                       4)) ->
                                                                                                                                                                                                                                                                                                                           {__scc {main:TensorF.tensorAdd} False True} case ww30
                                                                                                                                                                                                                                                                                                                                                                              r1 of ww31 { GHC.Real.:% ww32 ww33 ->
                                                                                                                                                                                                                                                                                                                                                                       case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} g r1 of ww3 { GHC.Real.:% ww34 ww35 ->
                                                                                                                                                                                                                                                                                                                                                                       case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      TensorF.flatAreaSTMap_dt
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ww34)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GHC.Real.$fEnumRatio1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ww35) of ww36 { (#,#) ww37 ww38 ->
                                                                                                                                                                                                                                                                                                                                                                       case GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                                                                              ww32
                                                                                                                                                                                                                                                                                                                                                                              ww33
                                                                                                                                                                                                                                                                                                                                                                              ww37
                                                                                                                                                                                                                                                                                                                                                                              ww38 of ww39 { (#,#) ww40 ww41 ->
                                                                                                                                                                                                                                                                                                                                                                       GHC.Real.:%
                                                                                                                                                                                                                                                                                                                                                                         @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                                                                                         ww40
                                                                                                                                                                                                                                                                                                                                                                         ww41 } } } }) } } }) -}
d73d97c42935284b0948e6af5075dd29
  flatAreaSTMap3 :: TensorF.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.flatAreaSTMap} False True} {__scc {main:TensorF.flatAreaSTMap.etaProd1} False True} {__scc {main:TensorF.tensorTranspose} True True} case TensorF.flatAreaSTMap4
                                                                                                                                                                                  `cast`
                                                                                                                                                                                (TensorF.Tensor
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <2
                                                                                                                                                                                    GHC.TypeNats.+ 2, 4>
                                                                                                                                                                                   <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor f ->
                                                                                                                                                                           TensorF.Tensor
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 4
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             (\ (x :: Index.Index
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        4) ->
                                                                                                                                                                              f (case x of ww28 { (,,,,,,,) ww3 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                                                                                 {__scc {main:Index.swapPosIndex} True False} (ww3,
                                                                                                                                                                                                                               ww29,
                                                                                                                                                                                                                               ww30,
                                                                                                                                                                                                                               ww31,
                                                                                                                                                                                                                               ww32,
                                                                                                                                                                                                                               ww33,
                                                                                                                                                                                                                               ww34,
                                                                                                                                                                                                                               {__scc {main:Index.swapPosIndex} False True} {__scc {main:Index.swapPosInd} True True} case ww35 of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                                      Index.UnsafemkInd
                                                                                                                                                                                                                                                                                                                        @ 4
                                                                                                                                                                                                                                                                                                                        @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                        (Index.$wswapPosSeq
                                                                                                                                                                                                                                                                                                                           @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                                                                                                           2#
                                                                                                                                                                                                                                                                                                                           s) }) })) }) -}
871da2e5f8aaa616d14a2fdc4324a1ee
  flatAreaSTMap4 ::
    TensorF.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 2)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.flatAreaSTMap} False True} {__scc {main:TensorF.flatAreaSTMap.etaProd} True True} TensorF.flatAreaSTMap_$stensorProd
                                                                                                                          TensorF.eta
                                                                                                                          TensorF.eta) -}
f1573bb40082c03465c3f8124762b447
  flatAreaSTMap5 :: Index.Index 0 0 0 0 0 0 0 2 -> GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.eta} False True} TensorF.eta_F) -}
c2218d208fdd4160d0ed87ad001da15c
  flatAreaSTMap6 :: GHC.Natural.Natural
  {- Unfolding: (case TensorF.flatAreaSTMap7 of wild {
                   GHC.Integer.Type.S# i#
                   -> case GHC.Prim.>=# i# 0# of lwild {
                        DEFAULT -> GHC.Natural.underflowError @ GHC.Natural.Natural
                        1# -> GHC.Natural.NatS# (GHC.Prim.int2Word# i#) }
                   GHC.Integer.Type.Jp# dt
                   -> case GHC.Prim.uncheckedIShiftRL#
                             (GHC.Prim.sizeofByteArray# dt)
                             3# of wild1 {
                        DEFAULT
                        -> case GHC.Prim.sizeofByteArray# dt of wild2 {
                             DEFAULT -> GHC.Natural.NatJ# dt
                             0# -> GHC.Natural.underflowError @ GHC.Natural.Natural }
                        1#
                        -> case GHC.Prim.indexWordArray# dt 0# of wild2 { DEFAULT ->
                           GHC.Natural.NatS# wild2 } }
                   GHC.Integer.Type.Jn# ipv
                   -> GHC.Natural.underflowError @ GHC.Natural.Natural }) -}
8313bc99f5efe48d0453c997426cfea1
  flatAreaSTMap7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
9790c902ad3d3932581dc8abc235d643
  flatAreaSTMap8 :: TensorF.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.flatAreaSTMap} False True} {__scc {main:TensorF.flatAreaSTMap.etaProd2} False True} {__scc {main:TensorF.tensorTranspose} True True} case TensorF.flatAreaSTMap9 of wild { TensorF.Tensor f ->
                                                                                                                                                                           TensorF.Tensor
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 4
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             (\ (x :: Index.Index
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        4) ->
                                                                                                                                                                              f (case x of ww28 { (,,,,,,,) ww3 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                                                                                 {__scc {main:Index.swapPosIndex} True False} (ww3,
                                                                                                                                                                                                                               ww29,
                                                                                                                                                                                                                               ww30,
                                                                                                                                                                                                                               ww31,
                                                                                                                                                                                                                               ww32,
                                                                                                                                                                                                                               ww33,
                                                                                                                                                                                                                               ww34,
                                                                                                                                                                                                                               {__scc {main:Index.swapPosIndex} False True} {__scc {main:Index.swapPosInd} True True} case ww35 of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                                      Index.UnsafemkInd
                                                                                                                                                                                                                                                                                                                        @ 4
                                                                                                                                                                                                                                                                                                                        @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                        (Index.$wswapPosSeq
                                                                                                                                                                                                                                                                                                                           @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                           1#
                                                                                                                                                                                                                                                                                                                           3#
                                                                                                                                                                                                                                                                                                                           s) }) })) }) -}
41d4fa8edfdcdf623f042b38843e4623
  flatAreaSTMap9 :: TensorF.Tensor 0 0 0 0 0 0 0 4 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.flatAreaSTMap} False True} {__scc {main:TensorF.flatAreaSTMap.etaProd2} False True} {__scc {main:TensorF.tensorTranspose} True True} case TensorF.flatAreaSTMap4
                                                                                                                                                                                  `cast`
                                                                                                                                                                                (TensorF.Tensor
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <0
                                                                                                                                                                                    GHC.TypeNats.+ 0, 0>
                                                                                                                                                                                   <2
                                                                                                                                                                                    GHC.TypeNats.+ 2, 4>
                                                                                                                                                                                   <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor f ->
                                                                                                                                                                           TensorF.Tensor
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 0
                                                                                                                                                                             @ 4
                                                                                                                                                                             @ GHC.Real.Rational
                                                                                                                                                                             (\ (x :: Index.Index
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        0
                                                                                                                                                                                        4) ->
                                                                                                                                                                              f (case x of ww28 { (,,,,,,,) ww3 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                                                                                 {__scc {main:Index.swapPosIndex} True False} (ww3,
                                                                                                                                                                                                                               ww29,
                                                                                                                                                                                                                               ww30,
                                                                                                                                                                                                                               ww31,
                                                                                                                                                                                                                               ww32,
                                                                                                                                                                                                                               ww33,
                                                                                                                                                                                                                               ww34,
                                                                                                                                                                                                                               {__scc {main:Index.swapPosIndex} False True} {__scc {main:Index.swapPosInd} True True} case ww35 of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                                      Index.UnsafemkInd
                                                                                                                                                                                                                                                                                                                        @ 4
                                                                                                                                                                                                                                                                                                                        @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                        (Index.$wswapPosSeq
                                                                                                                                                                                                                                                                                                                           @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                           2#
                                                                                                                                                                                                                                                                                                                           3#
                                                                                                                                                                                                                                                                                                                           s) }) })) }) -}
ab7d553bb562c553acad0b817dfae7aa
  flatAreaSTMap_$stensorProd ::
    TensorF.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational
    -> TensorF.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational
    -> TensorF.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 2)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 0 0 0 0 0 0 0 2 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd1 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 2)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
e593b6d88e7d993b24c627db649156c2
  flatAreaSTMap_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
bba69c3a187870d0f9b47c0943681b4f
  flatAreaSTMap_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 2)
    -> (Index.Index 0 0 0 0 0 0 0 2, Index.Index 0 0 0 0 0 0 0 2)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap_rank) -}
a79d8af60cfe0e830d5d3de612f378b8
  flatAreaSTMap_indList :: [Index.Index 0 0 0 0 0 0 0 4]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatAreaMap17 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap32
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.flatAreaMap8
                                                                                                                                                              TensorF.flatAreaMap6
                                                                                                                                                              TensorF.flatAreaMap4
                                                                                                                                                              TensorF.flatAreaMap28 }) -}
3ad8510b5af3126067433e05c6504a69
  flatAreaSTMap_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} case TensorF.$wgetRank
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 2
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaSTMap6
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                               (ww28,
                                                                                                                ww29,
                                                                                                                ww30,
                                                                                                                ww31,
                                                                                                                ww32,
                                                                                                                ww33,
                                                                                                                ww34,
                                                                                                                ww35) }) -}
982351c9e228f2971b619d425e35fa65
  flatInterMap ::
    Data.Map.Internal.Map
      (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (flatA :: Data.Map.Internal.Map
                               (Index.Index 0 1 0 0 0 0 0 0) GHC.Real.Rational)
                   (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 {__scc {main:TensorF.flatInterMap} True True} case {__scc {main:TensorF.flatInterMap.flatATens} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 1
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                                ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0) ->
                                                                                                                                                                                                                                                                                       {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                  @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0)
                                                                                                                                                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                  (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0)
                                                                                                                                                                                                                                                                                                                                                  x
                                                                                                                                                                                                                                                                                                                                                  flatA of wild {
                                                                                                                                                                                                                                                                                                                                             GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                             -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                             GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                             -> v }) of ww { TensorF.Tensor ww28 ->
                                                               case {__scc {main:TensorF.flatInterMap.intAreaTens} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                  ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   1) ->
                                                                                                                                                                                                                                                                                         {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                    @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                    (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 1)
                                                                                                                                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                                                                                                                                    intArea of wild {
                                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                               -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                               GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                               -> v }) of ww29 { TensorF.Tensor ww30 ->
                                                               case {__scc {main:TensorF.flatInterMap.prod} True True} TensorF.$w$stensorProd2
                                                                                                                         ww30
                                                                                                                         ww28 of ww31 { Unit# ww32 ->
                                                               case TensorF.$w$stensorContract_20
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 0
                                                                      @ 1
                                                                      @ 1
                                                                      TensorF.flatInterMap6
                                                                      ({__scc {main:TensorF.flatInterMap.prod} False True} ww32)
                                                                        `cast`
                                                                      (((,,,,,,,)
                                                                          (Index.Ind
                                                                             <1 GHC.TypeNats.+ 0, 0
                                                                                                  GHC.TypeNats.+ 1>
                                                                             <Index.Uind_20>_R)_R
                                                                          <Index.Ind
                                                                             (1 GHC.TypeNats.+ 1)
                                                                             Index.Lind_20>_R
                                                                          (Index.Ind
                                                                             <0 GHC.TypeNats.+ 0, 0>
                                                                             <Index.Uind_19>_R)_R
                                                                          (Index.Ind
                                                                             <0 GHC.TypeNats.+ 0, 0>
                                                                             <Index.Lind_19>_R)_R
                                                                          (Index.Ind
                                                                             <0 GHC.TypeNats.+ 0, 0>
                                                                             <Index.Uind_9>_R)_R
                                                                          (Index.Ind
                                                                             <0 GHC.TypeNats.+ 0, 0>
                                                                             <Index.Lind_9>_R)_R
                                                                          (Index.Ind
                                                                             <1 GHC.TypeNats.+ 0, 1>
                                                                             <Index.Uind_3>_R)_R
                                                                          (Index.Ind
                                                                             <1 GHC.TypeNats.+ 0, 1>
                                                                             <Index.Lind_3>_R)_R)_R
                                                                       ->_R <GHC.Real.Rational>_R) of ww33 { Unit# ww34 ->
                                                               TensorF.$w$stensor2Map2
                                                                 ww34 } } } }) -}
e838ee5ffc633076c537065d60059dad
  flatInterMap1 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} True False} TensorF.flatInterMap2) -}
02ac550544264a2374c89733b89757c4
  flatInterMap2 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
4bf043f91b6f97b5c16951b6b07b1b4b
  flatInterMap3 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} True False} TensorF.flatInterMap4) -}
4d12c9681f475ea61639c13e2babb959
  flatInterMap4 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
e13d09543a7f4e1bfa574390251d4195
  flatInterMap5 ::
    Index.Index 0 1 0 0 0 0 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 1 0 0 0 0 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
47eb7ced34a97c1cc66a1a1a75166a80
  flatInterMap6 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((TensorF.epsilonMap3, TensorF.flatAreaMap22)) -}
0c94c6c83b0aec9fe541b0ca0b4ee221
  flatInterMap7 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatInterMap8, TensorF.flatAreaMap14,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.flatAreaMap8,
                  TensorF.flatAreaMap6, TensorF.flatInterMap3,
                  TensorF.flatInterMap1)) -}
75eadbb6ad1d631c66252b2d0ff2bb7f
  flatInterMap8 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} True False} TensorF.flatInterMap9) -}
ee6384fd5f11cc447bbf8fb3ff4b2968
  flatInterMap9 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
77935cb3b055d0c4ac2b4522dce0c2d8
  flatInterMap_g ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap_rank) -}
f0e75adbc7e1c0c6c8d786f58f3679a6
  flatInterMap_indList :: [Index.Index 0 1 0 0 0 0 1 1]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatAreaMap17 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList6
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap14
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.flatAreaMap8
                                                                                                                                                              TensorF.flatAreaMap6
                                                                                                                                                              TensorF.flatInterMap3
                                                                                                                                                              TensorF.flatInterMap1 }) -}
304876508eec15346219146bf78c95ee
  flatInterMap_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.flatInterMap7) -}
b1f87761d2ad7c865e9b68e551a1b5a8
  intAIB ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
    -> TensorF.Tensor 1 2 0 0 1 1 2 2 GHC.Real.Rational
  {- Arity: 4, Strictness: <L,U><L,A><L,U><L,U>m, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Data.Map.Internal.Map
                           (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational)
                   (w1 :: Data.Map.Internal.Map
                            (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational)
                   (w2 :: Data.Map.Internal.Map
                            (Index.Index 0 1 0 0 0 0 1 1) GHC.Real.Rational)
                   (w3 :: Data.Map.Internal.Map
                            (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational) ->
                 case TensorF.$wintAIB w w2 w3 of ww { Unit# ww28 ->
                 TensorF.Tensor
                   @ 1
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 2
                   @ 2
                   @ GHC.Real.Rational
                   ww28 }) -}
2c68c03e905754227d08905f0b74fff6
  interArea ::
    Data.Map.Internal.Map
      (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (iMap :: Data.Map.Internal.Map
                              (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational)
                   (jMap :: Data.Map.Internal.Map
                              (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational) ->
                 {__scc {main:TensorF.interArea} True True} case {__scc {main:TensorF.interArea.i} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 4
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   4) ->
                                                                                                                                                                                                                                                                         {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                    @ (Index.Index
                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         4)
                                                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                    (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 4)
                                                                                                                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                                                                                                                    iMap of wild {
                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                               -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                               GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                               -> v }) of ww { TensorF.Tensor ww28 ->
                                                            case {__scc {main:TensorF.interArea.j} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 1
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ 4
                                                                                                                                                                  @ 0
                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                  ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                   4
                                                                                                                                                                                                                                                                                   0) ->
                                                                                                                                                                                                                                                                         {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                    @ (Index.Index
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                         4
                                                                                                                                                                                                                                                                                                                                         0)
                                                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                    (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                       @ 4
                                                                                                                                                                                                                                                                                                                                       @ 0)
                                                                                                                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                                                                                                                    jMap of wild {
                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                               -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                               GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                               -> v }) of ww29 { TensorF.Tensor ww30 ->
                                                            case {__scc {main:TensorF.interArea.prod} True True} TensorF.$w$stensorProd3
                                                                                                                   ww28
                                                                                                                   ww30 of ww31 { Unit# ww32 ->
                                                            case TensorF.$w$stensorContract_4
                                                                   @ 1
                                                                   @ 1
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   TensorF.flatAreaMap25
                                                                   ({__scc {main:TensorF.interArea.prod} False True} ww32)
                                                                     `cast`
                                                                   (((,,,,,,,)
                                                                       (Index.Ind
                                                                          <1 GHC.TypeNats.+ 0, 1>
                                                                          <Index.Uind_20>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 1, 1>
                                                                          <Index.Lind_20>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 0, 0>
                                                                          <Index.Uind_19>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 0, 0>
                                                                          <Index.Lind_19>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 0, 0>
                                                                          <Index.Uind_9>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 0, 0>
                                                                          <Index.Lind_9>_R)_R
                                                                       (Index.Ind
                                                                          <0 GHC.TypeNats.+ 4, 3
                                                                                               GHC.TypeNats.+ 1>
                                                                          <Index.Uind_3>_R)_R
                                                                       (Index.Ind
                                                                          <4 GHC.TypeNats.+ 0, 3
                                                                                               GHC.TypeNats.+ 1>
                                                                          <Index.Lind_3>_R)_R)_R
                                                                    ->_R <GHC.Real.Rational>_R) of ww33 { Unit# ww34 ->
                                                            case TensorF.$w$stensorContract_2
                                                                   @ 1
                                                                   @ 1
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   TensorF.flatAreaMap23
                                                                   ww34
                                                                     `cast`
                                                                   (((,,,,,,,)
                                                                       <Index.Ind 1 Index.Uind_20>_R
                                                                       <Index.Ind 1 Index.Lind_20>_R
                                                                       <Index.Ind 0 Index.Uind_19>_R
                                                                       <Index.Ind 0 Index.Lind_19>_R
                                                                       <Index.Ind 0 Index.Uind_9>_R
                                                                       <Index.Ind 0 Index.Lind_9>_R
                                                                       (Index.Ind
                                                                          <3, 2 GHC.TypeNats.+ 1>
                                                                          <Index.Uind_3>_R)_R
                                                                       (Index.Ind
                                                                          <3, 2 GHC.TypeNats.+ 1>
                                                                          <Index.Lind_3>_R)_R)_R
                                                                    ->_R <GHC.Real.Rational>_R) of ww35 { Unit# ww36 ->
                                                            case TensorF.$w$stensorContract_1
                                                                   @ 1
                                                                   @ 1
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   @ 0
                                                                   TensorF.flatAreaMap21
                                                                   ww36
                                                                     `cast`
                                                                   (((,,,,,,,)
                                                                       <Index.Ind 1 Index.Uind_20>_R
                                                                       <Index.Ind 1 Index.Lind_20>_R
                                                                       <Index.Ind 0 Index.Uind_19>_R
                                                                       <Index.Ind 0 Index.Lind_19>_R
                                                                       <Index.Ind 0 Index.Uind_9>_R
                                                                       <Index.Ind 0 Index.Lind_9>_R
                                                                       (Index.Ind
                                                                          <2, 1 GHC.TypeNats.+ 1>
                                                                          <Index.Uind_3>_R)_R
                                                                       (Index.Ind
                                                                          <2, 1 GHC.TypeNats.+ 1>
                                                                          <Index.Lind_3>_R)_R)_R
                                                                    ->_R <GHC.Real.Rational>_R) of ww37 { Unit# ww38 ->
                                                            {__scc {main:TensorF.tensorSMult} True False} case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} True False} TensorF.Tensor
                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                      @ 0
                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                      @ 1
                                                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                                                      ww38 of wild { TensorF.Tensor g ->
                                                                                                          TensorF.$w$stensor2Map3
                                                                                                            (\ (x :: Index.Index
                                                                                                                       1
                                                                                                                       1
                                                                                                                       0
                                                                                                                       0
                                                                                                                       0
                                                                                                                       0
                                                                                                                       1
                                                                                                                       1) ->
                                                                                                             {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} case g x of ww3 { GHC.Real.:% ww39 ww40 ->
                                                                                                                                                                                                  case GHC.Real.$w$sreduce
                                                                                                                                                                                                         (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                            TensorF.interArea_dt
                                                                                                                                                                                                            ww39)
                                                                                                                                                                                                         (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                            GHC.Real.$fEnumRatio1
                                                                                                                                                                                                            ww40) of ww41 { (#,#) ww42 ww43 ->
                                                                                                                                                                                                  GHC.Real.:%
                                                                                                                                                                                                    @ GHC.Integer.Type.Integer
                                                                                                                                                                                                    ww42
                                                                                                                                                                                                    ww43 } }) } } } } } } }) -}
9d1846336f871744e0e7973c9e4cc360
  interArea1 ::
    Index.Index 1 1 0 0 0 0 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
da7e946234c9facac6c387a7108c4e4c
  interArea2 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatInterMap8, TensorF.flatAreaMap32,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.flatAreaMap8,
                  TensorF.flatAreaMap6, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap28)) -}
ef4c7954b835f7e1de03933146c3d35b
  interArea_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-4) -}
bed6a626daadf93de925a6c876529b15
  interArea_g ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 4)
      (4 GHC.TypeNats.+ 0)
    -> (Index.Index 1 0 0 0 0 0 0 4, Index.Index 0 1 0 0 0 0 4 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 4
                   @ 0
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap30
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap30
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <4>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <4>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interArea_rank) -}
67228f42641f6937e5166b942579c585
  interArea_indList :: [Index.Index 1 1 0 0 0 0 1 1]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatInterMap8 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList3
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap14
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.flatAreaMap8
                                                                                                                                                              TensorF.flatAreaMap6
                                                                                                                                                              TensorF.flatInterMap3
                                                                                                                                                              TensorF.flatInterMap1 }) -}
ac37fba54133cd13eb78a67cfe84d621
  interArea_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.interArea2) -}
3d3568ab8cd6cfe7fac2a64c0e037d72
  interEqn1_1 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} True False} TensorF.interEqn1_5) -}
d33e84f7784002c52f6f38040de87def
  interEqn1_10 :: TensorF.Tensor 0 0 0 0 0 0 2 2 GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.interEqn1_2} False True} {__scc {main:TensorF.interEqn1_2.int2} False True} {__scc {main:TensorF.tensorTranspose} True True} case TensorF.interEqn1_11
                                                                                                                                                                          `cast`
                                                                                                                                                                        (TensorF.Tensor
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <0
                                                                                                                                                                            GHC.TypeNats.+ 0, 0>
                                                                                                                                                                           <1
                                                                                                                                                                            GHC.TypeNats.+ 1, 2>
                                                                                                                                                                           <1
                                                                                                                                                                            GHC.TypeNats.+ 1, 2>
                                                                                                                                                                           <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor f ->
                                                                                                                                                                   TensorF.Tensor
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 0
                                                                                                                                                                     @ 2
                                                                                                                                                                     @ 2
                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                     (\ (x :: Index.Index
                                                                                                                                                                                0
                                                                                                                                                                                0
                                                                                                                                                                                0
                                                                                                                                                                                0
                                                                                                                                                                                0
                                                                                                                                                                                0
                                                                                                                                                                                2
                                                                                                                                                                                2) ->
                                                                                                                                                                      f (case x of ww28 { (,,,,,,,) ww3 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                                                                         {__scc {main:Index.swapPosIndex} True False} (ww3,
                                                                                                                                                                                                                       ww29,
                                                                                                                                                                                                                       ww30,
                                                                                                                                                                                                                       ww31,
                                                                                                                                                                                                                       ww32,
                                                                                                                                                                                                                       ww33,
                                                                                                                                                                                                                       ww34,
                                                                                                                                                                                                                       {__scc {main:Index.swapPosIndex} False True} {__scc {main:Index.swapPosInd} True True} case ww35 of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                                                                              Index.UnsafemkInd
                                                                                                                                                                                                                                                                                                                @ 2
                                                                                                                                                                                                                                                                                                                @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                (Index.$wswapPosSeq
                                                                                                                                                                                                                                                                                                                   @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                   0#
                                                                                                                                                                                                                                                                                                                   1#
                                                                                                                                                                                                                                                                                                                   s) }) })) }) -}
1b388c1b499f323a4a95ac6ee3bff493
  interEqn1_11 ::
    TensorF.Tensor
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.interEqn1_2} False True} {__scc {main:TensorF.interEqn1_2.int2} False True} TensorF.interEqn1_2_$stensorProd
                                                                                                                    TensorF.delta_3
                                                                                                                    TensorF.delta_3) -}
444628553c82d0f36d20899a444d7f2a
  interEqn1_12 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i6} True False} TensorF.interEqn1_13) -}
080451ba8cef77d18ca14ee6c1934fc7
  interEqn1_13 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i6} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
d1a8594e28d996d2c16ee505d931efad
  interEqn1_14 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i5} True False} TensorF.interEqn1_15) -}
182e87e7ed022f51e69bcfb674ec8ad5
  interEqn1_15 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i5} False True} case TensorF.flatAreaMap16 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
c2bcdd85e8f144c7797bc6234851084d
  interEqn1_16 ::
    Index.Index 1 1 0 0 1 1 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 1 1 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
36fd6dee313290fb963f79e2f2a5d62d
  interEqn1_17 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap17, TensorF.flatAreaMap32,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.interEqn1_14,
                  TensorF.interEqn1_12, TensorF.flatInterMap3,
                  TensorF.flatInterMap1)) -}
27ad4384dfc23bf82aa3a6181a4b5960
  interEqn1_2 ::
    Data.Map.Internal.Map
      (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 2 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 {__scc {main:TensorF.interEqn1_2} True True} case {__scc {main:TensorF.interEqn1_2.intAreaTens} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                                @ 1
                                                                                                                                                                                @ 1
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 0
                                                                                                                                                                                @ 1
                                                                                                                                                                                @ 1
                                                                                                                                                                                @ GHC.Real.Rational
                                                                                                                                                                                ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 0
                                                                                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                                                                                 1) ->
                                                                                                                                                                                                                                                                                       {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                  @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                  (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 0
                                                                                                                                                                                                                                                                                                                                                     @ 1
                                                                                                                                                                                                                                                                                                                                                     @ 1)
                                                                                                                                                                                                                                                                                                                                                  x
                                                                                                                                                                                                                                                                                                                                                  intArea of wild {
                                                                                                                                                                                                                                                                                                                                             GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                             -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                             GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                             -> v }) of ww { TensorF.Tensor ww28 ->
                                                              {__scc {main:TensorF.interEqn1_2.int1} True False} case TensorF.delta_3 of ww29 { TensorF.Tensor ww30 ->
                                                                                                                 case {__scc {main:TensorF.interEqn1_2.int1} False True} TensorF.$w$stensorProd6
                                                                                                                                                                           ww28
                                                                                                                                                                           ww30 of ww31 { Unit# ww32 ->
                                                                                                                 case ({__scc {main:TensorF.interEqn1_2.intTotal} True True} {__scc {main:TensorF.tensorSub} True True} {__scc {main:TensorF.tensorSMult} True False} {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} True False} TensorF.interEqn1_9)
                                                                                                                        `cast`
                                                                                                                      (TensorF.Tensor
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 1, 1>
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 1, 1>
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 0, 0>
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 0, 0>
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 0, 0>
                                                                                                                         <0
                                                                                                                          GHC.TypeNats.+ 0, 0>
                                                                                                                         <2
                                                                                                                          GHC.TypeNats.+ 0, 2>
                                                                                                                         <2
                                                                                                                          GHC.TypeNats.+ 0, 2>
                                                                                                                         <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor g ->
                                                                                                                 case {__scc {main:TensorF.interEqn1_2.intTotal} False True} {__scc {main:TensorF.tensorSub} False True} {__scc {main:TensorF.tensorAdd} True False} TensorF.Tensor
                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                       @ 2
                                                                                                                                                                                                                                                                       @ 2
                                                                                                                                                                                                                                                                       @ GHC.Real.Rational
                                                                                                                                                                                                                                                                       (\ (r1 :: (Index.Uinds_20
                                                                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                                                                  Index.Linds_20
                                                                                                                                                                                                                                                                                    1,
                                                                                                                                                                                                                                                                                  Index.Uinds_19
                                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                                  Index.Linds_19
                                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                                  Index.Uinds_9
                                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                                  Index.Linds_9
                                                                                                                                                                                                                                                                                    0,
                                                                                                                                                                                                                                                                                  Index.Uinds_3
                                                                                                                                                                                                                                                                                    2,
                                                                                                                                                                                                                                                                                  Index.Linds_3
                                                                                                                                                                                                                                                                                    2)) ->
                                                                                                                                                                                                                                                                        {__scc {main:TensorF.tensorAdd} False True} case ({__scc {main:TensorF.interEqn1_2.int1} False True} ww32)
                                                                                                                                                                                                                                                                                                                           r1
                                                                                                                                                                                                                                                                                                                             `cast`
                                                                                                                                                                                                                                                                                                                           ((,,,,,,,)
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <1, 1
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Uind_20>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <1, 1
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Lind_20>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <0, 0
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Uind_19>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <0, 0
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Lind_19>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <0, 0
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Uind_9>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <0, 0
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                                                                 <Index.Lind_9>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <2, 1
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 1>
                                                                                                                                                                                                                                                                                                                                 <Index.Uind_3>_R)_R
                                                                                                                                                                                                                                                                                                                              (Index.Ind
                                                                                                                                                                                                                                                                                                                                 <2, 1
                                                                                                                                                                                                                                                                                                                                     GHC.TypeNats.+ 1>
                                                                                                                                                                                                                                                                                                                                 <Index.Lind_3>_R)_R)_R of ww33 { GHC.Real.:% ww34 ww35 ->
                                                                                                                                                                                                                                                                                                                    case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} g r1 of ww3 { GHC.Real.:% ww36 ww37 ->
                                                                                                                                                                                                                                                                                                                    case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} GHC.Real.$w$sreduce
                                                                                                                                                                                                                                                                                                                                                                                                                (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                                                                                                                                   TensorF.flatAreaSTMap_dt
                                                                                                                                                                                                                                                                                                                                                                                                                   ww36)
                                                                                                                                                                                                                                                                                                                                                                                                                (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Real.$fEnumRatio1
                                                                                                                                                                                                                                                                                                                                                                                                                   ww37) of ww38 { (#,#) ww39 ww40 ->
                                                                                                                                                                                                                                                                                                                    case GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                                                           ww34
                                                                                                                                                                                                                                                                                                                           ww35
                                                                                                                                                                                                                                                                                                                           ww39
                                                                                                                                                                                                                                                                                                                           ww40 of ww41 { (#,#) ww42 ww43 ->
                                                                                                                                                                                                                                                                                                                    GHC.Real.:%
                                                                                                                                                                                                                                                                                                                      @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                                                                      ww42
                                                                                                                                                                                                                                                                                                                      ww43 } } } }) of ww33 { TensorF.Tensor ww34 ->
                                                                                                                 TensorF.$w$stensor2Map4
                                                                                                                   ww34 } } } } }) -}
7d6055f102126814d2e6e73db52b6735
  interEqn1_2_$stensorProd ::
    TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> TensorF.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd4 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 1)
                   @ (1 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
0918c5d1f8ef238f0ddeaf8bfccc2ae1
  interEqn1_2_$stensorProd1 ::
    TensorF.Tensor 0 0 0 0 0 0 2 2 GHC.Real.Rational
    -> TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> TensorF.Tensor
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         (2 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 0 0 0 0 0 0 2 2 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd5 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ (2 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
d0ab95c2d9fd8abe0390106e6cce01bc
  interEqn1_2_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 0 0 0 0 0 0 1 1, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.interEqn1_2_rank) -}
68b0550ee2d40b18b818789272b969a1
  interEqn1_2_g1 ::
    Index.Index
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 0 0 2 2, Index.Index 1 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 2
                   @ 2
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interEqn1_2_rank1) -}
987541f2f82ecd80ebfcc0bef27d9427
  interEqn1_2_g2 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatInterMap_rank) -}
4beec20f3443b494832e3e574a0a0394
  interEqn1_2_indList :: [Index.Index 1 1 0 0 0 0 2 2]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatInterMap8 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList2
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap14
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.flatAreaMap8
                                                                                                                                                              TensorF.flatAreaMap6
                                                                                                                                                              TensorF.interEqn1_6
                                                                                                                                                              TensorF.interEqn1_1 }) -}
5d8c5f7e5a8711a9a5516859542e9f04
  interEqn1_2_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} case TensorF.$wgetRank
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap16
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                      TensorF.flatAreaMap16
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N) of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                               (ww28,
                                                                                                                ww29,
                                                                                                                ww30,
                                                                                                                ww31,
                                                                                                                ww32,
                                                                                                                ww33,
                                                                                                                ww34,
                                                                                                                ww35) }) -}
7eb7659da052a696e2aa8fe7fef10e0d
  interEqn1_2_rank1 :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} case TensorF.$wgetRank
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 2
                                                                                                                      @ 2
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaSTMap6
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                                                                                                                      TensorF.flatAreaSTMap6
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N) of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                               (ww28,
                                                                                                                ww29,
                                                                                                                ww30,
                                                                                                                ww31,
                                                                                                                ww32,
                                                                                                                ww33,
                                                                                                                ww34,
                                                                                                                ww35) }) -}
dc97abbd2354c6f5732bccdd0a29ffe5
  interEqn1_3 ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 1 1 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (intMetric :: Data.Map.Internal.Map
                                   (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational)
                   (intArea :: Data.Map.Internal.Map
                                 (Index.Index 1 1 0 0 0 0 1 1) GHC.Real.Rational) ->
                 {__scc {main:TensorF.interEqn1_3} True True} case {__scc {main:TensorF.interEqn1_3.intMetricTens} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 0
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ 1
                                                                                                                                                                                  @ GHC.Real.Rational
                                                                                                                                                                                  ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   0
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                                                                                   1) ->
                                                                                                                                                                                                                                                                                         {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                    @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         0
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                                                                                                                                    @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                    (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 0
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 1
                                                                                                                                                                                                                                                                                                                                                       @ 1)
                                                                                                                                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                                                                                                                                    intMetric of wild {
                                                                                                                                                                                                                                                                                                                                               GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                               -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                               GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                               -> v }) of ww { TensorF.Tensor ww28 ->
                                                              {__scc {main:TensorF.interEqn1_3.int2} True False} case TensorF.delta_20 of ww29 { TensorF.Tensor ww30 ->
                                                                                                                 case {__scc {main:TensorF.interEqn1_3.int2} False True} TensorF.$w$stensorProd8
                                                                                                                                                                           ww28
                                                                                                                                                                           ww30 of ww31 { Unit# ww32 ->
                                                                                                                 case {__scc {main:TensorF.interEqn1_3.intAreaTens} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                   @ 0
                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                   @ 1
                                                                                                                                                                                                                                   @ GHC.Real.Rational
                                                                                                                                                                                                                                   ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                                                                                                                    0
                                                                                                                                                                                                                                                                                                                                                    0
                                                                                                                                                                                                                                                                                                                                                    0
                                                                                                                                                                                                                                                                                                                                                    0
                                                                                                                                                                                                                                                                                                                                                    1
                                                                                                                                                                                                                                                                                                                                                    1) ->
                                                                                                                                                                                                                                                                                                                                          {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                                                                                     @ (Index.Index
                                                                                                                                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                                                                          0
                                                                                                                                                                                                                                                                                                                                                                                                          1
                                                                                                                                                                                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                                                                                                                                                                                     @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                                                                                     (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                                                                                                                                                                                                                        @ 1)
                                                                                                                                                                                                                                                                                                                                                                                                     x
                                                                                                                                                                                                                                                                                                                                                                                                     intArea of wild {
                                                                                                                                                                                                                                                                                                                                                                                                GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                                                                                -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                                                                                GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                                                                                -> v }) of ww33 { TensorF.Tensor ww34 ->
                                                                                                                 {__scc {main:TensorF.interEqn1_3.int1} True False} case TensorF.delta_9 of ww35 { TensorF.Tensor ww36 ->
                                                                                                                                                                    case {__scc {main:TensorF.interEqn1_3.int1} False True} TensorF.$w$stensorProd7
                                                                                                                                                                                                                              ww34
                                                                                                                                                                                                                              ww36 of ww37 { Unit# ww38 ->
                                                                                                                                                                    let {
                                                                                                                                                                      ww39 :: Index.Index
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                              -> GHC.Real.Rational
                                                                                                                                                                      = {__scc {main:TensorF.interEqn1_3.int1} False True} ww38
                                                                                                                                                                    } in
                                                                                                                                                                    let {
                                                                                                                                                                      int1 :: TensorF.Tensor
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                                                                (0
                                                                                                                                                                                 GHC.TypeNats.+ 1)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                (1
                                                                                                                                                                                 GHC.TypeNats.+ 0)
                                                                                                                                                                                GHC.Real.Rational
                                                                                                                                                                      = TensorF.Tensor
                                                                                                                                                                          @ (1
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ (1
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ (0
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ (0
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ (0
                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                          @ (0
                                                                                                                                                                             GHC.TypeNats.+ 1)
                                                                                                                                                                          @ (1
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ (1
                                                                                                                                                                             GHC.TypeNats.+ 0)
                                                                                                                                                                          @ GHC.Real.Rational
                                                                                                                                                                          ww39
                                                                                                                                                                    } in
                                                                                                                                                                    case ({__scc {main:TensorF.interEqn1_3.intTotal} True True} {__scc {main:TensorF.tensorAdd} True False} int1)
                                                                                                                                                                           `cast`
                                                                                                                                                                         (TensorF.Tensor
                                                                                                                                                                            <1
                                                                                                                                                                             GHC.TypeNats.+ 0, 1>
                                                                                                                                                                            <1
                                                                                                                                                                             GHC.TypeNats.+ 0, 1>
                                                                                                                                                                            <0
                                                                                                                                                                             GHC.TypeNats.+ 0, 0>
                                                                                                                                                                            <0
                                                                                                                                                                             GHC.TypeNats.+ 0, 0>
                                                                                                                                                                            <0
                                                                                                                                                                             GHC.TypeNats.+ 1, 1>
                                                                                                                                                                            <0
                                                                                                                                                                             GHC.TypeNats.+ 1, 1>
                                                                                                                                                                            <1
                                                                                                                                                                             GHC.TypeNats.+ 0, 1>
                                                                                                                                                                            <1
                                                                                                                                                                             GHC.TypeNats.+ 0, 1>
                                                                                                                                                                            <GHC.Real.Rational>_R)_R of wild { TensorF.Tensor f ->
                                                                                                                                                                    TensorF.$w$stensor2Map5
                                                                                                                                                                      (\ (r1 :: (Index.Uinds_20
                                                                                                                                                                                   1,
                                                                                                                                                                                 Index.Linds_20
                                                                                                                                                                                   1,
                                                                                                                                                                                 Index.Uinds_19
                                                                                                                                                                                   0,
                                                                                                                                                                                 Index.Linds_19
                                                                                                                                                                                   0,
                                                                                                                                                                                 Index.Uinds_9
                                                                                                                                                                                   1,
                                                                                                                                                                                 Index.Linds_9
                                                                                                                                                                                   1,
                                                                                                                                                                                 Index.Uinds_3
                                                                                                                                                                                   1,
                                                                                                                                                                                 Index.Linds_3
                                                                                                                                                                                   1)) ->
                                                                                                                                                                       {__scc {main:TensorF.interEqn1_3.intTotal} False True} {__scc {main:TensorF.tensorAdd} False True} case f r1 of ww40 { GHC.Real.:% ww41 ww42 ->
                                                                                                                                                                                                                                                                          case ({__scc {main:TensorF.interEqn1_3.int2} False True} ww32)
                                                                                                                                                                                                                                                                                 r1
                                                                                                                                                                                                                                                                                   `cast`
                                                                                                                                                                                                                                                                                 ((,,,,,,,)
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 0
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1>
                                                                                                                                                                                                                                                                                       <Index.Uind_20>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 0
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 1>
                                                                                                                                                                                                                                                                                       <Index.Lind_20>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <0, 0
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Uind_19>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <0, 0
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Lind_19>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 1
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Uind_9>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 1
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Lind_9>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 1
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Uind_3>_R)_R
                                                                                                                                                                                                                                                                                    (Index.Ind
                                                                                                                                                                                                                                                                                       <1, 1
                                                                                                                                                                                                                                                                                           GHC.TypeNats.+ 0>
                                                                                                                                                                                                                                                                                       <Index.Lind_3>_R)_R)_R of ww3 { GHC.Real.:% ww43 ww44 ->
                                                                                                                                                                                                                                                                          case GHC.Real.$w$s$c+
                                                                                                                                                                                                                                                                                 ww41
                                                                                                                                                                                                                                                                                 ww42
                                                                                                                                                                                                                                                                                 ww43
                                                                                                                                                                                                                                                                                 ww44 of ww45 { (#,#) ww46 ww47 ->
                                                                                                                                                                                                                                                                          GHC.Real.:%
                                                                                                                                                                                                                                                                            @ GHC.Integer.Type.Integer
                                                                                                                                                                                                                                                                            ww46
                                                                                                                                                                                                                                                                            ww47 } } }) } } } } } } }) -}
d24c36cdeb0fe6dcbb950abff3db184f
  interEqn1_3_g ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 0 0 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap_rank) -}
c22b8683dd1e128b690ae53cfaf0bf28
  interEqn1_3_g1 ::
    Index.Index
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 1 1 1 1, Index.Index 1 1 0 0 0 0 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interEqn1_3_rank) -}
01129be40cf401d727d16d4606a3a781
  interEqn1_3_indList :: [Index.Index 1 1 0 0 1 1 1 1]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatInterMap8 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList5
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap14
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.interEqn1_14
                                                                                                                                                              TensorF.interEqn1_12
                                                                                                                                                              TensorF.flatInterMap3
                                                                                                                                                              TensorF.flatInterMap1 }) -}
9cf3c528881320c0931cdd14d0516edb
  interEqn1_3_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.interEqn1_17) -}
e09554c9122bb3f63b8b2a61427eb396
  interEqn1_5 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i8} False True} case TensorF.flatAreaSTMap6 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
d659ebd28ceed98fb0827929551f2ad1
  interEqn1_6 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} True False} TensorF.interEqn1_7) -}
75cb8bfe8012f7bc1b455249390e1d06
  interEqn1_7 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i7} False True} case TensorF.flatAreaSTMap6 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
9262e0fee3fb44da7c7a9144a277c3c2
  interEqn1_8 ::
    Index.Index 1 1 0 0 0 0 2 2 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 1 1 0 0 0 0 2 2) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
79142e9b388ba7b3e6e8738e25d67156
  interEqn1_9 ::
    TensorF.Tensor
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 0)
      GHC.Real.Rational
  {- Unfolding: ({__scc {main:TensorF.interEqn1_2} False True} {__scc {main:TensorF.interEqn1_2.int2} True True} TensorF.interEqn1_2_$stensorProd1
                                                                                                                   TensorF.interEqn1_10
                                                                                                                   TensorF.delta_20) -}
bd8ad8fb2c4a1a70cf63566b08135d6b
  interMetric ::
    Data.Map.Internal.Map
      (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 1 1 1) GHC.Real.Rational
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (iMap :: Data.Map.Internal.Map
                              (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational)
                   (jMap :: Data.Map.Internal.Map
                              (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational) ->
                 {__scc {main:TensorF.interMetric} True True} case {__scc {main:TensorF.interMetric.i} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 2
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       2) ->
                                                                                                                                                                                                                                                                             {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                        @ (Index.Index
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             1
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             2)
                                                                                                                                                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                        (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 2)
                                                                                                                                                                                                                                                                                                                                        x
                                                                                                                                                                                                                                                                                                                                        iMap of wild {
                                                                                                                                                                                                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                   -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                   GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                   -> v }) of ww { TensorF.Tensor ww28 ->
                                                              case {__scc {main:TensorF.interMetric.j} True True} {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ 1
                                                                                                                                                                      @ 2
                                                                                                                                                                      @ 0
                                                                                                                                                                      @ GHC.Real.Rational
                                                                                                                                                                      ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       0
                                                                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                                                                       2
                                                                                                                                                                                                                                                                                       0) ->
                                                                                                                                                                                                                                                                             {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                                                                                                                        @ (Index.Index
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             0
                                                                                                                                                                                                                                                                                                                                             1
                                                                                                                                                                                                                                                                                                                                             2
                                                                                                                                                                                                                                                                                                                                             0)
                                                                                                                                                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                                                                                                                                                        (TensorF.flatAreaMap34
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 0
                                                                                                                                                                                                                                                                                                                                           @ 1
                                                                                                                                                                                                                                                                                                                                           @ 2
                                                                                                                                                                                                                                                                                                                                           @ 0)
                                                                                                                                                                                                                                                                                                                                        x
                                                                                                                                                                                                                                                                                                                                        jMap of wild {
                                                                                                                                                                                                                                                                                                                                   GHC.Base.Nothing
                                                                                                                                                                                                                                                                                                                                   -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                                                                                   GHC.Base.Just v
                                                                                                                                                                                                                                                                                                                                   -> v }) of ww29 { TensorF.Tensor ww30 ->
                                                              case {__scc {main:TensorF.interMetric.prod} True True} TensorF.$w$stensorProd9
                                                                                                                       ww28
                                                                                                                       ww30 of ww31 { Unit# ww32 ->
                                                              case TensorF.$w$stensorContract_1
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 0
                                                                     @ 1
                                                                     @ 1
                                                                     TensorF.flatAreaMap20
                                                                     ({__scc {main:TensorF.interMetric.prod} False True} ww32)
                                                                       `cast`
                                                                     (((,,,,,,,)
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Uind_20>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Lind_20>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Uind_19>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 0, 0>
                                                                            <Index.Lind_19>_R)_R
                                                                         (Index.Ind
                                                                            <1 GHC.TypeNats.+ 0, 1>
                                                                            <Index.Uind_9>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 1, 1>
                                                                            <Index.Lind_9>_R)_R
                                                                         (Index.Ind
                                                                            <0 GHC.TypeNats.+ 2, 1
                                                                                                 GHC.TypeNats.+ 1>
                                                                            <Index.Uind_3>_R)_R
                                                                         (Index.Ind
                                                                            <2 GHC.TypeNats.+ 0, 1
                                                                                                 GHC.TypeNats.+ 1>
                                                                            <Index.Lind_3>_R)_R)_R
                                                                      ->_R <GHC.Real.Rational>_R) of ww33 { Unit# ww34 ->
                                                              {__scc {main:TensorF.tensorSMult} True False} case {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} True False} TensorF.Tensor
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 0
                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                        @ 1
                                                                                                                                                                                                        @ GHC.Real.Rational
                                                                                                                                                                                                        ww34 of wild { TensorF.Tensor g ->
                                                                                                            TensorF.$w$stensor2Map6
                                                                                                              (\ (x :: Index.Index
                                                                                                                         0
                                                                                                                         0
                                                                                                                         0
                                                                                                                         0
                                                                                                                         1
                                                                                                                         1
                                                                                                                         1
                                                                                                                         1) ->
                                                                                                               {__scc {main:TensorF.tensorSMult} False True} {__scc {main:TensorF.fmap} False True} case g x of ww3 { GHC.Real.:% ww35 ww36 ->
                                                                                                                                                                                                    case GHC.Real.$w$sreduce
                                                                                                                                                                                                           (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                              TensorF.interMetric_dt
                                                                                                                                                                                                              ww35)
                                                                                                                                                                                                           (GHC.Integer.Type.timesInteger
                                                                                                                                                                                                              GHC.Real.$fEnumRatio1
                                                                                                                                                                                                              ww36) of ww37 { (#,#) ww38 ww39 ->
                                                                                                                                                                                                    GHC.Real.:%
                                                                                                                                                                                                      @ GHC.Integer.Type.Integer
                                                                                                                                                                                                      ww38
                                                                                                                                                                                                      ww39 } }) } } } } }) -}
b74757ca69569f584cfce2c38a1c4dd2
  interMetric1 ::
    Index.Index 0 0 0 0 1 1 1 1 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 0 0 1 1 1 1) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl1 ww28 ww29 }) -}
0e45ac1b8c02db20770dc462c0369b6c
  interMetric2 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatAreaMap17, TensorF.flatAreaMap32,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.interEqn1_14,
                  TensorF.flatAreaMap6, TensorF.flatAreaMap4,
                  TensorF.interEqn1_1)) -}
774cc3205e6c465b38207f88227466e0
  interMetric_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-2) -}
3db6d6fbd40c7318bb5b5c05e72dacd3
  interMetric_g ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 2)
      (2 GHC.TypeNats.+ 0)
    -> (Index.Index 0 0 0 0 1 0 0 2, Index.Index 0 0 0 0 0 1 2 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 2
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 2
                   @ 0
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.interMetric_rank) -}
7fe031ff832d3e8d63d6b81476d791e4
  interMetric_indList :: [Index.Index 0 0 0 0 1 1 1 1]
  {- Unfolding: ({__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} {__scc {main:TensorF.getRank} True False} case TensorF.flatAreaMap17 of ww { GHC.Types.I# ww28 ->
                                                                                                                                                            TensorF.$w$stensorIndList4
                                                                                                                                                              ww28
                                                                                                                                                              TensorF.flatAreaMap32
                                                                                                                                                              TensorF.flatAreaMap12
                                                                                                                                                              TensorF.flatAreaMap10
                                                                                                                                                              TensorF.interEqn1_14
                                                                                                                                                              TensorF.interEqn1_12
                                                                                                                                                              TensorF.flatInterMap3
                                                                                                                                                              TensorF.flatInterMap1 }) -}
9cba87d95af284f6582e99b951096bee
  interMetric_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.interMetric2) -}
b27b1fcc1f8747beb48f96bf8d2ca6f0
  inter_I2Map ::
    Data.Map.Internal.Map (Index.Linds_3 2) Index.Uind_9
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 1 0 0 2) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
5f6186d28b9b8d6c193954a611761625
  inter_I3Map ::
    Data.Map.Internal.Map (Index.Linds_3 3) Index.Uind_19
    -> Data.Map.Internal.Map
         (Index.Index 0 0 1 0 0 0 0 3) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (trian :: Data.Map.Internal.Map
                               (Index.Linds_3 3) Index.Uind_19) ->
                 {__scc {main:TensorF.inter_I3Map} True True} Data.Map.Internal.filterWithKey
                                                                @ (Index.Index 0 0 1 0 0 0 0 3)
                                                                @ GHC.Real.Rational
                                                                TensorF.inter_I3Map2
                                                                (TensorF.$sfromList4
                                                                   @ (GHC.Real.Ratio
                                                                        GHC.Integer.Type.Integer)
                                                                   (GHC.List.zip
                                                                      @ (Index.Uinds_20 0,
                                                                         Index.Linds_20 0,
                                                                         Index.Uinds_19 1,
                                                                         Index.Linds_19 0,
                                                                         Index.Uinds_9 0,
                                                                         Index.Linds_9 0,
                                                                         Index.Uinds_3 0,
                                                                         Index.Linds_3 3)
                                                                      @ (GHC.Real.Ratio
                                                                           GHC.Integer.Type.Integer)
                                                                      TensorF.inter_I3Map_inds
                                                                      (let {
                                                                         f :: Index.Index
                                                                                0 0 1 0 0 0 0 3
                                                                              -> GHC.Real.Rational
                                                                         = {__scc {main:TensorF.inter_I3Map.f} True False} \ (ds :: (Index.Uinds_20
                                                                                                                                       0,
                                                                                                                                     Index.Linds_20
                                                                                                                                       0,
                                                                                                                                     Index.Uinds_19
                                                                                                                                       1,
                                                                                                                                     Index.Linds_19
                                                                                                                                       0,
                                                                                                                                     Index.Uinds_9
                                                                                                                                       0,
                                                                                                                                     Index.Linds_9
                                                                                                                                       0,
                                                                                                                                     Index.Uinds_3
                                                                                                                                       0,
                                                                                                                                     Index.Linds_3
                                                                                                                                       3)) ->
                                                                                                                           {__scc {main:TensorF.inter_I3Map.f} False True} {__scc {main:TensorF.interF_I3} True True} case ds of wild { (,,,,,,,) ds1 ds2 x ds3 ds4 ds5 ds6 y ->
                                                                                                                                                                                                                      {__scc {main:Index.==} True False} case {__scc {main:TensorF.interF_I3.indI} True True} {__scc {main:Index.sortInd} True False} y of wild1 { Index.UnsafemkInd s ->
                                                                                                                                                                                                                                                         case {__scc {main:TensorF.interF_I3.indI} False True} TensorF.$wpoly_go3
                                                                                                                                                                                                                                                                                                                 @ Index.Uind_19
                                                                                                                                                                                                                                                                                                                 ({__scc {main:Index.sortInd} False True} Data.Sequence.Internal.Sorting.sortBy
                                                                                                                                                                                                                                                                                                                                                            @ Index.Lind_3
                                                                                                                                                                                                                                                                                                                                                            Index.$fOrdLind_3_$ccompare
                                                                                                                                                                                                                                                                                                                                                            s)
                                                                                                                                                                                                                                                                                                                 trian of x1 { DEFAULT ->
                                                                                                                                                                                                                                                         case {__scc {main:Index.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                   @ Index.Uind_19
                                                                                                                                                                                                                                                                                                   x1 of a# { DEFAULT ->
                                                                                                                                                                                                                                                         case {__scc {main:TensorF.interF_I3.xVal} True True} {__scc {main:Index.getValInd} True False} x of wild2 { Index.UnsafemkInd s1 ->
                                                                                                                                                                                                                                                         case {__scc {main:TensorF.interF_I3.xVal} False True} {__scc {main:Index.getValInd} False True} Data.Sequence.Internal.$wlookup
                                                                                                                                                                                                                                                                                                                                                           @ Index.Uind_19
                                                                                                                                                                                                                                                                                                                                                           0#
                                                                                                                                                                                                                                                                                                                                                           s1 of wild3 {
                                                                                                                                                                                                                                                           GHC.Base.Nothing
                                                                                                                                                                                                                                                           -> case Data.Maybe.fromJust1
                                                                                                                                                                                                                                                              ret_ty GHC.Real.Rational
                                                                                                                                                                                                                                                              of {}
                                                                                                                                                                                                                                                           GHC.Base.Just x2
                                                                                                                                                                                                                                                           -> case {__scc {main:Index.==} False True} GHC.Prim.dataToTag#
                                                                                                                                                                                                                                                                                                        @ Index.Uind_19
                                                                                                                                                                                                                                                                                                        x2 of b# { DEFAULT ->
                                                                                                                                                                                                                                                              case {__scc {main:Index.==} False True} GHC.Prim.tagToEnum#
                                                                                                                                                                                                                                                                                                        @ GHC.Types.Bool
                                                                                                                                                                                                                                                                                                        (GHC.Prim.==#
                                                                                                                                                                                                                                                                                                           a#
                                                                                                                                                                                                                                                                                                           b#) of wild4 {
                                                                                                                                                                                                                                                                GHC.Types.False
                                                                                                                                                                                                                                                                -> TensorF.flatAreaMap_d
                                                                                                                                                                                                                                                                GHC.Types.True
                                                                                                                                                                                                                                                                -> TensorF.inter_I3Map1 } } } } } } } }
                                                                       } in
                                                                       {__scc {main:TensorF.inter_I3Map.vals} True True} GHC.Base.map
                                                                                                                           @ (Index.Uinds_20
                                                                                                                                0,
                                                                                                                              Index.Linds_20
                                                                                                                                0,
                                                                                                                              Index.Uinds_19
                                                                                                                                1,
                                                                                                                              Index.Linds_19
                                                                                                                                0,
                                                                                                                              Index.Uinds_9
                                                                                                                                0,
                                                                                                                              Index.Linds_9
                                                                                                                                0,
                                                                                                                              Index.Uinds_3
                                                                                                                                0,
                                                                                                                              Index.Linds_3
                                                                                                                                3)
                                                                                                                           @ (GHC.Real.Ratio
                                                                                                                                GHC.Integer.Type.Integer)
                                                                                                                           f
                                                                                                                           TensorF.inter_I3Map_inds)))) -}
3ceddef8fcfa178afb1c4113bcea200a
  inter_I3Map1 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   TensorF.delta_2
                   GHC.Real.$fEnumRatio1) -}
360a4c1b2a43e7082000d460f75b34b4
  inter_I3Map2 ::
    Index.Index 0 0 1 0 0 0 0 3 -> GHC.Real.Rational -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Index.Index 0 0 1 0 0 0 0 3) (w1 :: GHC.Real.Rational) ->
                 case w1 of ww { GHC.Real.:% ww28 ww29 ->
                 TensorF.$wlvl ww28 ww29 }) -}
cdab96bc4e1f7098c5a7404ae2f31001
  inter_I3Map_inds :: [Index.Index 0 0 1 0 0 0 0 3]
  {- Unfolding: ({__scc {main:TensorF.inter_I3Map} False True} {__scc {main:TensorF.inter_I3Map.inds} True True} TensorF.$w$stensorIndList10
                                                                                                                   0#
                                                                                                                   TensorF.epsilonMap3
                                                                                                                   TensorF.flatAreaMap22
                                                                                                                   TensorF.epsilonMap3
                                                                                                                   TensorF.epsilonMap3
                                                                                                                   TensorF.epsilonMap3
                                                                                                                   TensorF.epsilonMap3
                                                                                                                   TensorF.flatAreaMap26) -}
35825b123c51e14ecd50e83188dea62f
  inter_IAreaMap ::
    Data.Map.Internal.Map (Index.Linds_3 4) Index.Uind_20
    -> Data.Map.Internal.Map
         (Index.Index 1 0 0 0 0 0 0 4) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
f8b31763a5c7a6d9c6c785c0bedffda0
  inter_J2Map ::
    Data.Map.Internal.Map (Index.Uinds_3 2) Index.Lind_9
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 0 0 1 2 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
91b4f0a23462de8f592381d93aa2d06d
  inter_J3Map ::
    Data.Map.Internal.Map (Index.Uinds_3 3) Index.Lind_19
    -> Data.Map.Internal.Map
         (Index.Index 0 0 0 1 0 0 3 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
9d9112e79c7dd4751991b9658f644845
  inter_JAreaMap ::
    Data.Map.Internal.Map (Index.Uinds_3 4) Index.Lind_20
    -> Data.Map.Internal.Map
         (Index.Index 0 1 0 0 0 0 4 0) GHC.Real.Rational
  {- Arity: 1, Strictness: <L,U> -}
452a7e1a99fd43a22d9554ef35b4690c
  mkTensorFromMap ::
    GHC.Num.Num a =>
    Data.Map.Internal.Map (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 1, Strictness: <L,1*U(A,A,A,A,A,A,1*C1(U))>,
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   ($dNum :: GHC.Num.Num a) ->
                 let {
                   d :: a
                   = {__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} False True} GHC.Num.fromInteger
                                                                                                                             @ a
                                                                                                                             $dNum
                                                                                                                             TensorF.delta_4
                 } in
                 \ (m :: Data.Map.Internal.Map
                           (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a) ->
                 {__scc {main:TensorF.mkTensorFromMap} True False} TensorF.Tensor
                                                                     @ n1
                                                                     @ n2
                                                                     @ n3
                                                                     @ n4
                                                                     @ n5
                                                                     @ n6
                                                                     @ n7
                                                                     @ n8
                                                                     @ a
                                                                     ({__scc {main:TensorF.mkTensorFromMap} False True} {__scc {main:TensorF.mkTensorFromMap.f} True False} \ (x :: Index.Index
                                                                                                                                                                                      n1
                                                                                                                                                                                      n2
                                                                                                                                                                                      n3
                                                                                                                                                                                      n4
                                                                                                                                                                                      n5
                                                                                                                                                                                      n6
                                                                                                                                                                                      n7
                                                                                                                                                                                      n8) ->
                                                                                                                                                                            {__scc {main:TensorF.mkTensorFromMap.f} False True} case Data.Map.Internal.lookup
                                                                                                                                                                                                                                       @ (Index.Index
                                                                                                                                                                                                                                            n1
                                                                                                                                                                                                                                            n2
                                                                                                                                                                                                                                            n3
                                                                                                                                                                                                                                            n4
                                                                                                                                                                                                                                            n5
                                                                                                                                                                                                                                            n6
                                                                                                                                                                                                                                            n7
                                                                                                                                                                                                                                            n8)
                                                                                                                                                                                                                                       @ a
                                                                                                                                                                                                                                       (TensorF.flatAreaMap34
                                                                                                                                                                                                                                          @ n1
                                                                                                                                                                                                                                          @ n2
                                                                                                                                                                                                                                          @ n3
                                                                                                                                                                                                                                          @ n4
                                                                                                                                                                                                                                          @ n5
                                                                                                                                                                                                                                          @ n6
                                                                                                                                                                                                                                          @ n7
                                                                                                                                                                                                                                          @ n8)
                                                                                                                                                                                                                                       x
                                                                                                                                                                                                                                       m of wild {
                                                                                                                                                                                                                                  GHC.Base.Nothing
                                                                                                                                                                                                                                  -> d
                                                                                                                                                                                                                                  GHC.Base.Just v
                                                                                                                                                                                                                                  -> v })) -}
17e5b35fa56303ab15718f8b65a1a46c
  tensor2Map ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8, GHC.Num.Num a,
     GHC.Classes.Eq a) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> Data.Map.Internal.Map (Index.Index n1 n2 n3 n4 n5 n6 n7 n8) a
  {- Arity: 10,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,1*U(A,A,A,A,A,A,1*C1(U))><L,U(A,C(C1(U)))>,
     Unfolding: (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   ($dKnownNat1 :: GHC.TypeNats.KnownNat n1)
                   ($dKnownNat2 :: GHC.TypeNats.KnownNat n2)
                   ($dKnownNat3 :: GHC.TypeNats.KnownNat n3)
                   ($dKnownNat4 :: GHC.TypeNats.KnownNat n4)
                   ($dKnownNat5 :: GHC.TypeNats.KnownNat n5)
                   ($dKnownNat6 :: GHC.TypeNats.KnownNat n6)
                   ($dKnownNat7 :: GHC.TypeNats.KnownNat n7)
                   ($dKnownNat8 :: GHC.TypeNats.KnownNat n8)
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a) ->
                 let {
                   ds :: a
                   = {__scc {main:TensorF.tensor2Map} False True} GHC.Num.fromInteger
                                                                    @ a
                                                                    $dNum
                                                                    TensorF.delta_4
                 } in
                 let {
                   lvl219 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8
                             -> a -> GHC.Types.Bool
                     {- Arity: 2, Strictness: <L,A><L,U>,
                        Unfolding: InlineRule (2, True, False)
                                   (\ (ds1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                                      (x :: a)[OneShot] ->
                                    GHC.Classes./= @ a $dEq x ds) -}
                   = \ (ds1 :: Index.Index n1 n2 n3 n4 n5 n6 n7 n8)
                       (x :: a)[OneShot] ->
                     GHC.Classes./= @ a $dEq x ds
                 } in
                 let {
                   indList :: [Index.Index n1 n2 n3 n4 n5 n6 n7 n8]
                   = {__scc {main:TensorF.tensor2Map} False True} {__scc {main:TensorF.tensor2Map.indList} True True} case TensorF.$wgetRank
                                                                                                                             @ n1
                                                                                                                             @ n2
                                                                                                                             @ n3
                                                                                                                             @ n4
                                                                                                                             @ n5
                                                                                                                             @ n6
                                                                                                                             @ n7
                                                                                                                             @ n8
                                                                                                                             @ a
                                                                                                                             $dKnownNat1
                                                                                                                             $dKnownNat2
                                                                                                                             $dKnownNat3
                                                                                                                             $dKnownNat4
                                                                                                                             $dKnownNat5
                                                                                                                             $dKnownNat6
                                                                                                                             $dKnownNat7
                                                                                                                             $dKnownNat8 of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                      TensorF.tensorIndList
                                                                                                                        @ n1
                                                                                                                        @ n2
                                                                                                                        @ n3
                                                                                                                        @ n4
                                                                                                                        @ n5
                                                                                                                        @ n6
                                                                                                                        @ n7
                                                                                                                        @ n8
                                                                                                                        $dKnownNat1
                                                                                                                        $dKnownNat2
                                                                                                                        $dKnownNat3
                                                                                                                        $dKnownNat4
                                                                                                                        $dKnownNat5
                                                                                                                        $dKnownNat6
                                                                                                                        $dKnownNat7
                                                                                                                        $dKnownNat8
                                                                                                                        (ww28,
                                                                                                                         ww29,
                                                                                                                         ww30,
                                                                                                                         ww31,
                                                                                                                         ww32,
                                                                                                                         ww33,
                                                                                                                         ww34,
                                                                                                                         ww35) }
                 } in
                 \ (ds1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 {__scc {main:TensorF.tensor2Map} True True} case ds1 of wild { TensorF.Tensor f ->
                                                             Data.Map.Internal.filterWithKey
                                                               @ (Index.Index
                                                                    n1 n2 n3 n4 n5 n6 n7 n8)
                                                               @ a
                                                               lvl219
                                                               (Data.Map.Internal.fromList
                                                                  @ (Index.Index
                                                                       n1 n2 n3 n4 n5 n6 n7 n8)
                                                                  @ a
                                                                  (TensorF.flatAreaMap34
                                                                     @ n1
                                                                     @ n2
                                                                     @ n3
                                                                     @ n4
                                                                     @ n5
                                                                     @ n6
                                                                     @ n7
                                                                     @ n8)
                                                                  (GHC.List.zip
                                                                     @ (Index.Uinds_20 n1,
                                                                        Index.Linds_20 n2,
                                                                        Index.Uinds_19 n3,
                                                                        Index.Linds_19 n4,
                                                                        Index.Uinds_9 n5,
                                                                        Index.Linds_9 n6,
                                                                        Index.Uinds_3 n7,
                                                                        Index.Linds_3 n8)
                                                                     @ a
                                                                     indList
                                                                     ({__scc {main:TensorF.tensor2Map.valueList} True True} GHC.Base.map
                                                                                                                              @ (Index.Uinds_20
                                                                                                                                   n1,
                                                                                                                                 Index.Linds_20
                                                                                                                                   n2,
                                                                                                                                 Index.Uinds_19
                                                                                                                                   n3,
                                                                                                                                 Index.Linds_19
                                                                                                                                   n4,
                                                                                                                                 Index.Uinds_9
                                                                                                                                   n5,
                                                                                                                                 Index.Linds_9
                                                                                                                                   n6,
                                                                                                                                 Index.Uinds_3
                                                                                                                                   n7,
                                                                                                                                 Index.Linds_3
                                                                                                                                   n8)
                                                                                                                              @ a
                                                                                                                              f
                                                                                                                              indList))) }) -}
c92b47faeb86dd8a9a4c166c874c5e94
  tensorAdd ::
    GHC.Num.Num a =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><S,1*U(C(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (w2 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w1 of ww { TensorF.Tensor ww28 ->
                 case w2 of ww29 { TensorF.Tensor ww30 ->
                 {__scc {main:TensorF.tensorAdd} True False} TensorF.Tensor
                                                               @ n1
                                                               @ n2
                                                               @ n3
                                                               @ n4
                                                               @ n5
                                                               @ n6
                                                               @ n7
                                                               @ n8
                                                               @ a
                                                               (\ (r1 :: (Index.Uinds_20 n1,
                                                                          Index.Linds_20 n2,
                                                                          Index.Uinds_19 n3,
                                                                          Index.Linds_19 n4,
                                                                          Index.Uinds_9 n5,
                                                                          Index.Linds_9 n6,
                                                                          Index.Uinds_3 n7,
                                                                          Index.Linds_3 n8)) ->
                                                                {__scc {main:TensorF.tensorAdd} False True} GHC.Num.+
                                                                                                              @ a
                                                                                                              w
                                                                                                              (ww28
                                                                                                                 r1)
                                                                                                              (ww30
                                                                                                                 r1)) } }) -}
1e8357e66b44ea8ce5746ce5287a1fe7
  tensorContract_19 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n3,
     GHC.TypeNats.KnownNat n4) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n3)
                   (w2 :: GHC.TypeNats.KnownNat n4)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 (n3 GHC.TypeNats.+ 1) (n4 GHC.TypeNats.+ 1) n5 n6 n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww28 ->
                 case TensorF.$wtensorContract_19
                        @ a
                        @ n3
                        @ n4
                        @ n1
                        @ n2
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        w3
                        ww28 of ww29 { Unit# ww30 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww30 } }) -}
cbfd79a3d14fb85e828acee5418a53e8
  tensorContract_20 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n1,
     GHC.TypeNats.KnownNat n2) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n1)
                   (w2 :: GHC.TypeNats.KnownNat n2)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            (n1 GHC.TypeNats.+ 1) (n2 GHC.TypeNats.+ 1) n3 n4 n5 n6 n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww28 ->
                 case TensorF.$wtensorContract_20
                        @ a
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        w3
                        ww28 of ww29 { Unit# ww30 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww30 } }) -}
f69290641074ce431388da325e2a191c
  tensorContract_3 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n7,
     GHC.TypeNats.KnownNat n8) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1) a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n7)
                   (w2 :: GHC.TypeNats.KnownNat n8)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 n3 n4 n5 n6 (n7 GHC.TypeNats.+ 1) (n8 GHC.TypeNats.+ 1) a) ->
                 case w4 of ww { TensorF.Tensor ww28 ->
                 case TensorF.$wtensorContract_3
                        @ a
                        @ n7
                        @ n8
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        w
                        w3
                        ww28 of ww29 { Unit# ww30 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww30 } }) -}
0c30a0210600ac9c07ac80b9554e4a41
  tensorContract_9 ::
    (GHC.Num.Num a, GHC.TypeNats.KnownNat n5,
     GHC.TypeNats.KnownNat n6) =>
    (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor
         n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,C(U))><L,A><L,A><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.TypeNats.KnownNat n5)
                   (w2 :: GHC.TypeNats.KnownNat n6)
                   (w3 :: (GHC.Types.Int, GHC.Types.Int))
                   (w4 :: TensorF.Tensor
                            n1 n2 n3 n4 (n5 GHC.TypeNats.+ 1) (n6 GHC.TypeNats.+ 1) n7 n8 a) ->
                 case w4 of ww { TensorF.Tensor ww28 ->
                 case TensorF.$wtensorContract_9
                        @ a
                        @ n5
                        @ n6
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n7
                        @ n8
                        w
                        w3
                        ww28 of ww29 { Unit# ww30 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww30 } }) -}
a9d1748410a24eb674403a999e5b17c4
  tensorIndList ::
    (GHC.TypeNats.KnownNat n1, GHC.TypeNats.KnownNat n2,
     GHC.TypeNats.KnownNat n3, GHC.TypeNats.KnownNat n4,
     GHC.TypeNats.KnownNat n5, GHC.TypeNats.KnownNat n6,
     GHC.TypeNats.KnownNat n7, GHC.TypeNats.KnownNat n8) =>
    TensorF.Rank -> [Index.Index n1 n2 n3 n4 n5 n6 n7 n8]
  {- Arity: 9,
     Strictness: <L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S(S(S)LLLLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))> -}
92c0eb3e169816d97f5fe9d4d7b5ce52
  tensorProd ::
    (GHC.Num.Num a, GHC.Classes.Eq a, GHC.TypeNats.KnownNat n1,
     GHC.TypeNats.KnownNat n2, GHC.TypeNats.KnownNat n3,
     GHC.TypeNats.KnownNat n4, GHC.TypeNats.KnownNat n5,
     GHC.TypeNats.KnownNat n6, GHC.TypeNats.KnownNat n7,
     GHC.TypeNats.KnownNat n8, GHC.TypeNats.KnownNat m1,
     GHC.TypeNats.KnownNat m2, GHC.TypeNats.KnownNat m3,
     GHC.TypeNats.KnownNat m4, GHC.TypeNats.KnownNat m5,
     GHC.TypeNats.KnownNat m6, GHC.TypeNats.KnownNat m7,
     GHC.TypeNats.KnownNat m8) =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a
    -> TensorF.Tensor
         (n1 GHC.TypeNats.+ m1)
         (n2 GHC.TypeNats.+ m2)
         (n3 GHC.TypeNats.+ m3)
         (n4 GHC.TypeNats.+ m4)
         (n5 GHC.TypeNats.+ m5)
         (n6 GHC.TypeNats.+ m6)
         (n7 GHC.TypeNats.+ m7)
         (n8 GHC.TypeNats.+ m8)
         a
  {- Arity: 20,
     Strictness: <L,U(A,A,C(C1(U)),A,A,A,1*C1(U))><L,U(C(C1(U)),A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,1*U(C(U))><S,1*U(C(U))>m,
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ m1 :: GHC.Types.Nat
                   @ m2 :: GHC.Types.Nat
                   @ m3 :: GHC.Types.Nat
                   @ m4 :: GHC.Types.Nat
                   @ m5 :: GHC.Types.Nat
                   @ m6 :: GHC.Types.Nat
                   @ m7 :: GHC.Types.Nat
                   @ m8 :: GHC.Types.Nat
                   ($dNum :: GHC.Num.Num a)
                   ($dEq :: GHC.Classes.Eq a)
                   ($dKnownNat1 :: GHC.TypeNats.KnownNat n1)
                   ($dKnownNat2 :: GHC.TypeNats.KnownNat n2)
                   ($dKnownNat3 :: GHC.TypeNats.KnownNat n3)
                   ($dKnownNat4 :: GHC.TypeNats.KnownNat n4)
                   ($dKnownNat5 :: GHC.TypeNats.KnownNat n5)
                   ($dKnownNat6 :: GHC.TypeNats.KnownNat n6)
                   ($dKnownNat7 :: GHC.TypeNats.KnownNat n7)
                   ($dKnownNat8 :: GHC.TypeNats.KnownNat n8)
                   ($dKnownNat9 :: GHC.TypeNats.KnownNat m1)
                   ($dKnownNat10 :: GHC.TypeNats.KnownNat m2)
                   ($dKnownNat11 :: GHC.TypeNats.KnownNat m3)
                   ($dKnownNat12 :: GHC.TypeNats.KnownNat m4)
                   ($dKnownNat13 :: GHC.TypeNats.KnownNat m5)
                   ($dKnownNat14 :: GHC.TypeNats.KnownNat m6)
                   ($dKnownNat15 :: GHC.TypeNats.KnownNat m7)
                   ($dKnownNat16 :: GHC.TypeNats.KnownNat m8)
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (ds1 :: TensorF.Tensor m1 m2 m3 m4 m5 m6 m7 m8 a) ->
                 let {
                   lvl219 :: a
                   = {__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.h} False True} {__scc {main:TensorF.tensorProd.times} False True} GHC.Num.fromInteger
                                                                                                                                                                      @ a
                                                                                                                                                                      $dNum
                                                                                                                                                                      TensorF.delta_4
                 } in
                 {__scc {main:TensorF.tensorProd} True True} case ds of wild { TensorF.Tensor f ->
                                                             case ds1 of wild1 { TensorF.Tensor g ->
                                                             TensorF.Tensor
                                                               @ (n1 GHC.TypeNats.+ m1)
                                                               @ (n2 GHC.TypeNats.+ m2)
                                                               @ (n3 GHC.TypeNats.+ m3)
                                                               @ (n4 GHC.TypeNats.+ m4)
                                                               @ (n5 GHC.TypeNats.+ m5)
                                                               @ (n6 GHC.TypeNats.+ m6)
                                                               @ (n7 GHC.TypeNats.+ m7)
                                                               @ (n8 GHC.TypeNats.+ m8)
                                                               @ a
                                                               (let {
                                                                  rank :: TensorF.Rank
                                                                  = {__scc {main:TensorF.tensorProd.rank} True True} case TensorF.$wgetRank
                                                                                                                            @ n1
                                                                                                                            @ n2
                                                                                                                            @ n3
                                                                                                                            @ n4
                                                                                                                            @ n5
                                                                                                                            @ n6
                                                                                                                            @ n7
                                                                                                                            @ n8
                                                                                                                            @ a
                                                                                                                            $dKnownNat1
                                                                                                                            $dKnownNat2
                                                                                                                            $dKnownNat3
                                                                                                                            $dKnownNat4
                                                                                                                            $dKnownNat5
                                                                                                                            $dKnownNat6
                                                                                                                            $dKnownNat7
                                                                                                                            $dKnownNat8 of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                                     (ww28,
                                                                                                                      ww29,
                                                                                                                      ww30,
                                                                                                                      ww31,
                                                                                                                      ww32,
                                                                                                                      ww33,
                                                                                                                      ww34,
                                                                                                                      ww35) }
                                                                } in
                                                                {__scc {main:TensorF.tensorProd.h} True True} let {
                                                                                                                g1 :: Index.Index
                                                                                                                        (n1
                                                                                                                         GHC.TypeNats.+ m1)
                                                                                                                        (n2
                                                                                                                         GHC.TypeNats.+ m2)
                                                                                                                        (n3
                                                                                                                         GHC.TypeNats.+ m3)
                                                                                                                        (n4
                                                                                                                         GHC.TypeNats.+ m4)
                                                                                                                        (n5
                                                                                                                         GHC.TypeNats.+ m5)
                                                                                                                        (n6
                                                                                                                         GHC.TypeNats.+ m6)
                                                                                                                        (n7
                                                                                                                         GHC.TypeNats.+ m7)
                                                                                                                        (n8
                                                                                                                         GHC.TypeNats.+ m8)
                                                                                                                      -> (Index.Index
                                                                                                                            n1
                                                                                                                            n2
                                                                                                                            n3
                                                                                                                            n4
                                                                                                                            n5
                                                                                                                            n6
                                                                                                                            n7
                                                                                                                            n8,
                                                                                                                          Index.Index
                                                                                                                            m1
                                                                                                                            m2
                                                                                                                            m3
                                                                                                                            m4
                                                                                                                            m5
                                                                                                                            m6
                                                                                                                            m7
                                                                                                                            m8)
                                                                                                                  {- Arity: 1 -}
                                                                                                                = Index.splitIndex
                                                                                                                    @ n1
                                                                                                                    @ n2
                                                                                                                    @ n3
                                                                                                                    @ n4
                                                                                                                    @ n5
                                                                                                                    @ n6
                                                                                                                    @ n7
                                                                                                                    @ n8
                                                                                                                    @ m1
                                                                                                                    @ m2
                                                                                                                    @ m3
                                                                                                                    @ m4
                                                                                                                    @ m5
                                                                                                                    @ m6
                                                                                                                    @ m7
                                                                                                                    @ m8
                                                                                                                    $dKnownNat1
                                                                                                                    $dKnownNat2
                                                                                                                    $dKnownNat3
                                                                                                                    $dKnownNat4
                                                                                                                    $dKnownNat5
                                                                                                                    $dKnownNat6
                                                                                                                    $dKnownNat7
                                                                                                                    $dKnownNat8
                                                                                                                    $dKnownNat9
                                                                                                                    $dKnownNat10
                                                                                                                    $dKnownNat11
                                                                                                                    $dKnownNat12
                                                                                                                    $dKnownNat13
                                                                                                                    $dKnownNat14
                                                                                                                    $dKnownNat15
                                                                                                                    $dKnownNat16
                                                                                                                    rank
                                                                                                              } in
                                                                                                              \ (r1 :: (Index.Uinds_20
                                                                                                                          (n1
                                                                                                                           GHC.TypeNats.+ m1),
                                                                                                                        Index.Linds_20
                                                                                                                          (n2
                                                                                                                           GHC.TypeNats.+ m2),
                                                                                                                        Index.Uinds_19
                                                                                                                          (n3
                                                                                                                           GHC.TypeNats.+ m3),
                                                                                                                        Index.Linds_19
                                                                                                                          (n4
                                                                                                                           GHC.TypeNats.+ m4),
                                                                                                                        Index.Uinds_9
                                                                                                                          (n5
                                                                                                                           GHC.TypeNats.+ m5),
                                                                                                                        Index.Linds_9
                                                                                                                          (n6
                                                                                                                           GHC.TypeNats.+ m6),
                                                                                                                        Index.Uinds_3
                                                                                                                          (n7
                                                                                                                           GHC.TypeNats.+ m7),
                                                                                                                        Index.Linds_3
                                                                                                                          (n8
                                                                                                                           GHC.TypeNats.+ m8))) ->
                                                                                                              let {
                                                                                                                ds2 :: a
                                                                                                                = f (case g1
                                                                                                                            r1 of wild2 { (,) x ds3 ->
                                                                                                                     x })
                                                                                                              } in
                                                                                                              let {
                                                                                                                y :: a
                                                                                                                = g (case g1
                                                                                                                            r1 of wild2 { (,) ds3 y1 ->
                                                                                                                     y1 })
                                                                                                              } in
                                                                                                              {__scc {main:TensorF.tensorProd.times} True True} case GHC.Classes.==
                                                                                                                                                                       @ a
                                                                                                                                                                       $dEq
                                                                                                                                                                       ds2
                                                                                                                                                                       lvl219 of wild2 {
                                                                                                                                                                  GHC.Types.False
                                                                                                                                                                  -> GHC.Num.*
                                                                                                                                                                       @ a
                                                                                                                                                                       $dNum
                                                                                                                                                                       ds2
                                                                                                                                                                       y
                                                                                                                                                                  GHC.Types.True
                                                                                                                                                                  -> lvl219 }) } }) -}
5133e7d28a7eda6cab1d5af4d8645bc7
  tensorProd1 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.tensorProd4, TensorF.tensorProd2,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.interEqn1_14,
                  TensorF.interEqn1_12, TensorF.flatInterMap3,
                  TensorF.flatInterMap1)) -}
24f41b0e7a4022b14aed48648a181856
  tensorProd2 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} True False} TensorF.tensorProd3) -}
5a9d041ef75c2831e0f6616642739f94
  tensorProd3 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i2} False True} case TensorF.flatAreaSTMap6 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
f47e2c3ea9d38b13607420dcfa3de469
  tensorProd4 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} True False} TensorF.tensorProd5) -}
9b0bd6fb97d985127058afc86707198e
  tensorProd5 :: GHC.Types.Int
  {- Unfolding: ({__scc {main:TensorF.getRank} False True} {__scc {main:TensorF.getRank.i1} False True} case TensorF.flatAreaSTMap6 of wild {
                                                                                                          GHC.Natural.NatS# w
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.wordToInteger
                                                                                                                       w) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 }
                                                                                                          GHC.Natural.NatJ# dt
                                                                                                          -> case GHC.Integer.Type.integerToInt
                                                                                                                    (GHC.Integer.Type.Jp#
                                                                                                                       dt) of wild1 { DEFAULT ->
                                                                                                             GHC.Types.I#
                                                                                                               wild1 } }) -}
84f669fec9852bb36a2960fc6c91b285
  tensorProd6 ::
    (GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int,
     GHC.Types.Int, GHC.Types.Int, GHC.Types.Int, GHC.Types.Int)
  {- Strictness: m,
     Unfolding: ((TensorF.flatInterMap8, TensorF.flatAreaMap14,
                  TensorF.flatAreaMap12, TensorF.flatAreaMap10, TensorF.flatAreaMap8,
                  TensorF.flatAreaMap6, TensorF.flatAreaMap4,
                  TensorF.flatAreaMap1)) -}
8fd488d690ebde5e61118907e04f49bf
  tensorProd_$stensorProd2 ::
    TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
    -> TensorF.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd12 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
1d0d3c15279ca9051263e41c3f5e23ea
  tensorProd_$stensorProd3 ::
    TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> TensorF.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational
    -> TensorF.Tensor
         (1 GHC.TypeNats.+ 1)
         (1 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 1 1 0 0 1 1 1 1 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd13 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (1 GHC.TypeNats.+ 1)
                   @ (1 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
3582d479db2f6d6697f1c0cbbfef720a
  tensorProd_$stensorProd4 ::
    TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational
    -> TensorF.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational
    -> TensorF.Tensor
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 1 1 0 0 0 0 0 0 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 0 0 0 0 1 1 1 1 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd14 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
30d83dd8dd6f6d016b727e54af7e2953
  tensorProd_$stensorProd5 ::
    TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational
    -> TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational
    -> TensorF.Tensor
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (1 GHC.TypeNats.+ 0)
         (0 GHC.TypeNats.+ 1)
         (0 GHC.TypeNats.+ 1)
         GHC.Real.Rational
  {- Arity: 2, Strictness: <S,1*U(C(U(U,U)))><S,1*U(C(U(U,U)))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: TensorF.Tensor 0 0 0 0 1 1 0 0 GHC.Real.Rational)
                   (w1 :: TensorF.Tensor 0 0 0 0 0 0 1 1 GHC.Real.Rational) ->
                 case w of ww { TensorF.Tensor ww28 ->
                 case w1 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$w$stensorProd15 ww28 ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (1 GHC.TypeNats.+ 0)
                   @ (0 GHC.TypeNats.+ 1)
                   @ (0 GHC.TypeNats.+ 1)
                   @ GHC.Real.Rational
                   ww32 } } }) -}
d46811dde16871ab36e87630aaee3a23
  tensorProd_g ::
    Index.Index
      (2 GHC.TypeNats.+ 0)
      (2 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
    -> (Index.Index 2 2 0 0 1 1 1 1, Index.Index 0 1 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 2
                   @ 2
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaSTMap6
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <2>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <2>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd_rank) -}
02fcdb4acc1e1f0bfb72796d79cfcd64
  tensorProd_g1 ::
    Index.Index
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 1 1, Index.Index 1 1 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatInterMap_rank) -}
6fffa04036d577210ade69ab1f80f8ac
  tensorProd_g2 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 0 0 0 0 1 1 0 0)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.tensorProd_rank1) -}
3039f5db9934edac77f664a1499e585f
  tensorProd_g3 ::
    Index.Index
      (1 GHC.TypeNats.+ 1)
      (1 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 1 1 0 0 1 1 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd_rank1) -}
3f469593ac7f1fda9dba0521ecfa0503
  tensorProd_g4 ::
    Index.Index
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 1 1 0 0 0 0 0 0, Index.Index 0 0 0 0 1 1 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 1
                   @ 1
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd_rank1) -}
fe45ff9261a74dbe853022c4b6debf2e
  tensorProd_g5 ::
    Index.Index
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (1 GHC.TypeNats.+ 0)
      (0 GHC.TypeNats.+ 1)
      (0 GHC.TypeNats.+ 1)
    -> (Index.Index 0 0 0 0 1 1 0 0, Index.Index 0 0 0 0 0 0 1 1)
  {- Arity: 1,
     Unfolding: (Index.splitIndex
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 0
                   @ 1
                   @ 1
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap3
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.flatAreaMap16
                     `cast`
                   (Sym (GHC.TypeNats.N:SNat[0]
                             <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                   TensorF.tensorProd_rank2) -}
b4659a86b92e9f5843970fdae4aa1244
  tensorProd_rank :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.tensorProd1) -}
c91d6504495634697a1d0bb8f366c667
  tensorProd_rank1 :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} {__scc {main:TensorF.getRank} True False} TensorF.tensorProd6) -}
1719a3a99d3335d62d12ce77611ca4bd
  tensorProd_rank2 :: TensorF.Rank
  {- Unfolding: ({__scc {main:TensorF.tensorProd} False True} {__scc {main:TensorF.tensorProd.rank} True True} case TensorF.$wgetRank
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ 1
                                                                                                                      @ 1
                                                                                                                      @ 0
                                                                                                                      @ 0
                                                                                                                      @ GHC.Real.Rational
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap16
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                      TensorF.flatAreaMap16
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <1>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <1>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N)
                                                                                                                      TensorF.flatAreaMap3
                                                                                                                        `cast`
                                                                                                                      (Sym (GHC.TypeNats.N:SNat[0]
                                                                                                                                <0>_P) ; Sym (GHC.TypeNats.N:KnownNat[0]) <0>_N) of ww { (#,,,,,,,#) ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ->
                                                                                                               (ww28,
                                                                                                                ww29,
                                                                                                                ww30,
                                                                                                                ww31,
                                                                                                                ww32,
                                                                                                                ww33,
                                                                                                                ww34,
                                                                                                                ww35) }) -}
0874430bae94902c2ca91fe92208b3d4
  tensorSMult ::
    GHC.Num.Num a =>
    a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,A,1*C1(C(U)),A,A,A,A)><L,U>,
     Unfolding: (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   ($dNum :: GHC.Num.Num a)
                   (a1 :: a) ->
                 {__scc {main:TensorF.tensorSMult} True True} let {
                                                                f :: a -> a = GHC.Num.* @ a $dNum a1
                                                              } in
                                                              \ (ds :: TensorF.Tensor
                                                                         n1
                                                                         n2
                                                                         n3
                                                                         n4
                                                                         n5
                                                                         n6
                                                                         n7
                                                                         n8
                                                                         a) ->
                                                              {__scc {main:TensorF.fmap} True True} case ds of wild { TensorF.Tensor g ->
                                                                                                    TensorF.Tensor
                                                                                                      @ n1
                                                                                                      @ n2
                                                                                                      @ n3
                                                                                                      @ n4
                                                                                                      @ n5
                                                                                                      @ n6
                                                                                                      @ n7
                                                                                                      @ n8
                                                                                                      @ a
                                                                                                      (GHC.Base..
                                                                                                         @ a
                                                                                                         @ a
                                                                                                         @ (Index.Index
                                                                                                              n1
                                                                                                              n2
                                                                                                              n3
                                                                                                              n4
                                                                                                              n5
                                                                                                              n6
                                                                                                              n7
                                                                                                              n8)
                                                                                                         f
                                                                                                         g) }) -}
72a32f7270a5cbcad8a3285ae56cc558
  tensorSub ::
    GHC.Num.Num a =>
    TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,C(C(U)),C(U),A,A,C(U))><S,1*U(C(U))><S,1*U(C(U))>m,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   (w :: GHC.Num.Num a)
                   (w1 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a)
                   (w2 :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 case w1 of ww { TensorF.Tensor ww28 ->
                 case w2 of ww29 { TensorF.Tensor ww30 ->
                 case TensorF.$wtensorSub
                        @ a
                        @ n1
                        @ n2
                        @ n3
                        @ n4
                        @ n5
                        @ n6
                        @ n7
                        @ n8
                        w
                        ww28
                        ww30 of ww31 { Unit# ww32 ->
                 TensorF.Tensor
                   @ n1
                   @ n2
                   @ n3
                   @ n4
                   @ n5
                   @ n6
                   @ n7
                   @ n8
                   @ a
                   ww32 } } }) -}
a57527847cbe149b245eba38d6a8bfd2
  tensorTranspose ::
    GHC.Types.Int
    -> (GHC.Types.Int, GHC.Types.Int)
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
    -> TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a
  {- Arity: 3, Strictness: <L,U(U)><L,U(U(U),U(U))><S,1*U(C(U))>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ n1 :: GHC.Types.Nat
                   @ n2 :: GHC.Types.Nat
                   @ n3 :: GHC.Types.Nat
                   @ n4 :: GHC.Types.Nat
                   @ n5 :: GHC.Types.Nat
                   @ n6 :: GHC.Types.Nat
                   @ n7 :: GHC.Types.Nat
                   @ n8 :: GHC.Types.Nat
                   @ a
                   (i :: GHC.Types.Int)
                   (pair :: (GHC.Types.Int, GHC.Types.Int))
                   (ds :: TensorF.Tensor n1 n2 n3 n4 n5 n6 n7 n8 a) ->
                 {__scc {main:TensorF.tensorTranspose} True True} case ds of wild { TensorF.Tensor f ->
                                                                  TensorF.Tensor
                                                                    @ n1
                                                                    @ n2
                                                                    @ n3
                                                                    @ n4
                                                                    @ n5
                                                                    @ n6
                                                                    @ n7
                                                                    @ n8
                                                                    @ a
                                                                    (\ (x :: Index.Index
                                                                               n1
                                                                               n2
                                                                               n3
                                                                               n4
                                                                               n5
                                                                               n6
                                                                               n7
                                                                               n8) ->
                                                                     f (Index.swapPosIndex
                                                                          @ n1
                                                                          @ n2
                                                                          @ n3
                                                                          @ n4
                                                                          @ n5
                                                                          @ n6
                                                                          @ n7
                                                                          @ n8
                                                                          i
                                                                          pair
                                                                          x)) }) -}
c2fa8e8632c1abfc19d55d9fd94aead6
  triangleMap2 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   $dOrd1 :: GHC.Classes.Ord (Data.Sequence.Internal.Seq a)
                   = Data.Sequence.Internal.$fOrdSeq @ a $dOrd
                 } in
                 {__scc {main:TensorF.triangleMap2} True True} Data.Map.Internal.fromList
                                                                 @ (Data.Sequence.Internal.Seq a)
                                                                 @ b
                                                                 $dOrd1
                                                                 (GHC.List.zip
                                                                    @ (Data.Sequence.Internal.Seq a)
                                                                    @ b
                                                                    (TensorF.$wsymIndList
                                                                       @ a
                                                                       $dEnum
                                                                       2#
                                                                       TensorF.flatAreaMap26)
                                                                    (GHC.Enum.enumFrom
                                                                       @ b
                                                                       $dEnum1
                                                                       (GHC.Enum.toEnum
                                                                          @ b
                                                                          $dEnum1
                                                                          TensorF.epsilonMap3)))) -}
512f94c8ab0b3711df202153350f62e1
  triangleMap3 ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(A,A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>,
     Unfolding: (\ @ a
                   @ b
                   ($dEnum :: GHC.Enum.Enum a)
                   ($dEnum1 :: GHC.Enum.Enum b)
                   ($dOrd :: GHC.Classes.Ord a) ->
                 let {
                   $dOrd1 :: GHC.Classes.Ord (Data.Sequence.Internal.Seq a)
                   = Data.Sequence.Internal.$fOrdSeq @ a $dOrd
                 } in
                 {__scc {main:TensorF.triangleMap3} True True} Data.Map.Internal.fromList
                                                                 @ (Data.Sequence.Internal.Seq a)
                                                                 @ b
                                                                 $dOrd1
                                                                 (GHC.List.zip
                                                                    @ (Data.Sequence.Internal.Seq a)
                                                                    @ b
                                                                    (TensorF.$wsymIndList
                                                                       @ a
                                                                       $dEnum
                                                                       3#
                                                                       TensorF.flatAreaMap26)
                                                                    (GHC.Enum.enumFrom
                                                                       @ b
                                                                       $dEnum1
                                                                       (GHC.Enum.toEnum
                                                                          @ b
                                                                          $dEnum1
                                                                          TensorF.epsilonMap3)))) -}
2535d25384381fef22fa2f870ccb1b7e
  triangleMapArea ::
    (GHC.Enum.Enum a, GHC.Enum.Enum b, GHC.Classes.Ord a) =>
    Data.Map.Internal.Map (Data.Sequence.Internal.Seq a) b
  {- Arity: 3,
     Strictness: <S(LLLLLLC(C(S))L),U(C(U),A,C(U),A,A,A,C(C1(U)),A)><L,U(A,A,1*C1(U),A,1*C1(U),A,A,A)><L,U(U(C(C1(U)),A),C(C1(U)),A,A,C(C1(U)),A,A,A)> -}
instance [safe] GHC.Base.Functor [TensorF.Tensor]
  = TensorF.$fFunctorTensor
"SPEC tensorProd @ Rational @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 2 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 2" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      2)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      2)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 2
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 2
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.flatAreaSTMap_$stensorProd
"SPEC tensorProd @ Rational @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.interEqn1_2_$stensorProd
"SPEC tensorProd @ Rational @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 2 @ 2 @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      2)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       2)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 2
                     @ 2
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.interEqn1_2_$stensorProd1
"SPEC tensorProd @ Rational @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.tensorProd_$stensorProd5
"SPEC tensorProd @ Rational @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 0 @ 0" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.tensorProd_$stensorProd2
"SPEC tensorProd @ Rational @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 1 @ 1" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 1
                     @ 1
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.tensorProd_$stensorProd4
"SPEC tensorProd @ Rational @ 1 @ 1 @ 0 @ 0 @ 0 @ 0 @ 0 @ 0 @ 1 @ 1 @ 0 @ 0 @ 1 @ 1 @ 1 @ 1" forall ($dKnownNat1 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat2 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat3 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat4 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat5 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat6 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat7 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat8 :: GHC.TypeNats.KnownNat
                                                                                                                      1)
                                                                                                    ($dKnownNat9 :: GHC.TypeNats.KnownNat
                                                                                                                      0)
                                                                                                    ($dKnownNat10 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat11 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat12 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat13 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat14 :: GHC.TypeNats.KnownNat
                                                                                                                       0)
                                                                                                    ($dKnownNat15 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dKnownNat16 :: GHC.TypeNats.KnownNat
                                                                                                                       1)
                                                                                                    ($dEq :: GHC.Classes.Eq
                                                                                                               GHC.Real.Rational)
                                                                                                    ($dNum :: GHC.Num.Num
                                                                                                                GHC.Real.Rational)
  TensorF.tensorProd @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 0
                     @ 0
                     @ 1
                     @ 1
                     @ 1
                     @ 1
                     $dNum
                     $dEq
                     $dKnownNat16
                     $dKnownNat15
                     $dKnownNat14
                     $dKnownNat13
                     $dKnownNat12
                     $dKnownNat11
                     $dKnownNat10
                     $dKnownNat9
                     $dKnownNat8
                     $dKnownNat7
                     $dKnownNat6
                     $dKnownNat5
                     $dKnownNat4
                     $dKnownNat3
                     $dKnownNat2
                     $dKnownNat1
  = TensorF.tensorProd_$stensorProd3
"SPEC/TensorF $fEqInd _ @ Lind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Eq Index.Lind_19)
  Index.$fEqInd @ n @ Index.Lind_19 v = TensorF.$s$fEqInd3 @ n
"SPEC/TensorF $fEqInd _ @ Lind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Eq Index.Lind_20)
  Index.$fEqInd @ n @ Index.Lind_20 v = TensorF.$s$fEqInd1 @ n
"SPEC/TensorF $fEqInd _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                  (v :: GHC.Classes.Eq Index.Lind_3)
  Index.$fEqInd @ n @ Index.Lind_3 v = TensorF.$s$fEqInd7 @ n
"SPEC/TensorF $fEqInd _ @ Lind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                  (v :: GHC.Classes.Eq Index.Lind_9)
  Index.$fEqInd @ n @ Index.Lind_9 v = TensorF.$s$fEqInd5 @ n
"SPEC/TensorF $fEqInd _ @ Uind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Eq Index.Uind_19)
  Index.$fEqInd @ n @ Index.Uind_19 v = TensorF.$s$fEqInd2 @ n
"SPEC/TensorF $fEqInd _ @ Uind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Eq Index.Uind_20)
  Index.$fEqInd @ n @ Index.Uind_20 v = TensorF.$s$fEqInd @ n
"SPEC/TensorF $fEqInd _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                  (v :: GHC.Classes.Eq Index.Uind_3)
  Index.$fEqInd @ n @ Index.Uind_3 v = TensorF.$s$fEqInd6 @ n
"SPEC/TensorF $fEqInd _ @ Uind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                  (v :: GHC.Classes.Eq Index.Uind_9)
  Index.$fEqInd @ n @ Index.Uind_9 v = TensorF.$s$fEqInd4 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Lind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Lind_19)
  Index.$fEqInd_$c/= @ n @ Index.Lind_19 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=3 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Lind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Lind_20)
  Index.$fEqInd_$c/= @ n @ Index.Lind_20 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=1 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Lind_3)
  Index.$fEqInd_$c/= @ n @ Index.Lind_3 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=7 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Lind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Lind_9)
  Index.$fEqInd_$c/= @ n @ Index.Lind_9 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=5 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Uind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Uind_19)
  Index.$fEqInd_$c/= @ n @ Index.Uind_19 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=2 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Uind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Uind_20)
  Index.$fEqInd_$c/= @ n @ Index.Uind_20 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/= @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Uind_3)
  Index.$fEqInd_$c/= @ n @ Index.Uind_3 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=6 @ n
"SPEC/TensorF $fEqInd_$c/= _ @ Uind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Uind_9)
  Index.$fEqInd_$c/= @ n @ Index.Uind_9 $dEq
  = TensorF.$s$fEqInd_$s$fEqInd_$c/=4 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Lind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Lind_19)
  Index.$fEqInd_$c== @ n @ Index.Lind_19 $dEq
  = TensorF.$s$fEqInd_$c==3 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Lind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Lind_20)
  Index.$fEqInd_$c== @ n @ Index.Lind_20 $dEq
  = TensorF.$s$fEqInd_$c==1 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Lind_3)
  Index.$fEqInd_$c== @ n @ Index.Lind_3 $dEq
  = TensorF.$s$fEqInd_$c==7 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Lind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Lind_9)
  Index.$fEqInd_$c== @ n @ Index.Lind_9 $dEq
  = TensorF.$s$fEqInd_$c==5 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Uind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Uind_19)
  Index.$fEqInd_$c== @ n @ Index.Uind_19 $dEq
  = TensorF.$s$fEqInd_$c==2 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Uind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                        ($dEq :: GHC.Classes.Eq Index.Uind_20)
  Index.$fEqInd_$c== @ n @ Index.Uind_20 $dEq
  = TensorF.$s$fEqInd_$c== @ n
"SPEC/TensorF $fEqInd_$c== _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Uind_3)
  Index.$fEqInd_$c== @ n @ Index.Uind_3 $dEq
  = TensorF.$s$fEqInd_$c==6 @ n
"SPEC/TensorF $fEqInd_$c== _ @ Uind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                       ($dEq :: GHC.Classes.Eq Index.Uind_9)
  Index.$fEqInd_$c== @ n @ Index.Uind_9 $dEq
  = TensorF.$s$fEqInd_$c==4 @ n
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 0 Uind_20) @ (Ind
                                                   0 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   1
                                                                                                   Uind_9) @ (Ind
                                                                                                                1
                                                                                                                Lind_9) @ (Ind
                                                                                                                             1
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          1
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_9))
v4 :: GHC.Classes.Ord
ndex.Ind
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       1
ndex.Uind_9))
v3 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_19))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (v2 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (v :: GHC.Classes.Ord
ndex.Ind

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Index.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 0 Index.Uind_20)
                             @ (Index.Ind 0 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 1 Index.Uind_9)
                             @ (Index.Ind 1 Index.Lind_9)
                             @ (Index.Ind 1 Index.Uind_3)
                             @ (Index.Ind 1 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)9
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 0 Uind_20) @ (Ind
                                                   1 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   0
                                                                                                   Uind_9) @ (Ind
                                                                                                                0
                                                                                                                Lind_9) @ (Ind
                                                                                                                             0
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          0
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Index.Lind_9))
v4 :: GHC.Classes.Ord
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Index.Ind

ndex.Uind_9))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (v3 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_19))
v2 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
v :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 0 Index.Uind_20)
                             @ (Index.Ind 1 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 0 Index.Uind_9)
                             @ (Index.Ind 0 Index.Lind_9)
                             @ (Index.Ind 0 Index.Uind_3)
                             @ (Index.Ind 0 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)12
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 0 Uind_20) @ (Ind
                                                   1 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   0
                                                                                                   Uind_9) @ (Ind
                                                                                                                0
                                                                                                                Lind_9) @ (Ind
                                                                                                                             1
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          1
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_9))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (v4 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_9))
v3 :: GHC.Classes.Ord
ndex.Ind
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       0
ndex.Lind_19))
v2 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
v :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 0 Index.Uind_20)
                             @ (Index.Ind 1 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 0 Index.Uind_9)
                             @ (Index.Ind 0 Index.Lind_9)
                             @ (Index.Ind 1 Index.Uind_3)
                             @ (Index.Ind 1 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)11
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 1 Uind_20) @ (Ind
                                                   1 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   0
                                                                                                   Uind_9) @ (Ind
                                                                                                                0
                                                                                                                Lind_9) @ (Ind
                                                                                                                             1
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          1
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       0
ndex.Lind_9))
v4 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_9))
v3 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_19))
v2 :: GHC.Classes.Ord
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Index.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
v :: GHC.Classes.Ord
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (Index.Ind

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Index.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 1 Index.Uind_20)
                             @ (Index.Ind 1 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 0 Index.Uind_9)
                             @ (Index.Ind 0 Index.Lind_9)
                             @ (Index.Ind 1 Index.Uind_3)
                             @ (Index.Ind 1 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)8
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 1 Uind_20) @ (Ind
                                                   1 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   0
                                                                                                   Uind_9) @ (Ind
                                                                                                                0
                                                                                                                Lind_9) @ (Ind
                                                                                                                             2
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          2
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_9))
v4 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_9))
v3 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_19))
v2 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
v :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 1 Index.Uind_20)
                             @ (Index.Ind 1 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 0 Index.Uind_9)
                             @ (Index.Ind 0 Index.Lind_9)
                             @ (Index.Ind 2 Index.Uind_3)
                             @ (Index.Ind 2 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)6
"SPEC/TensorF $fOrd(,,,,,,,) @ (Ind 1 Uind_20) @ (Ind
                                                   1 Lind_20) @ (Ind 0 Uind_19) @ (Ind
                                                                                     0
                                                                                     Lind_19) @ (Ind
                                                                                                   1
                                                                                                   Uind_9) @ (Ind
                                                                                                                1
                                                                                                                Lind_9) @ (Ind
                                                                                                                             1
                                                                                                                             Uind_3) @ (Ind
                                                                                                                                          1
                                                                                                                                          Lind_3)" [orphan] forall (v7 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_3))
v6 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_3))
v5 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_9))
v4 :: GHC.Classes.Ord
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Index.Ind

ndex.Uind_9))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (v3 :: GHC.Classes.Ord
ndex.Ind

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Index.Lind_19))
v2 :: GHC.Classes.Ord
ndex.Ind

ndex.Uind_19))
v1 :: GHC.Classes.Ord
ndex.Ind

ndex.Lind_20))
v :: GHC.Classes.Ord
ndex.Ind
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      1
ndex.Uind_20))
  GHC.Classes.$fOrd(,,,,,,,) @ (Index.Ind 1 Index.Uind_20)
                             @ (Index.Ind 1 Index.Lind_20)
                             @ (Index.Ind 0 Index.Uind_19)
                             @ (Index.Ind 0 Index.Lind_19)
                             @ (Index.Ind 1 Index.Uind_9)
                             @ (Index.Ind 1 Index.Lind_9)
                             @ (Index.Ind 1 Index.Uind_3)
                             @ (Index.Ind 1 Index.Lind_3)
                             v
                             v1
                             v2
                             v3
                             v4
                             v5
                             v6
                             v7
  = TensorF.$s$fOrd(,,,,,,,)10
"SPEC/TensorF $fOrdInd _ @ Lind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                    (v :: GHC.Classes.Ord Index.Lind_19)
  Index.$fOrdInd @ n @ Index.Lind_19 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd4 @ n
"SPEC/TensorF $fOrdInd _ @ Lind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                    (v :: GHC.Classes.Ord Index.Lind_20)
  Index.$fOrdInd @ n @ Index.Lind_20 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd6 @ n
"SPEC/TensorF $fOrdInd _ @ Lind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Ord Index.Lind_3)
  Index.$fOrdInd @ n @ Index.Lind_3 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd @ n
"SPEC/TensorF $fOrdInd _ @ Lind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Ord Index.Lind_9)
  Index.$fOrdInd @ n @ Index.Lind_9 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd2 @ n
"SPEC/TensorF $fOrdInd _ @ Uind_19" [orphan] forall @ n :: GHC.Types.Nat
                                                    (v :: GHC.Classes.Ord Index.Uind_19)
  Index.$fOrdInd @ n @ Index.Uind_19 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd5 @ n
"SPEC/TensorF $fOrdInd _ @ Uind_20" [orphan] forall @ n :: GHC.Types.Nat
                                                    (v :: GHC.Classes.Ord Index.Uind_20)
  Index.$fOrdInd @ n @ Index.Uind_20 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd7 @ n
"SPEC/TensorF $fOrdInd _ @ Uind_3" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Ord Index.Uind_3)
  Index.$fOrdInd @ n @ Index.Uind_3 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd1 @ n
"SPEC/TensorF $fOrdInd _ @ Uind_9" [orphan] forall @ n :: GHC.Types.Nat
                                                   (v :: GHC.Classes.Ord Index.Uind_9)
  Index.$fOrdInd @ n @ Index.Uind_9 v
  = TensorF.$s$fOrd(,,,,,,,)_$s$fOrdInd3 @ n
"SPEC/TensorF contractionIndexList_20 @ 0 @ 1 _ _ _ _ _ _" [orphan] [0] forall @ n3 :: GHC.Types.Nat
                                                                               @ n4 :: GHC.Types.Nat
                                                                               @ n5 :: GHC.Types.Nat
                                                                               @ n6 :: GHC.Types.Nat
                                                                               @ n7 :: GHC.Types.Nat
                                                                               @ n8 :: GHC.Types.Nat
                                                                               (w1 :: GHC.TypeNats.KnownNat
                                                                                        1)
                                                                               (w :: GHC.TypeNats.KnownNat
                                                                                       0)
  Index.contractionIndexList_20 @ 0
                                @ 1
                                @ n3
                                @ n4
                                @ n5
                                @ n6
                                @ n7
                                @ n8
                                w
                                w1
  = TensorF.$scontractionIndexList_1 @ n3 @ n4 @ n5 @ n6 @ n7 @ n8
"SPEC/TensorF contractionIndexList_20 @ 1 @ 2 _ _ _ _ _ _" [orphan] [0] forall @ n3 :: GHC.Types.Nat
                                                                               @ n4 :: GHC.Types.Nat
                                                                               @ n5 :: GHC.Types.Nat
                                                                               @ n6 :: GHC.Types.Nat
                                                                               @ n7 :: GHC.Types.Nat
                                                                               @ n8 :: GHC.Types.Nat
                                                                               (w1 :: GHC.TypeNats.KnownNat
                                                                                        2)
                                                                               (w :: GHC.TypeNats.KnownNat
                                                                                       1)
  Index.contractionIndexList_20 @ 1
                                @ 2
                                @ n3
                                @ n4
                                @ n5
                                @ n6
                                @ n7
                                @ n8
                                w
                                w1
  = TensorF.$scontractionIndexList_20 @ n3 @ n4 @ n5 @ n6 @ n7 @ n8
"SPEC/TensorF contractionIndexList_3 @ 0 @ 0 _ _ _ _ _ _" [orphan] [0] forall @ n1 :: GHC.Types.Nat
                                                                              @ n2 :: GHC.Types.Nat
                                                                              @ n3 :: GHC.Types.Nat
                                                                              @ n4 :: GHC.Types.Nat
                                                                              @ n5 :: GHC.Types.Nat
                                                                              @ n6 :: GHC.Types.Nat
                                                                              (w1 :: GHC.TypeNats.KnownNat
                                                                                       0)
                                                                              (w :: GHC.TypeNats.KnownNat
                                                                                      0)
  Index.contractionIndexList_3 @ 0
                               @ 0
                               @ n1
                               @ n2
                               @ n3
                               @ n4
                               @ n5
                               @ n6
                               w
                               w1
  = TensorF.$scontractionIndexList_5 @ n1 @ n2 @ n3 @ n4 @ n5 @ n6
"SPEC/TensorF contractionIndexList_3 @ 1 @ 1 _ _ _ _ _ _" [orphan] [0] forall @ n1 :: GHC.Types.Nat
                                                                              @ n2 :: GHC.Types.Nat
                                                                              @ n3 :: GHC.Types.Nat
                                                                              @ n4 :: GHC.Types.Nat
                                                                              @ n5 :: GHC.Types.Nat
                                                                              @ n6 :: GHC.Types.Nat
                                                                              (w1 :: GHC.TypeNats.KnownNat
                                                                                       1)
                                                                              (w :: GHC.TypeNats.KnownNat
                                                                                      1)
  Index.contractionIndexList_3 @ 1
                               @ 1
                               @ n1
                               @ n2
                               @ n3
                               @ n4
                               @ n5
                               @ n6
                               w
                               w1
  = TensorF.$scontractionIndexList_4 @ n1 @ n2 @ n3 @ n4 @ n5 @ n6
"SPEC/TensorF contractionIndexList_3 @ 2 @ 2 _ _ _ _ _ _" [orphan] [0] forall @ n1 :: GHC.Types.Nat
                                                                              @ n2 :: GHC.Types.Nat
                                                                              @ n3 :: GHC.Types.Nat
                                                                              @ n4 :: GHC.Types.Nat
                                                                              @ n5 :: GHC.Types.Nat
                                                                              @ n6 :: GHC.Types.Nat
                                                                              (w1 :: GHC.TypeNats.KnownNat
                                                                                       2)
                                                                              (w :: GHC.TypeNats.KnownNat
                                                                                      2)
  Index.contractionIndexList_3 @ 2
                               @ 2
                               @ n1
                               @ n2
                               @ n3
                               @ n4
                               @ n5
                               @ n6
                               w
                               w1
  = TensorF.$scontractionIndexList_2 @ n1 @ n2 @ n3 @ n4 @ n5 @ n6
"SPEC/TensorF contractionIndexList_3 @ 3 @ 3 _ _ _ _ _ _" [orphan] [0] forall @ n1 :: GHC.Types.Nat
                                                                              @ n2 :: GHC.Types.Nat
                                                                              @ n3 :: GHC.Types.Nat
                                                                              @ n4 :: GHC.Types.Nat
                                                                              @ n5 :: GHC.Types.Nat
                                                                              @ n6 :: GHC.Types.Nat
                                                                              (w1 :: GHC.TypeNats.KnownNat
                                                                                       3)
                                                                              (w :: GHC.TypeNats.KnownNat
                                                                                      3)
  Index.contractionIndexList_3 @ 3
                               @ 3
                               @ n1
                               @ n2
                               @ n3
                               @ n4
                               @ n5
                               @ n6
                               w
                               w1
  = TensorF.$scontractionIndexList_3 @ n1 @ n2 @ n3 @ n4 @ n5 @ n6
"SPEC/TensorF fromList @ (Index 0 0 0 0 0 0 0 4) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 0 0 0 4))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 0, Index.Linds_3 4)
                             @ a
                             $dOrd
  = TensorF.$sfromList1 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 0 1 2 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 0 1 2 0))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 1, Index.Uinds_3 2, Index.Linds_3 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList5 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 1 0 0 2) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 1 0 0 2))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 1,
                                Index.Linds_9 0, Index.Uinds_3 0, Index.Linds_3 2)
                             @ a
                             $dOrd
  = TensorF.$sfromList6 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 0 1 1 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 0 1 1 1 1))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 1,
                                Index.Linds_9 1, Index.Uinds_3 1, Index.Linds_3 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList9 @ a
"SPEC/TensorF fromList @ (Index 0 0 0 1 0 0 3 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 0 1 0 0 3 0))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 1, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 3, Index.Linds_3 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList3 @ a
"SPEC/TensorF fromList @ (Index 0 0 1 0 0 0 0 3) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 0 1 0 0 0 0 3))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 0,
                                Index.Uinds_19 1, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 0, Index.Linds_3 3)
                             @ a
                             $dOrd
  = TensorF.$sfromList4 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 0 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 0 0))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 0, Index.Linds_3 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList12 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 1 1))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 1, Index.Linds_3 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList11 @ a
"SPEC/TensorF fromList @ (Index 0 1 0 0 0 0 4 0) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   0 1 0 0 0 0 4 0))
  Data.Map.Internal.fromList @ (Index.Uinds_20 0, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 4, Index.Linds_3 0)
                             @ a
                             $dOrd
  = TensorF.$sfromList2 @ a
"SPEC/TensorF fromList @ (Index 1 0 0 0 0 0 0 4) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 0 0 0 0 0 0 4))
  Data.Map.Internal.fromList @ (Index.Uinds_20 1, Index.Linds_20 0,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 0, Index.Linds_3 4)
                             @ a
                             $dOrd
  = TensorF.$sfromList @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 0 0 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 0 0 1 1))
  Data.Map.Internal.fromList @ (Index.Uinds_20 1, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 1, Index.Linds_3 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList8 @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 0 0 2 2) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 0 0 2 2))
  Data.Map.Internal.fromList @ (Index.Uinds_20 1, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 0,
                                Index.Linds_9 0, Index.Uinds_3 2, Index.Linds_3 2)
                             @ a
                             $dOrd
  = TensorF.$sfromList7 @ a
"SPEC/TensorF fromList @ (Index 1 1 0 0 1 1 1 1) _" [orphan] forall @ a
                                                                    ($dOrd :: GHC.Classes.Ord
                                                                                (Index.Index
                                                                                   1 1 0 0 1 1 1 1))
  Data.Map.Internal.fromList @ (Index.Uinds_20 1, Index.Linds_20 1,
                                Index.Uinds_19 0, Index.Linds_19 0, Index.Uinds_9 1,
                                Index.Linds_9 1, Index.Uinds_3 1, Index.Linds_3 1)
                             @ a
                             $dOrd
  = TensorF.$sfromList10 @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

